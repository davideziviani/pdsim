/* Generated by Cython 0.22 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [], 
        "language": "c++"
    }
}
END: Cython Metadata */

#define PY_SSIZE_T_CLEAN
#ifndef CYTHON_USE_PYLONG_INTERNALS
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 0
#else
#include "pyconfig.h"
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 1
#else
#define CYTHON_USE_PYLONG_INTERNALS 0
#endif
#endif
#endif
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_22"
#include <stddef.h>
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
#define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#if PY_VERSION_HEX < 0x030400a1 && !defined(Py_TPFLAGS_HAVE_FINALIZE)
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ? \
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
  #define __Pyx_PyFrozenSet_Size(s)         PyObject_Size(s)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ? \
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
  #define __Pyx_PyFrozenSet_Size(s)         PySet_Size(s)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  /* Initialize NaN. The sign is irrelevant, an exponent with all bits 1 and
   a nonzero mantissa means NaN. If the first bit in the mantissa is 1, it is
   a quiet NaN. */
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#define __Pyx_void_to_None(void_result) (void_result, Py_INCREF(Py_None), Py_None)
#ifdef __cplusplus
template<typename T>
void __Pyx_call_destructor(T* x) {
    x->~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(T& ref) : ptr(&ref) { }
    T *operator->() { return ptr; }
    operator T&() { return *ptr; }
  private:
    T *ptr;
};
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__PDSim__scroll__common_scroll_geo
#define __PYX_HAVE_API__PDSim__scroll__common_scroll_geo
#include "string.h"
#include "stdio.h"
#include "stdlib.h"
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#include "math.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (    \
    (sizeof(type) < sizeof(Py_ssize_t))  ||             \
    (sizeof(type) > sizeof(Py_ssize_t) &&               \
          likely(v < (type)PY_SSIZE_T_MAX ||            \
                 v == (type)PY_SSIZE_T_MAX)  &&         \
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||       \
                                v == (type)PY_SSIZE_T_MIN)))  ||  \
    (sizeof(type) == sizeof(Py_ssize_t) &&              \
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||        \
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "PDSim\\scroll\\common_scroll_geo.pyx",
  "PDSim\\scroll\\common_scroll_geo.pxd",
  "__init__.pxd",
  "type.pxd",
};
#define IS_UNSIGNED(type) (((type) -1) > 0)
struct __Pyx_StructField_;
#define __PYX_BUF_FLAGS_PACKED_STRUCT (1 << 0)
typedef struct {
  const char* name;
  struct __Pyx_StructField_* fields;
  size_t size;
  size_t arraysize[8];
  int ndim;
  char typegroup;
  char is_unsigned;
  int flags;
} __Pyx_TypeInfo;
typedef struct __Pyx_StructField_ {
  __Pyx_TypeInfo* type;
  const char* name;
  size_t offset;
} __Pyx_StructField;
typedef struct {
  __Pyx_StructField* field;
  size_t parent_offset;
} __Pyx_BufFmt_StackElem;
typedef struct {
  __Pyx_StructField root;
  __Pyx_BufFmt_StackElem* head;
  size_t fmt_offset;
  size_t new_count, enc_count;
  size_t struct_alignment;
  int is_complex;
  char enc_type;
  char new_packmode;
  char enc_packmode;
  char is_valid_array;
} __Pyx_BufFmt_Context;


/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":726
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":727
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":728
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":729
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":733
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":734
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":735
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":736
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":740
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":741
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":750
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":751
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":752
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":754
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":755
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":756
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":758
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":759
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":761
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":762
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":763
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif


/*--- Type declarations ---*/
struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct;
struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass;
struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute;
struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes;
struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":765
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":766
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":767
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":769
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;
struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo_coords_norm;
struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo_coords_inv;
struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo__coords_inv_np;
struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo__coords_inv_d;

/* "PDSim\scroll\common_scroll_geo.pxd":23
 *     cdef public CVInvolute Inner, Outer
 * 
 * cdef enum involute_index:             # <<<<<<<<<<<<<<
 *     INVOLUTE_FI
 *     INVOLUTE_FO
 */
enum __pyx_t_5PDSim_6scroll_17common_scroll_geo_involute_index {
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_FI,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_FO,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_OI,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_OO
};

/* "PDSim\scroll\common_scroll_geo.pxd":29
 *     INVOLUTE_OO
 * 
 * cdef enum sides:             # <<<<<<<<<<<<<<
 *     UP
 *     DOWN
 */
enum __pyx_t_5PDSim_6scroll_17common_scroll_geo_sides {
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_UP,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_DOWN,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_MID
};

/* "PDSim\scroll\common_scroll_geo.pxd":34
 *     MID
 * 
 * cdef enum compressor_CV_indices:             # <<<<<<<<<<<<<<
 *     keyIsa, keyIs1, keyIs2, keyId1, keyId2,
 *     keyIdd, keyIddd
 */
enum __pyx_t_5PDSim_6scroll_17common_scroll_geo_compressor_CV_indices {
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIsa,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIs1,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIs2,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyId1,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyId2,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIdd,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIddd,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_1 = 1001,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_1 = 2001,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_2 = 1002,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_2 = 2002,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_3 = 1003,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_3 = 2003,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_4 = 1004,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_4 = 2004,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_5 = 1005,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_5 = 2005,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_6 = 1006,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_6 = 2006,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_7 = 1007,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_7 = 2007,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_8 = 1008,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_8 = 2008,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_9 = 1009,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_9 = 2009,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_10 = 1010,
  __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_10 = 2010
};

/* "PDSim\scroll\common_scroll_geo.pxd":73
 *     np.ndarray
 * 
 * cpdef tuple coords_norm(phi_vec, geoVals geo, double theta, flag = *)             # <<<<<<<<<<<<<<
 * cpdef tuple coords_inv(phi_vec, geoVals geo, double theta, flag = *)
 * cpdef tuple _coords_inv_np(np.ndarray[np.float_t] phi, geoVals geo, double theta, flag = *)
 */
struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo_coords_norm {
  int __pyx_n;
  PyObject *flag;
};

/* "PDSim\scroll\common_scroll_geo.pxd":74
 * 
 * cpdef tuple coords_norm(phi_vec, geoVals geo, double theta, flag = *)
 * cpdef tuple coords_inv(phi_vec, geoVals geo, double theta, flag = *)             # <<<<<<<<<<<<<<
 * cpdef tuple _coords_inv_np(np.ndarray[np.float_t] phi, geoVals geo, double theta, flag = *)
 * cpdef tuple _coords_inv_d(double phi, geoVals geo, double theta, flag = *)
 */
struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo_coords_inv {
  int __pyx_n;
  PyObject *flag;
};

/* "PDSim\scroll\common_scroll_geo.pxd":75
 * cpdef tuple coords_norm(phi_vec, geoVals geo, double theta, flag = *)
 * cpdef tuple coords_inv(phi_vec, geoVals geo, double theta, flag = *)
 * cpdef tuple _coords_inv_np(np.ndarray[np.float_t] phi, geoVals geo, double theta, flag = *)             # <<<<<<<<<<<<<<
 * cpdef tuple _coords_inv_d(double phi, geoVals geo, double theta, flag = *)
 * 
 */
struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo__coords_inv_np {
  int __pyx_n;
  PyObject *flag;
};

/* "PDSim\scroll\common_scroll_geo.pxd":76
 * cpdef tuple coords_inv(phi_vec, geoVals geo, double theta, flag = *)
 * cpdef tuple _coords_inv_np(np.ndarray[np.float_t] phi, geoVals geo, double theta, flag = *)
 * cpdef tuple _coords_inv_d(double phi, geoVals geo, double theta, flag = *)             # <<<<<<<<<<<<<<
 * 
 * cdef _coords_inv_d_int(double phi, geoVals geo, double theta, int flag, double *x, double *y)
 */
struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo__coords_inv_d {
  int __pyx_n;
  PyObject *flag;
};

/* "PDSim\scroll\common_scroll_geo.pxd":10
 * from libc.math cimport sqrt,sin,cos,tan,atan2,acos,floor,M_PI as pi,pow
 * 
 * cdef class VdVstruct:             # <<<<<<<<<<<<<<
 *     cdef public double V,dV
 * 
 */
struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct {
  PyObject_HEAD
  double V;
  double dV;
};


/* "PDSim\scroll\common_scroll_geo.pxd":13
 *     cdef public double V,dV
 * 
 * cdef class HTAnglesClass:             # <<<<<<<<<<<<<<
 *     cdef public double phi_1_i, phi_2_i, phi_1_o, phi_2_o, phi_i0, phi_o0
 * 
 */
struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass {
  PyObject_HEAD
  double phi_1_i;
  double phi_2_i;
  double phi_1_o;
  double phi_2_o;
  double phi_i0;
  double phi_o0;
};


/* "PDSim\scroll\common_scroll_geo.pxd":16
 *     cdef public double phi_1_i, phi_2_i, phi_1_o, phi_2_o, phi_i0, phi_o0
 * 
 * cdef class CVInvolute:             # <<<<<<<<<<<<<<
 *     cdef public double phi_max, phi_min, phi_0
 *     cdef public int involute
 */
struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute {
  PyObject_HEAD
  double phi_max;
  double phi_min;
  double phi_0;
  int involute;
};


/* "PDSim\scroll\common_scroll_geo.pxd":20
 *     cdef public int involute
 * 
 * cdef class CVInvolutes:             # <<<<<<<<<<<<<<
 *     cdef public CVInvolute Inner, Outer
 * 
 */
struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes {
  PyObject_HEAD
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *Inner;
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *Outer;
};


/* "PDSim\scroll\common_scroll_geo.pxd":49
 * 
 * #Take over the geo class with strict typing
 * cdef class geoVals:             # <<<<<<<<<<<<<<
 *     cdef public double h,ro,rb,t
 *     cdef public double phi_fi0,phi_fis,phi_fie,phi_fo0,phi_fos,phi_foe, phi_oi0,phi_ois,phi_oie, phi_oo0,phi_oos,phi_ooe
 */
struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals {
  PyObject_HEAD
  struct __pyx_vtabstruct_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_vtab;
  double h;
  double ro;
  double rb;
  double t;
  double phi_fi0;
  double phi_fis;
  double phi_fie;
  double phi_fo0;
  double phi_fos;
  double phi_foe;
  double phi_oi0;
  double phi_ois;
  double phi_oie;
  double phi_oo0;
  double phi_oos;
  double phi_ooe;
  double xa_arc1;
  double ya_arc1;
  double ra_arc1;
  double t1_arc1;
  double t2_arc1;
  double xa_arc2;
  double ya_arc2;
  double ra_arc2;
  double t1_arc2;
  double t2_arc2;
  double b_line;
  double t1_line;
  double t2_line;
  double m_line;
  double x0_wall;
  double y0_wall;
  double r_wall;
  double delta_radial;
  double delta_flank;
  double phi_ie_offset;
  double delta_suction_offset;
  double cx_scroll;
  double cy_scroll;
  double V_scroll;
  double Vremove;
  PyArrayObject *xvec_disc_port;
  PyArrayObject *yvec_disc_port;
};



/* "PDSim\scroll\common_scroll_geo.pyx":221
 *     return geo
 * 
 * cdef class geoVals:             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self):
 */

struct __pyx_vtabstruct_5PDSim_6scroll_17common_scroll_geo_geoVals {
  int (*is_symmetric)(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, int __pyx_skip_dispatch);
  double (*val_if_symmetric)(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_vtabptr_5PDSim_6scroll_17common_scroll_geo_geoVals;

/* --- Runtime support code (head) --- */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {                            \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_XDECREF(tmp);                              \
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {                             \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_DECREF(tmp);                               \
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name);

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name);

#ifndef CYTHON_PROFILE
  #define CYTHON_PROFILE 1
#endif
#ifndef CYTHON_TRACE
  #define CYTHON_TRACE 0
#endif
#if CYTHON_TRACE
  #undef CYTHON_PROFILE_REUSE_FRAME
#endif
#ifndef CYTHON_PROFILE_REUSE_FRAME
  #define CYTHON_PROFILE_REUSE_FRAME 0
#endif
#if CYTHON_PROFILE || CYTHON_TRACE
  #include "compile.h"
  #include "frameobject.h"
  #include "traceback.h"
  #if CYTHON_PROFILE_REUSE_FRAME
    #define CYTHON_FRAME_MODIFIER static
    #define CYTHON_FRAME_DEL
  #else
    #define CYTHON_FRAME_MODIFIER
    #define CYTHON_FRAME_DEL Py_CLEAR(__pyx_frame)
  #endif
  #define __Pyx_TraceDeclarations(codeobj)                            \
  static PyCodeObject *__pyx_frame_code = NULL;                      \
  CYTHON_FRAME_MODIFIER PyFrameObject *__pyx_frame = NULL;           \
  int __Pyx_use_tracing = 0;                                          \
  if (codeobj) __pyx_frame_code = (PyCodeObject*) codeobj;
  #define __Pyx_TraceCall(funcname, srcfile, firstlineno)                            \
  {   PyThreadState* tstate = PyThreadState_GET();                                   \
      if (unlikely(tstate->use_tracing) && !tstate->tracing &&                       \
              (tstate->c_profilefunc || (CYTHON_TRACE && tstate->c_tracefunc))) {    \
          __Pyx_use_tracing = __Pyx_TraceSetupAndCall(&__pyx_frame_code, &__pyx_frame, funcname, srcfile, firstlineno);  \
      }                                                                              \
  }
  #define __Pyx_TraceException()                                                           \
  if (likely(!__Pyx_use_tracing)); else {                                                  \
      PyThreadState* tstate = PyThreadState_GET();                                         \
      if (tstate->use_tracing &&                                                           \
              (tstate->c_profilefunc || (CYTHON_TRACE && tstate->c_tracefunc))) {          \
          tstate->tracing++;                                                               \
          tstate->use_tracing = 0;                                                         \
          PyObject *exc_info = __Pyx_GetExceptionTuple();                                  \
          if (exc_info) {                                                                  \
              if (CYTHON_TRACE && tstate->c_tracefunc)                                     \
                  tstate->c_tracefunc(                                                     \
                      tstate->c_traceobj, __pyx_frame, PyTrace_EXCEPTION, exc_info);      \
              tstate->c_profilefunc(                                                       \
                  tstate->c_profileobj, __pyx_frame, PyTrace_EXCEPTION, exc_info);        \
              Py_DECREF(exc_info);                                                         \
          }                                                                                \
          tstate->use_tracing = 1;                                                         \
          tstate->tracing--;                                                               \
      }                                                                                    \
  }
  #define __Pyx_TraceReturn(result)                                                       \
  if (likely(!__Pyx_use_tracing)); else {                                                 \
      PyThreadState* tstate = PyThreadState_GET();                                        \
      if (tstate->use_tracing) {                                                          \
          tstate->tracing++;                                                              \
          tstate->use_tracing = 0;                                                        \
          if (CYTHON_TRACE && tstate->c_tracefunc)                                        \
              tstate->c_tracefunc(                                                        \
                  tstate->c_traceobj, __pyx_frame, PyTrace_RETURN, (PyObject*)result);   \
          if (tstate->c_profilefunc)                                                      \
              tstate->c_profilefunc(                                                      \
                  tstate->c_profileobj, __pyx_frame, PyTrace_RETURN, (PyObject*)result); \
          CYTHON_FRAME_DEL;                                                               \
          tstate->use_tracing = 1;                                                        \
          tstate->tracing--;                                                              \
      }                                                                                   \
  }
  static PyCodeObject *__Pyx_createFrameCodeObject(const char *funcname, const char *srcfile, int firstlineno);
  static int __Pyx_TraceSetupAndCall(PyCodeObject** code, PyFrameObject** frame, const char *funcname, const char *srcfile, int firstlineno);
#else
  #define __Pyx_TraceDeclarations(codeobj)
  #define __Pyx_TraceCall(funcname, srcfile, firstlineno)
  #define __Pyx_TraceException()
  #define __Pyx_TraceReturn(result)
#endif
#if CYTHON_TRACE
  #define __Pyx_TraceLine(lineno)                                                          \
  if (likely(!__Pyx_use_tracing)); else {                                                  \
      PyThreadState* tstate = PyThreadState_GET();                                         \
      if (unlikely(tstate->use_tracing && tstate->c_tracefunc)) {                          \
          __pyx_frame->f_lineno = lineno;                                                 \
          tstate->tracing++;                                                               \
          tstate->use_tracing = 0;                                                         \
          tstate->c_tracefunc(tstate->c_traceobj, __pyx_frame, PyTrace_LINE, NULL);       \
          tstate->use_tracing = 1;                                                         \
          tstate->tracing--;                                                               \
      }                                                                                    \
  }
#else
  #define __Pyx_TraceLine(lineno)
#endif

#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) : \
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) : \
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) : \
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) : \
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

static CYTHON_INLINE int __Pyx_PyDict_Contains(PyObject* item, PyObject* dict, int eq) {
    int result = PyDict_Contains(dict, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            PyObject* args = PyTuple_Pack(1, key);
            if (likely(args))
                PyErr_SetObject(PyExc_KeyError, args);
            Py_XDECREF(args);
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#else
    #define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb);

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

#define __Pyx_SetItemInt(o, i, v, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_SetItemInt_Fast(o, (Py_ssize_t)i, v, is_list, wraparound, boundscheck) : \
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list assignment index out of range"), -1) : \
               __Pyx_SetItemInt_Generic(o, to_py_func(i), v)))
static CYTHON_INLINE int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v);
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v,
                                               int is_list, int wraparound, int boundscheck);

static CYTHON_INLINE int __Pyx_IterFinish(void);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index);

static CYTHON_INLINE int __Pyx_unpack_tuple2(PyObject* tuple, PyObject** value1, PyObject** value2,
                                             int is_tuple, int has_known_size, int decref_tuple);

static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

#include <string.h>

static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyString_Equals __Pyx_PyUnicode_Equals
#else
#define __Pyx_PyString_Equals __Pyx_PyBytes_Equals
#endif

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback);

static CYTHON_INLINE int  __Pyx_GetBufferAndValidate(Py_buffer* buf, PyObject* obj,
    __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);

static int __Pyx_SetVtable(PyObject *dict, void *vtable);

static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

#define __Pyx_CyFunction_USED 1
#include <structmember.h>
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CyFunction_GetClosure(f) \
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#define __Pyx_CyFunction_GetClassObj(f) \
    (((__pyx_CyFunctionObject *) (f))->func_classobj)
#define __Pyx_CyFunction_Defaults(type, f) \
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g) \
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
    PyCFunctionObject func;
#if PY_VERSION_HEX < 0x030500A0
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
    PyObject *func_classobj;
    void *defaults;
    int defaults_pyobjects;
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
} __pyx_CyFunctionObject;
static PyTypeObject *__pyx_CyFunctionType = 0;
#define __Pyx_CyFunction_NewEx(ml, flags, qualname, self, module, globals, code) \
    __Pyx_CyFunction_New(__pyx_CyFunctionType, ml, flags, qualname, self, module, globals, code)
static PyObject *__Pyx_CyFunction_New(PyTypeObject *, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *self,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __Pyx_CyFunction_init(void);

typedef struct {
    __pyx_CyFunctionObject func;
    PyObject *__signatures__;
    PyObject *type;
    PyObject *self;
} __pyx_FusedFunctionObject;
#define __pyx_FusedFunction_NewEx(ml, flags, qualname, self, module, globals, code)         \
        __pyx_FusedFunction_New(__pyx_FusedFunctionType, ml, flags, qualname, self, module, globals, code)
static PyObject *__pyx_FusedFunction_New(PyTypeObject *type,
                                         PyMethodDef *ml, int flags,
                                         PyObject *qualname, PyObject *self,
                                         PyObject *module, PyObject *globals,
                                         PyObject *code);
static int __pyx_FusedFunction_clear(__pyx_FusedFunctionObject *self);
static PyTypeObject *__pyx_FusedFunctionType = NULL;
static int __pyx_FusedFunction_init(void);
#define __Pyx_FusedFunction_USED

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

typedef struct {
  Py_ssize_t shape, strides, suboffsets;
} __Pyx_Buf_DimInfo;
typedef struct {
  size_t refcount;
  Py_buffer pybuffer;
} __Pyx_Buffer;
typedef struct {
  __Pyx_Buffer *rcbuffer;
  char *data;
  __Pyx_Buf_DimInfo diminfo[8];
} __Pyx_LocalBuf_ND;

#if PY_MAJOR_VERSION < 3
    static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags);
    static void __Pyx_ReleaseBuffer(Py_buffer *view);
#else
    #define __Pyx_GetBuffer PyObject_GetBuffer
    #define __Pyx_ReleaseBuffer PyBuffer_Release
#endif


static Py_ssize_t __Pyx_zeros[] = {0, 0, 0, 0, 0, 0, 0, 0};
static Py_ssize_t __Pyx_minusones[] = {-1, -1, -1, -1, -1, -1, -1, -1};

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

static int __Pyx_Print(PyObject*, PyObject *, int);
#if CYTHON_COMPILING_IN_PYPY || PY_MAJOR_VERSION >= 3
static PyObject* __pyx_print = 0;
static PyObject* __pyx_print_kwargs = 0;
#endif

static int __Pyx_PrintOne(PyObject* stream, PyObject *o);

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if (defined(_WIN32) || defined(__clang__)) && defined(__cplusplus) && CYTHON_CCOMPLEX
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eqf(a, b)   ((a)==(b))
    #define __Pyx_c_sumf(a, b)  ((a)+(b))
    #define __Pyx_c_difff(a, b) ((a)-(b))
    #define __Pyx_c_prodf(a, b) ((a)*(b))
    #define __Pyx_c_quotf(a, b) ((a)/(b))
    #define __Pyx_c_negf(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zerof(z) ((z)==(float)0)
    #define __Pyx_c_conjf(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_absf(z)     (::std::abs(z))
        #define __Pyx_c_powf(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zerof(z) ((z)==0)
    #define __Pyx_c_conjf(z)    (conjf(z))
    #if 1
        #define __Pyx_c_absf(z)     (cabsf(z))
        #define __Pyx_c_powf(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq(a, b)   ((a)==(b))
    #define __Pyx_c_sum(a, b)  ((a)+(b))
    #define __Pyx_c_diff(a, b) ((a)-(b))
    #define __Pyx_c_prod(a, b) ((a)*(b))
    #define __Pyx_c_quot(a, b) ((a)/(b))
    #define __Pyx_c_neg(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero(z) ((z)==(double)0)
    #define __Pyx_c_conj(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (::std::abs(z))
        #define __Pyx_c_pow(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero(z) ((z)==0)
    #define __Pyx_c_conj(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (cabs(z))
        #define __Pyx_c_pow(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

static int __Pyx_check_binary_version(void);

static int __Pyx_ExportFunction(const char *name, void (*f)(void), const char *sig);

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name);

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static double __pyx_f_5PDSim_6scroll_17common_scroll_geo_7geoVals_val_if_symmetric(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, double __pyx_v_val, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_5PDSim_6scroll_17common_scroll_geo_7geoVals_is_symmetric(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from 'cpython.object' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/

/* Module declarations from 'cython' */

/* Module declarations from 'libc.math' */

/* Module declarations from 'PDSim.scroll.common_scroll_geo' */
static PyTypeObject *__pyx_ptype_5PDSim_6scroll_17common_scroll_geo_VdVstruct = 0;
static PyTypeObject *__pyx_ptype_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass = 0;
static PyTypeObject *__pyx_ptype_5PDSim_6scroll_17common_scroll_geo_CVInvolute = 0;
static PyTypeObject *__pyx_ptype_5PDSim_6scroll_17common_scroll_geo_CVInvolutes = 0;
static PyTypeObject *__pyx_ptype_5PDSim_6scroll_17common_scroll_geo_geoVals = 0;
static PyObject *__pyx_f_5PDSim_6scroll_17common_scroll_geo_involute_index_to_key(int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_5PDSim_6scroll_17common_scroll_geo_scroll_wrap(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_5PDSim_6scroll_17common_scroll_geo_coords_norm(PyObject *, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int __pyx_skip_dispatch, struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo_coords_norm *__pyx_optional_args); /*proto*/
static PyObject *__pyx_f_5PDSim_6scroll_17common_scroll_geo_coords_inv(PyObject *, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int __pyx_skip_dispatch, struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo_coords_inv *__pyx_optional_args); /*proto*/
static PyObject *__pyx_f_5PDSim_6scroll_17common_scroll_geo__coords_inv_np(PyArrayObject *, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int __pyx_skip_dispatch, struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo__coords_inv_np *__pyx_optional_args); /*proto*/
static PyObject *__pyx_f_5PDSim_6scroll_17common_scroll_geo__coords_inv_d(double, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int __pyx_skip_dispatch, struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo__coords_inv_d *__pyx_optional_args); /*proto*/
static long __pyx_f_5PDSim_6scroll_17common_scroll_geo_get_compressor_CV_index(PyObject *, int __pyx_skip_dispatch); /*proto*/
static long __pyx_f_5PDSim_6scroll_17common_scroll_geo_get_compression_chamber_index(long, long, int __pyx_skip_dispatch); /*proto*/
static CYTHON_INLINE double __pyx_f_5PDSim_6scroll_17common_scroll_geo_min2(double, double, int __pyx_skip_dispatch); /*proto*/
static CYTHON_INLINE double __pyx_f_5PDSim_6scroll_17common_scroll_geo_max2(double, double, int __pyx_skip_dispatch); /*proto*/
static double __pyx_f_5PDSim_6scroll_17common_scroll_geo_Gr(double, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int, int __pyx_skip_dispatch); /*proto*/
static double __pyx_f_5PDSim_6scroll_17common_scroll_geo_dGr_dphi(double, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int, int __pyx_skip_dispatch); /*proto*/
static double __pyx_f_5PDSim_6scroll_17common_scroll_geo_dGr_dtheta(double, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int, int __pyx_skip_dispatch); /*proto*/
static double __pyx_f_5PDSim_6scroll_17common_scroll_geo_involute_heat_transfer(double, double, double, double, double, double, double, double, double, double, int __pyx_skip_dispatch); /*proto*/
static double __pyx_f_5PDSim_6scroll_17common_scroll_geo_x_antideriv(double, double); /*proto*/
static double __pyx_f_5PDSim_6scroll_17common_scroll_geo_y_antideriv(double, double); /*proto*/
static double __pyx_fuse_0__pyx_f_5PDSim_6scroll_17common_scroll_geo_plus_one(double, int __pyx_skip_dispatch); /*proto*/
static PyArrayObject *__pyx_fuse_1__pyx_f_5PDSim_6scroll_17common_scroll_geo_plus_one(PyArrayObject *, int __pyx_skip_dispatch); /*proto*/
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_float_t = { "float_t", NULL, sizeof(__pyx_t_5numpy_float_t), { 0 }, 0, 'R', 0, 0 };
#define __Pyx_MODULE_NAME "PDSim.scroll.common_scroll_geo"
int __pyx_module_is_main_PDSim__scroll__common_scroll_geo = 0;

/* Implementation of 'PDSim.scroll.common_scroll_geo' */
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin___import__;
static PyObject *__pyx_builtin_zip;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_id;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_xrange;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_4plus_one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_signatures, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs, CYTHON_UNUSED PyObject *__pyx_v_defaults); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_36__pyx_fuse_0plus_one(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_x); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_38__pyx_fuse_1plus_one(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_x); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct___init__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *__pyx_v_self, PyObject *__pyx_v_V, PyObject *__pyx_v_dV); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_2__repr__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_1V___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_1V_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_2dV___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_2dV_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass___repr__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_i___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_i_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_i___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_i_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_o___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_o_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_o___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_o_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_i0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_i0_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_o0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_o0_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute___init__(CYTHON_UNUSED struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_max___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_max_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_min___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_min_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_5phi_0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_5phi_0_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_8involute___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_8involute_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes___init__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_2__repr__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner_4__del__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer_4__del__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_6involute_index_to_key(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_index); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_8Gr(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, int __pyx_v_inv); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_10dGr_dphi(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, int __pyx_v_inv); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_12dGr_dtheta(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, int __pyx_v_inv); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_14get_compressor_CV_index(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_16get_compression_chamber_index(CYTHON_UNUSED PyObject *__pyx_self, long __pyx_v_path, long __pyx_v_alpha); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_18rebuild_geoVals(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_d); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals___init__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_2__reduce__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_4__repr__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6val_if_symmetric(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, double __pyx_v_val); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_ie___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_is___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_i0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_oe___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_os___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_o0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_8is_symmetric(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_1h___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_1h_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_2ro___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_2ro_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_2rb___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_2rb_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_1t___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_1t_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fi0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fi0_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fis___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fis_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fie___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fie_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fo0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fo0_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fos___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fos_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_foe___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_foe_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oi0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oi0_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ois___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ois_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oie___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oie_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oo0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oo0_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oos___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oos_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ooe___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ooe_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc1___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc1_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc1___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc1_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc1___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc1_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc1___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc1_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc1___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc1_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc2___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc2_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc2___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc2_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc2___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc2_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc2___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc2_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc2___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc2_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6b_line___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6b_line_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_line___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_line_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_line___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_line_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6m_line___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6m_line_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7x0_wall___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7x0_wall_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7y0_wall___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7y0_wall_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6r_wall___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6r_wall_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_12delta_radial___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_12delta_radial_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_11delta_flank___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_11delta_flank_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_13phi_ie_offset___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_13phi_ie_offset_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_20delta_suction_offset___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_20delta_suction_offset_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cx_scroll___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cx_scroll_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cy_scroll___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cy_scroll_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_8V_scroll___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_8V_scroll_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7Vremove___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7Vremove_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port_4__del__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port_4__del__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_20polyarea(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_22polycentroid(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_xi, PyObject *__pyx_v_yi); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_24_coords_inv_np(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, PyObject *__pyx_v_flag); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_26_coords_inv_d(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, PyObject *__pyx_v_flag); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_28coords_inv(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, PyObject *__pyx_v_flag); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_30coords_norm(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_phi_vec, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, PyObject *__pyx_v_flag); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_32scroll_wrap(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_34involute_heat_transfer(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_hc, double __pyx_v_hs, double __pyx_v_rb, double __pyx_v_phi1, double __pyx_v_phi2, double __pyx_v_phi0, double __pyx_v_T_scroll, double __pyx_v_T_CV, double __pyx_v_dT_dphi, double __pyx_v_phim); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_min2(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_a, double __pyx_v_b); /* proto */
static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_2max2(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_a, double __pyx_v_b); /* proto */
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static PyObject *__pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_VdVstruct(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_CVInvolute(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_CVInvolutes(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_geoVals(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static char __pyx_k_[] = "";
static char __pyx_k_B[] = "B";
static char __pyx_k_H[] = "H";
static char __pyx_k_I[] = "I";
static char __pyx_k_L[] = "L";
static char __pyx_k_N[] = "N";
static char __pyx_k_O[] = "O";
static char __pyx_k_Q[] = "Q";
static char __pyx_k_V[] = "V";
static char __pyx_k_a[] = "a";
static char __pyx_k_b[] = "b";
static char __pyx_k_d[] = "d";
static char __pyx_k_f[] = "f";
static char __pyx_k_g[] = "g";
static char __pyx_k_h[] = "h";
static char __pyx_k_i[] = "i";
static char __pyx_k_j[] = "j";
static char __pyx_k_l[] = "l";
static char __pyx_k_q[] = "q";
static char __pyx_k_r[] = "r_";
static char __pyx_k_t[] = "t";
static char __pyx_k_x[] = "x";
static char __pyx_k_y[] = "y";
static char __pyx_k_Zd[] = "Zd";
static char __pyx_k_Zf[] = "Zf";
static char __pyx_k_Zg[] = "Zg";
static char __pyx_k__2[] = "()";
static char __pyx_k__4[] = "|";
static char __pyx_k__9[] = " : ";
static char __pyx_k_d1[] = "d1";
static char __pyx_k_d2[] = "d2";
static char __pyx_k_dV[] = "dV";
static char __pyx_k_dd[] = "dd";
static char __pyx_k_fi[] = "fi";
static char __pyx_k_fo[] = "fo";
static char __pyx_k_hc[] = "hc";
static char __pyx_k_hs[] = "hs";
static char __pyx_k_id[] = "id";
static char __pyx_k_np[] = "np";
static char __pyx_k_oi[] = "oi";
static char __pyx_k_oo[] = "oo";
static char __pyx_k_rb[] = "rb";
static char __pyx_k_ro[] = "ro";
static char __pyx_k_s1[] = "s1";
static char __pyx_k_s2[] = "s2";
static char __pyx_k_sa[] = "sa";
static char __pyx_k_xi[] = "xi";
static char __pyx_k_yi[] = "yi";
static char __pyx_k__10[] = "\n";
static char __pyx_k__18[] = ": ";
static char __pyx_k_atr[] = "atr";
static char __pyx_k_cos[] = "cos";
static char __pyx_k_ddd[] = "ddd";
static char __pyx_k_end[] = "end";
static char __pyx_k_geo[] = "geo";
static char __pyx_k_inv[] = "inv";
static char __pyx_k_phi[] = "phi";
static char __pyx_k_sin[] = "sin";
static char __pyx_k_zip[] = "zip";
static char __pyx_k_T_CV[] = "T_CV";
static char __pyx_k_area[] = "area";
static char __pyx_k_args[] = "args";
static char __pyx_k_c1_1[] = "c1.1";
static char __pyx_k_c1_2[] = "c1.2";
static char __pyx_k_c1_3[] = "c1.3";
static char __pyx_k_c1_4[] = "c1.4";
static char __pyx_k_c1_5[] = "c1.5";
static char __pyx_k_c1_6[] = "c1.6";
static char __pyx_k_c1_7[] = "c1.7";
static char __pyx_k_c1_8[] = "c1.8";
static char __pyx_k_c1_9[] = "c1.9";
static char __pyx_k_c2_1[] = "c2.1";
static char __pyx_k_c2_2[] = "c2.2";
static char __pyx_k_c2_3[] = "c2.3";
static char __pyx_k_c2_4[] = "c2.4";
static char __pyx_k_c2_5[] = "c2.5";
static char __pyx_k_c2_6[] = "c2.6";
static char __pyx_k_c2_7[] = "c2.7";
static char __pyx_k_c2_8[] = "c2.8";
static char __pyx_k_c2_9[] = "c2.9";
static char __pyx_k_file[] = "file";
static char __pyx_k_flag[] = "flag";
static char __pyx_k_main[] = "__main__";
static char __pyx_k_name[] = "__name__";
static char __pyx_k_path[] = "path";
static char __pyx_k_phi0[] = "phi0";
static char __pyx_k_phi1[] = "phi1";
static char __pyx_k_phi2[] = "phi2";
static char __pyx_k_phim[] = "phim";
static char __pyx_k_size[] = "size";
static char __pyx_k_sumx[] = "sumx";
static char __pyx_k_sumy[] = "sumy";
static char __pyx_k_test[] = "__test__";
static char __pyx_k_alpha[] = "alpha";
static char __pyx_k_array[] = "array";
static char __pyx_k_c1_10[] = "c1.10";
static char __pyx_k_c2_10[] = "c2.10";
static char __pyx_k_numpy[] = "numpy";
static char __pyx_k_print[] = "print";
static char __pyx_k_range[] = "range";
static char __pyx_k_split[] = "split";
static char __pyx_k_strip[] = "strip";
static char __pyx_k_theta[] = "theta";
static char __pyx_k_zeros[] = "zeros";
static char __pyx_k_b_line[] = "b_line";
static char __pyx_k_double[] = "double";
static char __pyx_k_format[] = "format";
static char __pyx_k_import[] = "__import__";
static char __pyx_k_kwargs[] = "kwargs";
static char __pyx_k_m_line[] = "m_line";
static char __pyx_k_phi_i0[] = "phi_i0";
static char __pyx_k_phi_o0[] = "phi_o0";
static char __pyx_k_r_wall[] = "r_wall";
static char __pyx_k_xrange[] = "xrange";
static char __pyx_k_Vremove[] = "Vremove";
static char __pyx_k_dT_dphi[] = "dT_dphi";
static char __pyx_k_ndarray[] = "ndarray";
static char __pyx_k_phi_1_i[] = "phi_1_i";
static char __pyx_k_phi_1_o[] = "phi_1_o";
static char __pyx_k_phi_2_i[] = "phi_2_i";
static char __pyx_k_phi_2_o[] = "phi_2_o";
static char __pyx_k_phi_fi0[] = "phi_fi0";
static char __pyx_k_phi_fie[] = "phi_fie";
static char __pyx_k_phi_fis[] = "phi_fis";
static char __pyx_k_phi_fo0[] = "phi_fo0";
static char __pyx_k_phi_foe[] = "phi_foe";
static char __pyx_k_phi_fos[] = "phi_fos";
static char __pyx_k_phi_oi0[] = "phi_oi0";
static char __pyx_k_phi_oie[] = "phi_oie";
static char __pyx_k_phi_ois[] = "phi_ois";
static char __pyx_k_phi_oo0[] = "phi_oo0";
static char __pyx_k_phi_ooe[] = "phi_ooe";
static char __pyx_k_phi_oos[] = "phi_oos";
static char __pyx_k_phi_vec[] = "phi_vec";
static char __pyx_k_ra_arc1[] = "ra_arc1";
static char __pyx_k_ra_arc2[] = "ra_arc2";
static char __pyx_k_t1_arc1[] = "t1_arc1";
static char __pyx_k_t1_arc2[] = "t1_arc2";
static char __pyx_k_t1_line[] = "t1_line";
static char __pyx_k_t2_arc1[] = "t2_arc1";
static char __pyx_k_t2_arc2[] = "t2_arc2";
static char __pyx_k_t2_line[] = "t2_line";
static char __pyx_k_x0_wall[] = "x0_wall";
static char __pyx_k_xa_arc1[] = "xa_arc1";
static char __pyx_k_xa_arc2[] = "xa_arc2";
static char __pyx_k_y0_wall[] = "y0_wall";
static char __pyx_k_ya_arc1[] = "ya_arc1";
static char __pyx_k_ya_arc2[] = "ya_arc2";
static char __pyx_k_T_scroll[] = "T_scroll";
static char __pyx_k_V_double[] = "V: 'double'";
static char __pyx_k_V_scroll[] = "V_scroll";
static char __pyx_k_defaults[] = "defaults";
static char __pyx_k_h_double[] = "h: 'double'";
static char __pyx_k_plus_one[] = "plus_one";
static char __pyx_k_polyarea[] = "polyarea";
static char __pyx_k_t_double[] = "t: 'double'";
static char __pyx_k_TypeError[] = "TypeError";
static char __pyx_k_cx_scroll[] = "cx_scroll";
static char __pyx_k_cy_scroll[] = "cy_scroll";
static char __pyx_k_dV_double[] = "dV: 'double'";
static char __pyx_k_rb_double[] = "rb: 'double'";
static char __pyx_k_ro_double[] = "ro: 'double'";
static char __pyx_k_ValueError[] = "ValueError";
static char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static char __pyx_k_signatures[] = "signatures";
static char __pyx_k_delta_flank[] = "delta_flank";
static char __pyx_k_RuntimeError[] = "RuntimeError";
static char __pyx_k_delta_radial[] = "delta_radial";
static char __pyx_k_involute_int[] = "involute: 'int'";
static char __pyx_k_is_symmetric[] = "is_symmetric";
static char __pyx_k_phi_0_double[] = "phi_0: 'double'";
static char __pyx_k_polycentroid[] = "polycentroid";
static char __pyx_k_b_line_double[] = "b_line: 'double'";
static char __pyx_k_m_line_double[] = "m_line: 'double'";
static char __pyx_k_phi_i0_double[] = "phi_i0: 'double'";
static char __pyx_k_phi_ie_offset[] = "phi_ie_offset";
static char __pyx_k_phi_o0_double[] = "phi_o0: 'double'";
static char __pyx_k_r_wall_double[] = "r_wall: 'double'";
static char __pyx_k_Vremove_double[] = "Vremove: 'double'";
static char __pyx_k_flag_not_valid[] = "flag not valid";
static char __pyx_k_geoValsvarlist[] = "geoValsvarlist";
static char __pyx_k_phi_1_i_double[] = "phi_1_i: 'double'";
static char __pyx_k_phi_1_o_double[] = "phi_1_o: 'double'";
static char __pyx_k_phi_2_i_double[] = "phi_2_i: 'double'";
static char __pyx_k_phi_2_o_double[] = "phi_2_o: 'double'";
static char __pyx_k_phi_fi0_double[] = "phi_fi0: 'double'";
static char __pyx_k_phi_fie_double[] = "phi_fie: 'double'";
static char __pyx_k_phi_fis_double[] = "phi_fis: 'double'";
static char __pyx_k_phi_fo0_double[] = "phi_fo0: 'double'";
static char __pyx_k_phi_foe_double[] = "phi_foe: 'double'";
static char __pyx_k_phi_fos_double[] = "phi_fos: 'double'";
static char __pyx_k_phi_max_double[] = "phi_max: 'double'";
static char __pyx_k_phi_min_double[] = "phi_min: 'double'";
static char __pyx_k_phi_oi0_double[] = "phi_oi0: 'double'";
static char __pyx_k_phi_oie_double[] = "phi_oie: 'double'";
static char __pyx_k_phi_ois_double[] = "phi_ois: 'double'";
static char __pyx_k_phi_oo0_double[] = "phi_oo0: 'double'";
static char __pyx_k_phi_ooe_double[] = "phi_ooe: 'double'";
static char __pyx_k_phi_oos_double[] = "phi_oos: 'double'";
static char __pyx_k_ra_arc1_double[] = "ra_arc1: 'double'";
static char __pyx_k_ra_arc2_double[] = "ra_arc2: 'double'";
static char __pyx_k_t1_arc1_double[] = "t1_arc1: 'double'";
static char __pyx_k_t1_arc2_double[] = "t1_arc2: 'double'";
static char __pyx_k_t1_line_double[] = "t1_line: 'double'";
static char __pyx_k_t2_arc1_double[] = "t2_arc1: 'double'";
static char __pyx_k_t2_arc2_double[] = "t2_arc2: 'double'";
static char __pyx_k_t2_line_double[] = "t2_line: 'double'";
static char __pyx_k_x0_wall_double[] = "x0_wall: 'double'";
static char __pyx_k_xa_arc1_double[] = "xa_arc1: 'double'";
static char __pyx_k_xa_arc2_double[] = "xa_arc2: 'double'";
static char __pyx_k_y0_wall_double[] = "y0_wall: 'double'";
static char __pyx_k_ya_arc1_double[] = "ya_arc1: 'double'";
static char __pyx_k_ya_arc2_double[] = "ya_arc2: 'double'";
static char __pyx_k_Inner_phi_0_i_g[] = "Inner.phi_0 = {i:g}\n";
static char __pyx_k_Outer_phi_0_i_g[] = "Outer.phi_0 = {i:g}\n";
static char __pyx_k_V_scroll_double[] = "V_scroll: 'double'";
static char __pyx_k_rebuild_geoVals[] = "rebuild_geoVals";
static char __pyx_k_cx_scroll_double[] = "cx_scroll: 'double'";
static char __pyx_k_cy_scroll_double[] = "cy_scroll: 'double'";
static char __pyx_k_val_if_symmetric[] = "val_if_symmetric";
static char __pyx_k_Inner_phi_max_i_g[] = "Inner.phi_max = {i:g}\n";
static char __pyx_k_Inner_phi_min_i_g[] = "Inner.phi_min = {i:g}";
static char __pyx_k_Outer_phi_max_i_g[] = "Outer.phi_max = {i:g}\n";
static char __pyx_k_Outer_phi_min_i_g[] = "Outer.phi_min = {i:g}\n";
static char __pyx_k_Inner_Ending_Angle[] = " Inner Ending Angle ";
static char __pyx_k_Inner_involute_i_s[] = "Inner.involute = {i:s}\n";
static char __pyx_k_Outer_Ending_Angle[] = " Outer Ending Angle ";
static char __pyx_k_Outer_involute_i_s[] = "Outer.involute = {i:s}\n";
static char __pyx_k_delta_flank_double[] = "delta_flank: 'double'";
static char __pyx_k_pyx_fuse_0plus_one[] = "__pyx_fuse_0plus_one";
static char __pyx_k_pyx_fuse_1plus_one[] = "__pyx_fuse_1plus_one";
static char __pyx_k_Inner_Initial_Angle[] = " Inner Initial Angle ";
static char __pyx_k_Outer_Initial_Angle[] = " Outer Initial Angle ";
static char __pyx_k_delta_radial_double[] = "delta_radial: 'double'";
static char __pyx_k_geoVals_instance_at[] = "geoVals instance at ";
static char __pyx_k_Inner_Starting_Angle[] = " Inner Starting Angle ";
static char __pyx_k_Outer_Starting_Angle[] = " Outer Starting Angle ";
static char __pyx_k_delta_suction_offset[] = "delta_suction_offset";
static char __pyx_k_phi_ie_offset_double[] = "phi_ie_offset: 'double'";
static char __pyx_k_Uh_oh_error_in_coords_norm[] = "Uh oh... error in coords_norm";
static char __pyx_k_No_matching_signature_found[] = "No matching signature found";
static char __pyx_k_delta_suction_offset_double[] = "delta_suction_offset: 'double'";
static char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";
static char __pyx_k_xvec_disc_port_numpy_ndarray[] = "xvec_disc_port: numpy.ndarray";
static char __pyx_k_yvec_disc_port_numpy_ndarray[] = "yvec_disc_port: numpy.ndarray";
static char __pyx_k_Expected_at_least_d_arguments[] = "Expected at least %d arguments";
static char __pyx_k_PDSim_scroll_common_scroll_geo[] = "PDSim.scroll.common_scroll_geo";
static char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";
static char __pyx_k_C_Users_dziviani_Documents_Pytho[] = "C:\\Users\\dziviani\\Documents\\Python\\pdsim-git\\PDSim\\scroll\\common_scroll_geo.pyx";
static char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";
static char __pyx_k_Function_call_with_ambiguous_arg[] = "Function call with ambiguous argument types";
static char __pyx_k_Inner_PDSim_scroll_common_scroll[] = "Inner: PDSim.scroll.common_scroll_geo.CVInvolute";
static char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";
static char __pyx_k_Outer_PDSim_scroll_common_scroll[] = "Outer: PDSim.scroll.common_scroll_geo.CVInvolute";
static char __pyx_k_Symmetric_angle_requested_phi_ie[] = "Symmetric angle requested (phi_ie, phi_is, phi_i0, etc.) but the geometry is not symmetric";
static char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";
static char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";
static PyObject *__pyx_kp_s_;
static PyObject *__pyx_kp_s_C_Users_dziviani_Documents_Pytho;
static PyObject *__pyx_kp_s_Expected_at_least_d_arguments;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;
static PyObject *__pyx_kp_s_Function_call_with_ambiguous_arg;
static PyObject *__pyx_kp_s_Inner_involute_i_s;
static PyObject *__pyx_kp_s_Inner_phi_0_i_g;
static PyObject *__pyx_kp_s_Inner_phi_max_i_g;
static PyObject *__pyx_kp_s_Inner_phi_min_i_g;
static PyObject *__pyx_n_s_N;
static PyObject *__pyx_kp_s_No_matching_signature_found;
static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;
static PyObject *__pyx_kp_s_Outer_involute_i_s;
static PyObject *__pyx_kp_s_Outer_phi_0_i_g;
static PyObject *__pyx_kp_s_Outer_phi_max_i_g;
static PyObject *__pyx_kp_s_Outer_phi_min_i_g;
static PyObject *__pyx_n_s_PDSim_scroll_common_scroll_geo;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_kp_s_Symmetric_angle_requested_phi_ie;
static PyObject *__pyx_n_s_T_CV;
static PyObject *__pyx_n_s_T_scroll;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_kp_s_Uh_oh_error_in_coords_norm;
static PyObject *__pyx_n_s_V;
static PyObject *__pyx_n_s_V_scroll;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_s_Vremove;
static PyObject *__pyx_kp_s__10;
static PyObject *__pyx_kp_s__18;
static PyObject *__pyx_kp_s__2;
static PyObject *__pyx_kp_s__4;
static PyObject *__pyx_kp_s__9;
static PyObject *__pyx_n_s_a;
static PyObject *__pyx_n_s_alpha;
static PyObject *__pyx_n_s_area;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_array;
static PyObject *__pyx_n_s_atr;
static PyObject *__pyx_n_s_b;
static PyObject *__pyx_n_s_b_line;
static PyObject *__pyx_kp_s_c1_1;
static PyObject *__pyx_kp_s_c1_10;
static PyObject *__pyx_kp_s_c1_2;
static PyObject *__pyx_kp_s_c1_3;
static PyObject *__pyx_kp_s_c1_4;
static PyObject *__pyx_kp_s_c1_5;
static PyObject *__pyx_kp_s_c1_6;
static PyObject *__pyx_kp_s_c1_7;
static PyObject *__pyx_kp_s_c1_8;
static PyObject *__pyx_kp_s_c1_9;
static PyObject *__pyx_kp_s_c2_1;
static PyObject *__pyx_kp_s_c2_10;
static PyObject *__pyx_kp_s_c2_2;
static PyObject *__pyx_kp_s_c2_3;
static PyObject *__pyx_kp_s_c2_4;
static PyObject *__pyx_kp_s_c2_5;
static PyObject *__pyx_kp_s_c2_6;
static PyObject *__pyx_kp_s_c2_7;
static PyObject *__pyx_kp_s_c2_8;
static PyObject *__pyx_kp_s_c2_9;
static PyObject *__pyx_n_s_cos;
static PyObject *__pyx_n_s_cx_scroll;
static PyObject *__pyx_n_s_cy_scroll;
static PyObject *__pyx_n_s_d;
static PyObject *__pyx_n_s_d1;
static PyObject *__pyx_n_s_d2;
static PyObject *__pyx_n_s_dT_dphi;
static PyObject *__pyx_n_s_dV;
static PyObject *__pyx_n_s_dd;
static PyObject *__pyx_n_s_ddd;
static PyObject *__pyx_n_s_defaults;
static PyObject *__pyx_n_s_delta_flank;
static PyObject *__pyx_n_s_delta_radial;
static PyObject *__pyx_n_s_delta_suction_offset;
static PyObject *__pyx_n_s_double;
static PyObject *__pyx_n_s_end;
static PyObject *__pyx_n_s_fi;
static PyObject *__pyx_n_s_file;
static PyObject *__pyx_n_s_flag;
static PyObject *__pyx_kp_s_flag_not_valid;
static PyObject *__pyx_n_s_fo;
static PyObject *__pyx_n_s_format;
static PyObject *__pyx_n_s_geo;
static PyObject *__pyx_kp_s_geoVals_instance_at;
static PyObject *__pyx_n_s_geoValsvarlist;
static PyObject *__pyx_n_s_h;
static PyObject *__pyx_n_s_hc;
static PyObject *__pyx_n_s_hs;
static PyObject *__pyx_n_s_i;
static PyObject *__pyx_n_s_id;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_inv;
static PyObject *__pyx_n_s_is_symmetric;
static PyObject *__pyx_n_s_j;
static PyObject *__pyx_n_s_kwargs;
static PyObject *__pyx_n_s_m_line;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_ndarray;
static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;
static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_n_u_numpy;
static PyObject *__pyx_n_s_oi;
static PyObject *__pyx_n_s_oo;
static PyObject *__pyx_n_s_path;
static PyObject *__pyx_n_s_phi;
static PyObject *__pyx_n_s_phi0;
static PyObject *__pyx_n_s_phi1;
static PyObject *__pyx_n_s_phi2;
static PyObject *__pyx_n_s_phi_1_i;
static PyObject *__pyx_n_s_phi_1_o;
static PyObject *__pyx_n_s_phi_2_i;
static PyObject *__pyx_n_s_phi_2_o;
static PyObject *__pyx_n_s_phi_fi0;
static PyObject *__pyx_n_s_phi_fie;
static PyObject *__pyx_n_s_phi_fis;
static PyObject *__pyx_n_s_phi_fo0;
static PyObject *__pyx_n_s_phi_foe;
static PyObject *__pyx_n_s_phi_fos;
static PyObject *__pyx_n_s_phi_i0;
static PyObject *__pyx_n_s_phi_ie_offset;
static PyObject *__pyx_n_s_phi_o0;
static PyObject *__pyx_n_s_phi_oi0;
static PyObject *__pyx_n_s_phi_oie;
static PyObject *__pyx_n_s_phi_ois;
static PyObject *__pyx_n_s_phi_oo0;
static PyObject *__pyx_n_s_phi_ooe;
static PyObject *__pyx_n_s_phi_oos;
static PyObject *__pyx_n_s_phi_vec;
static PyObject *__pyx_n_s_phim;
static PyObject *__pyx_n_s_plus_one;
static PyObject *__pyx_n_s_polyarea;
static PyObject *__pyx_n_s_polycentroid;
static PyObject *__pyx_n_s_print;
static PyObject *__pyx_n_s_pyx_fuse_0plus_one;
static PyObject *__pyx_n_s_pyx_fuse_1plus_one;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_r;
static PyObject *__pyx_n_s_r_wall;
static PyObject *__pyx_n_s_ra_arc1;
static PyObject *__pyx_n_s_ra_arc2;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_rb;
static PyObject *__pyx_n_s_rebuild_geoVals;
static PyObject *__pyx_n_s_ro;
static PyObject *__pyx_n_s_s1;
static PyObject *__pyx_n_s_s2;
static PyObject *__pyx_n_s_sa;
static PyObject *__pyx_n_s_signatures;
static PyObject *__pyx_n_s_sin;
static PyObject *__pyx_n_s_size;
static PyObject *__pyx_n_s_split;
static PyObject *__pyx_n_s_strip;
static PyObject *__pyx_n_s_sumx;
static PyObject *__pyx_n_s_sumy;
static PyObject *__pyx_n_s_t;
static PyObject *__pyx_n_s_t1_arc1;
static PyObject *__pyx_n_s_t1_arc2;
static PyObject *__pyx_n_s_t1_line;
static PyObject *__pyx_n_s_t2_arc1;
static PyObject *__pyx_n_s_t2_arc2;
static PyObject *__pyx_n_s_t2_line;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_theta;
static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;
static PyObject *__pyx_n_s_val_if_symmetric;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_s_x0_wall;
static PyObject *__pyx_n_s_xa_arc1;
static PyObject *__pyx_n_s_xa_arc2;
static PyObject *__pyx_n_s_xi;
static PyObject *__pyx_n_s_xrange;
static PyObject *__pyx_n_s_y;
static PyObject *__pyx_n_s_y0_wall;
static PyObject *__pyx_n_s_ya_arc1;
static PyObject *__pyx_n_s_ya_arc2;
static PyObject *__pyx_n_s_yi;
static PyObject *__pyx_n_s_zeros;
static PyObject *__pyx_n_s_zip;
static PyObject *__pyx_float_0_0;
static PyObject *__pyx_float_1_0;
static PyObject *__pyx_float_2_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_6;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__29;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__31;
static PyObject *__pyx_tuple__33;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__35;
static PyObject *__pyx_codeobj__17;
static PyObject *__pyx_codeobj__20;
static PyObject *__pyx_codeobj__21;
static PyObject *__pyx_codeobj__32;

/* "PDSim\scroll\common_scroll_geo.pyx":6
 * import numpy as np
 * 
 * cpdef double_or_numpy plus_one(double_or_numpy x):             # <<<<<<<<<<<<<<
 *     return x + 1.0
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_5plus_one(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_4plus_one[] = "plus_one(signatures, args, kwargs, defaults)";
static PyMethodDef __pyx_mdef_5PDSim_6scroll_17common_scroll_geo_5plus_one = {"plus_one", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_5plus_one, METH_VARARGS|METH_KEYWORDS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_4plus_one};
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_5plus_one(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_signatures = 0;
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED PyObject *__pyx_v_defaults = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_fused_cpdef (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_signatures,&__pyx_n_s_args,&__pyx_n_s_kwargs,&__pyx_n_s_defaults,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_signatures)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_args)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_fused_cpdef", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_kwargs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_fused_cpdef", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_defaults)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_fused_cpdef", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_fused_cpdef") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_signatures = values[0];
    __pyx_v_args = values[1];
    __pyx_v_kwargs = values[2];
    __pyx_v_defaults = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_fused_cpdef", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.__pyx_fused_cpdef", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_4plus_one(__pyx_self, __pyx_v_signatures, __pyx_v_args, __pyx_v_kwargs, __pyx_v_defaults);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_4plus_one(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_signatures, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs, CYTHON_UNUSED PyObject *__pyx_v_defaults) {
  PyObject *__pyx_v_dest_sig = NULL;
  PyObject *__pyx_v_arg = NULL;
  PyObject *__pyx_v_candidates = NULL;
  PyObject *__pyx_v_sig = NULL;
  int __pyx_v_match_found;
  PyObject *__pyx_v_src_type = NULL;
  PyObject *__pyx_v_dst_type = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  PyObject *(*__pyx_t_11)(PyObject *);
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *(*__pyx_t_15)(PyObject *);
  int __pyx_t_16;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("plus_one", 0);
  __Pyx_TraceCall("plus_one", __pyx_f[0], 6);
  __Pyx_INCREF(__pyx_v_kwargs);
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(Py_None);
  PyList_SET_ITEM(__pyx_t_1, 0, Py_None);
  __Pyx_GIVEREF(Py_None);
  __pyx_v_dest_sig = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_2 = (__pyx_v_kwargs == Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {
    __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_kwargs, __pyx_t_1);
    __pyx_t_1 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;
  if (unlikely(__pyx_v_args == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_4 = PyTuple_GET_SIZE(((PyObject*)__pyx_v_args)); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = ((0 < __pyx_t_4) != 0);
  if (__pyx_t_3) {
    if (unlikely(__pyx_v_args == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_1 = __Pyx_GetItemInt_Tuple(((PyObject*)__pyx_v_args), 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_arg = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L4;
  }
  if (unlikely(__pyx_v_kwargs == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_3 = (__Pyx_PyDict_Contains(__pyx_n_s_x, ((PyObject*)__pyx_v_kwargs), Py_EQ)); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {
    if (unlikely(__pyx_v_kwargs == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_1 = __Pyx_PyDict_GetItem(((PyObject*)__pyx_v_kwargs), __pyx_n_s_x); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_arg = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L4;
  }
  /*else*/ {
    if (unlikely(__pyx_v_args == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_4 = PyTuple_GET_SIZE(((PyObject*)__pyx_v_args)); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Expected_at_least_d_arguments, __pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_t_1, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L4:;
  __pyx_t_2 = PyFloat_Check(__pyx_v_arg); 
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {
    if (unlikely(__Pyx_SetItemInt(__pyx_v_dest_sig, 0, __pyx_n_s_double, long, 1, __Pyx_PyInt_From_long, 1, 0, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L5;
  }
  __pyx_t_5 = PyList_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_kp_s_);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_kp_s_);
  __Pyx_GIVEREF(__pyx_kp_s_);
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_u_numpy);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_n_u_numpy);
  __Pyx_GIVEREF(__pyx_n_u_numpy);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_1, 1, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin___import__, __pyx_t_1, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_ndarray); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_3 = PyObject_IsInstance(__pyx_v_arg, __pyx_t_1); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {
    if (unlikely(__Pyx_SetItemInt(__pyx_v_dest_sig, 0, __pyx_n_s_ndarray, long, 1, __Pyx_PyInt_From_long, 1, 0, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L5;
  }
  /*else*/ {
    if (unlikely(__Pyx_SetItemInt(__pyx_v_dest_sig, 0, Py_None, long, 1, __Pyx_PyInt_From_long, 1, 0, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L5:;
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_candidates = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_4 = 0;
  if (unlikely(__pyx_v_signatures == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_5 = __Pyx_dict_iterator(((PyObject*)__pyx_v_signatures), 1, ((PyObject *)NULL), (&__pyx_t_6), (&__pyx_t_7)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_8 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_6, &__pyx_t_4, &__pyx_t_5, NULL, NULL, __pyx_t_7);
    if (unlikely(__pyx_t_8 == 0)) break;
    if (unlikely(__pyx_t_8 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_sig, __pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_v_match_found = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_sig, __pyx_n_s_strip); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_9);
    __Pyx_GIVEREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_v_dest_sig);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_dest_sig);
    __Pyx_GIVEREF(__pyx_v_dest_sig);
    __pyx_t_9 = 0;
    __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_zip, __pyx_t_5, NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_9)) || PyTuple_CheckExact(__pyx_t_9)) {
      __pyx_t_5 = __pyx_t_9; __Pyx_INCREF(__pyx_t_5); __pyx_t_10 = 0;
      __pyx_t_11 = NULL;
    } else {
      __pyx_t_10 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_9); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_11 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    for (;;) {
      if (likely(!__pyx_t_11)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_9 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_10); __Pyx_INCREF(__pyx_t_9); __pyx_t_10++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_9 = PySequence_ITEM(__pyx_t_5, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          if (__pyx_t_10 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_10); __Pyx_INCREF(__pyx_t_9); __pyx_t_10++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_9 = PySequence_ITEM(__pyx_t_5, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        }
      } else {
        __pyx_t_9 = __pyx_t_11(__pyx_t_5);
        if (unlikely(!__pyx_t_9)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_9);
      }
      if ((likely(PyTuple_CheckExact(__pyx_t_9))) || (PyList_CheckExact(__pyx_t_9))) {
        PyObject* sequence = __pyx_t_9;
        #if CYTHON_COMPILING_IN_CPYTHON
        Py_ssize_t size = Py_SIZE(sequence);
        #else
        Py_ssize_t size = PySequence_Size(sequence);
        #endif
        if (unlikely(size != 2)) {
          if (size > 2) __Pyx_RaiseTooManyValuesError(2);
          else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        #if CYTHON_COMPILING_IN_CPYTHON
        if (likely(PyTuple_CheckExact(sequence))) {
          __pyx_t_12 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_13 = PyTuple_GET_ITEM(sequence, 1); 
        } else {
          __pyx_t_12 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_13 = PyList_GET_ITEM(sequence, 1); 
        }
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(__pyx_t_13);
        #else
        __pyx_t_12 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_13 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_13);
        #endif
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      } else {
        Py_ssize_t index = -1;
        __pyx_t_14 = PyObject_GetIter(__pyx_t_9); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_15 = Py_TYPE(__pyx_t_14)->tp_iternext;
        index = 0; __pyx_t_12 = __pyx_t_15(__pyx_t_14); if (unlikely(!__pyx_t_12)) goto __pyx_L10_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_12);
        index = 1; __pyx_t_13 = __pyx_t_15(__pyx_t_14); if (unlikely(!__pyx_t_13)) goto __pyx_L10_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_13);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_15(__pyx_t_14), 2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_15 = NULL;
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        goto __pyx_L11_unpacking_done;
        __pyx_L10_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __pyx_t_15 = NULL;
        if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_L11_unpacking_done:;
      }
      __Pyx_XDECREF_SET(__pyx_v_src_type, __pyx_t_12);
      __pyx_t_12 = 0;
      __Pyx_XDECREF_SET(__pyx_v_dst_type, __pyx_t_13);
      __pyx_t_13 = 0;
      __pyx_t_2 = (__pyx_v_dst_type != Py_None);
      __pyx_t_3 = (__pyx_t_2 != 0);
      if (__pyx_t_3) {
        __pyx_t_9 = PyObject_RichCompare(__pyx_v_src_type, __pyx_v_dst_type, Py_EQ); __Pyx_XGOTREF(__pyx_t_9); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        if (__pyx_t_3) {
          __pyx_v_match_found = 1;
          goto __pyx_L13;
        }
        /*else*/ {
          __pyx_v_match_found = 0;
          goto __pyx_L9_break;
        }
        __pyx_L13:;
        goto __pyx_L12;
      }
      __pyx_L12:;
    }
    __pyx_L9_break:;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_3 = (__pyx_v_match_found != 0);
    if (__pyx_t_3) {
      __pyx_t_16 = __Pyx_PyList_Append(__pyx_v_candidates, __pyx_v_sig); if (unlikely(__pyx_t_16 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L14;
    }
    __pyx_L14:;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_v_candidates != Py_None) && (PyList_GET_SIZE(__pyx_v_candidates) != 0);
  __pyx_t_2 = ((!__pyx_t_3) != 0);
  if (__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_6 = PyList_GET_SIZE(__pyx_v_candidates); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = ((__pyx_t_6 > 1) != 0);
  if (__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    if (unlikely(__pyx_v_signatures == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_1 = __Pyx_GetItemInt_List(__pyx_v_candidates, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyDict_GetItem(((PyObject*)__pyx_v_signatures), __pyx_t_1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.__pyx_fused_cpdef", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dest_sig);
  __Pyx_XDECREF(__pyx_v_arg);
  __Pyx_XDECREF(__pyx_v_candidates);
  __Pyx_XDECREF(__pyx_v_sig);
  __Pyx_XDECREF(__pyx_v_src_type);
  __Pyx_XDECREF(__pyx_v_dst_type);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_37__pyx_fuse_0plus_one(PyObject *__pyx_self, PyObject *__pyx_arg_x); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_5plus_one(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static double __pyx_fuse_0__pyx_f_5PDSim_6scroll_17common_scroll_geo_plus_one(double __pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__pyx_fuse_0plus_one", 0);
  __Pyx_TraceCall("__pyx_fuse_0plus_one", __pyx_f[0], 6);

  /* "PDSim\scroll\common_scroll_geo.pyx":7
 * 
 * cpdef double_or_numpy plus_one(double_or_numpy x):
 *     return x + 1.0             # <<<<<<<<<<<<<<
 * 
 * cdef class VdVstruct:
 */
  __pyx_r = (__pyx_v_x + 1.0);
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":6
 * import numpy as np
 * 
 * cpdef double_or_numpy plus_one(double_or_numpy x):             # <<<<<<<<<<<<<<
 *     return x + 1.0
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_37__pyx_fuse_0plus_one(PyObject *__pyx_self, PyObject *__pyx_arg_x); /*proto*/
static PyMethodDef __pyx_fuse_0__pyx_mdef_5PDSim_6scroll_17common_scroll_geo_37__pyx_fuse_0plus_one = {"__pyx_fuse_0plus_one", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_37__pyx_fuse_0plus_one, METH_O, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_4plus_one};
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_37__pyx_fuse_0plus_one(PyObject *__pyx_self, PyObject *__pyx_arg_x) {
  double __pyx_v_x;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_fuse_0plus_one (wrapper)", 0);
  assert(__pyx_arg_x); {
    __pyx_v_x = __pyx_PyFloat_AsDouble(__pyx_arg_x); if (unlikely((__pyx_v_x == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.__pyx_fuse_0plus_one", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_36__pyx_fuse_0plus_one(__pyx_self, ((double)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_36__pyx_fuse_0plus_one(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__pyx_fuse_0plus_one", 0);
  __Pyx_TraceCall("__pyx_fuse_0plus_one", __pyx_f[0], 6);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_fuse_0__pyx_f_5PDSim_6scroll_17common_scroll_geo_plus_one(__pyx_v_x, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.__pyx_fuse_0plus_one", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_39__pyx_fuse_1plus_one(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_5plus_one(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyArrayObject *__pyx_fuse_1__pyx_f_5PDSim_6scroll_17common_scroll_geo_plus_one(PyArrayObject *__pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch) {
  PyArrayObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__pyx_fuse_1plus_one", 0);
  __Pyx_TraceCall("__pyx_fuse_1plus_one", __pyx_f[0], 6);

  /* "PDSim\scroll\common_scroll_geo.pyx":7
 * 
 * cpdef double_or_numpy plus_one(double_or_numpy x):
 *     return x + 1.0             # <<<<<<<<<<<<<<
 * 
 * cdef class VdVstruct:
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = PyNumber_Add(((PyObject *)__pyx_v_x), __pyx_float_1_0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":6
 * import numpy as np
 * 
 * cpdef double_or_numpy plus_one(double_or_numpy x):             # <<<<<<<<<<<<<<
 *     return x + 1.0
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.plus_one", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_39__pyx_fuse_1plus_one(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyMethodDef __pyx_fuse_1__pyx_mdef_5PDSim_6scroll_17common_scroll_geo_39__pyx_fuse_1plus_one = {"__pyx_fuse_1plus_one", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_39__pyx_fuse_1plus_one, METH_O, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_4plus_one};
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_39__pyx_fuse_1plus_one(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_fuse_1plus_one (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5numpy_ndarray, 1, "x", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_38__pyx_fuse_1plus_one(__pyx_self, ((PyArrayObject *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_38__pyx_fuse_1plus_one(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__pyx_fuse_1plus_one", 0);
  __Pyx_TraceCall("__pyx_fuse_1plus_one", __pyx_f[0], 6);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_fuse_1__pyx_f_5PDSim_6scroll_17common_scroll_geo_plus_one(__pyx_v_x, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.__pyx_fuse_1plus_one", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":10
 * 
 * cdef class VdVstruct:
 *     def __init__(self, V, dV):             # <<<<<<<<<<<<<<
 *         self.V = V
 *         self.dV = dV
 */

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_V = 0;
  PyObject *__pyx_v_dV = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_V,&__pyx_n_s_dV,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_V)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dV)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_V = values[0];
    __pyx_v_dV = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.VdVstruct.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct___init__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *)__pyx_v_self), __pyx_v_V, __pyx_v_dV);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct___init__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *__pyx_v_self, PyObject *__pyx_v_V, PyObject *__pyx_v_dV) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__init__", 0);
  __Pyx_TraceCall("__init__", __pyx_f[0], 10);

  /* "PDSim\scroll\common_scroll_geo.pyx":11
 * cdef class VdVstruct:
 *     def __init__(self, V, dV):
 *         self.V = V             # <<<<<<<<<<<<<<
 *         self.dV = dV
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_V); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->V = __pyx_t_1;

  /* "PDSim\scroll\common_scroll_geo.pyx":12
 *     def __init__(self, V, dV):
 *         self.V = V
 *         self.dV = dV             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_dV); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->dV = __pyx_t_1;

  /* "PDSim\scroll\common_scroll_geo.pyx":10
 * 
 * cdef class VdVstruct:
 *     def __init__(self, V, dV):             # <<<<<<<<<<<<<<
 *         self.V = V
 *         self.dV = dV
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.VdVstruct.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":14
 *         self.dV = dV
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return str(list([self.V,self.dV]))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_3__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_3__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_2__repr__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_2__repr__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__repr__", 0);
  __Pyx_TraceCall("__repr__", __pyx_f[0], 14);

  /* "PDSim\scroll\common_scroll_geo.pyx":15
 * 
 *     def __repr__(self):
 *         return str(list([self.V,self.dV]))             # <<<<<<<<<<<<<<
 * 
 * cdef class HTAnglesClass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->V); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->dV); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = PySequence_List(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":14
 *         self.dV = dV
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return str(list([self.V,self.dV]))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.VdVstruct.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":11
 * 
 * cdef class VdVstruct:
 *     cdef public double V,dV             # <<<<<<<<<<<<<<
 * 
 * cdef class HTAnglesClass:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_1V_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_1V_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_1V___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_1V___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 11);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->V); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.VdVstruct.V.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_1V_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_1V_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_1V_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_1V_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 11);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->V = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.VdVstruct.V.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_2dV_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_2dV_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_2dV___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_2dV___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 11);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->dV); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.VdVstruct.dV.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_2dV_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_2dV_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_2dV_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_2dV_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 11);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->dV = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.VdVstruct.dV.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":18
 * 
 * cdef class HTAnglesClass:
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         s = ''
 *         for k in ['phi_1_i','phi_2_i','phi_1_o','phi_2_o','phi_i0','phi_o0']:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_1__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_1__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass___repr__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass___repr__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self) {
  PyObject *__pyx_v_s = NULL;
  PyObject *__pyx_v_k = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__repr__", 0);
  __Pyx_TraceCall("__repr__", __pyx_f[0], 18);

  /* "PDSim\scroll\common_scroll_geo.pyx":19
 * cdef class HTAnglesClass:
 *     def __repr__(self):
 *         s = ''             # <<<<<<<<<<<<<<
 *         for k in ['phi_1_i','phi_2_i','phi_1_o','phi_2_o','phi_i0','phi_o0']:
 *             s += k + ' : ' + str(getattr(self,k)) + '\n'
 */
  __Pyx_INCREF(__pyx_kp_s_);
  __pyx_v_s = __pyx_kp_s_;

  /* "PDSim\scroll\common_scroll_geo.pyx":20
 *     def __repr__(self):
 *         s = ''
 *         for k in ['phi_1_i','phi_2_i','phi_1_o','phi_2_o','phi_i0','phi_o0']:             # <<<<<<<<<<<<<<
 *             s += k + ' : ' + str(getattr(self,k)) + '\n'
 *         return s
 */
  __pyx_t_1 = __pyx_tuple__8; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= 6) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #endif
    __Pyx_XDECREF_SET(__pyx_v_k, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":21
 *         s = ''
 *         for k in ['phi_1_i','phi_2_i','phi_1_o','phi_2_o','phi_i0','phi_o0']:
 *             s += k + ' : ' + str(getattr(self,k)) + '\n'             # <<<<<<<<<<<<<<
 *         return s
 * 
 */
    __pyx_t_3 = PyNumber_Add(__pyx_v_k, __pyx_kp_s__9); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_GetAttr(((PyObject *)__pyx_v_self), __pyx_v_k); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Add(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s__10); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_InPlaceAdd(__pyx_v_s, __pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_s, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":20
 *     def __repr__(self):
 *         s = ''
 *         for k in ['phi_1_i','phi_2_i','phi_1_o','phi_2_o','phi_i0','phi_o0']:             # <<<<<<<<<<<<<<
 *             s += k + ' : ' + str(getattr(self,k)) + '\n'
 *         return s
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":22
 *         for k in ['phi_1_i','phi_2_i','phi_1_o','phi_2_o','phi_i0','phi_o0']:
 *             s += k + ' : ' + str(getattr(self,k)) + '\n'
 *         return s             # <<<<<<<<<<<<<<
 * 
 * cdef class CVInvolute:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_s);
  __pyx_r = __pyx_v_s;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":18
 * 
 * cdef class HTAnglesClass:
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         s = ''
 *         for k in ['phi_1_i','phi_2_i','phi_1_o','phi_2_o','phi_i0','phi_o0']:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.HTAnglesClass.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":14
 * 
 * cdef class HTAnglesClass:
 *     cdef public double phi_1_i, phi_2_i, phi_1_o, phi_2_o, phi_i0, phi_o0             # <<<<<<<<<<<<<<
 * 
 * cdef class CVInvolute:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_i_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_i_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_i___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_i___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 14);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_1_i); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.HTAnglesClass.phi_1_i.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_i_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_i_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_i_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_i_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 14);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_1_i = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.HTAnglesClass.phi_1_i.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_i_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_i_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_i___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_i___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 14);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_2_i); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.HTAnglesClass.phi_2_i.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_i_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_i_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_i_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_i_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 14);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_2_i = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.HTAnglesClass.phi_2_i.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_o_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_o_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_o___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_o___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 14);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_1_o); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.HTAnglesClass.phi_1_o.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_o_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_o_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_o_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_o_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 14);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_1_o = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.HTAnglesClass.phi_1_o.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_o_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_o_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_o___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_o___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 14);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_2_o); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.HTAnglesClass.phi_2_o.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_o_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_o_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_o_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_o_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 14);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_2_o = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.HTAnglesClass.phi_2_o.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_i0_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_i0_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_i0___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_i0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 14);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_i0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.HTAnglesClass.phi_i0.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_i0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_i0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_i0_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_i0_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 14);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_i0 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.HTAnglesClass.phi_i0.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_o0_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_o0_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_o0___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_o0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 14);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_o0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.HTAnglesClass.phi_o0.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_o0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_o0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_o0_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_o0_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 14);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_o0 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.HTAnglesClass.phi_o0.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":25
 * 
 * cdef class CVInvolute:
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute___init__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute___init__(CYTHON_UNUSED struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__init__", 0);
  __Pyx_TraceCall("__init__", __pyx_f[0], 25);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":17
 * 
 * cdef class CVInvolute:
 *     cdef public double phi_max, phi_min, phi_0             # <<<<<<<<<<<<<<
 *     cdef public int involute
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_max_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_max_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_max___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_max___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 17);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_max); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.CVInvolute.phi_max.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_max_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_max_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_max_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_max_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 17);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_max = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.CVInvolute.phi_max.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_min_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_min_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_min___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_min___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 17);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_min); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.CVInvolute.phi_min.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_min_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_min_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_min_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_min_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 17);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_min = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.CVInvolute.phi_min.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_5phi_0_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_5phi_0_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_5phi_0___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_5phi_0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 17);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.CVInvolute.phi_0.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_5phi_0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_5phi_0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_5phi_0_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_5phi_0_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 17);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_0 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.CVInvolute.phi_0.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":18
 * cdef class CVInvolute:
 *     cdef public double phi_max, phi_min, phi_0
 *     cdef public int involute             # <<<<<<<<<<<<<<
 * 
 * cdef class CVInvolutes:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_8involute_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_8involute_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_8involute___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_8involute___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 18);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->involute); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.CVInvolute.involute.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_8involute_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_8involute_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_8involute_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_8involute_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 18);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->involute = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.CVInvolute.involute.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":29
 * 
 * cdef class CVInvolutes:
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.Inner = CVInvolute.__new__(CVInvolute)
 *         self.Outer = CVInvolute.__new__(CVInvolute)
 */

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes___init__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes___init__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__init__", 0);
  __Pyx_TraceCall("__init__", __pyx_f[0], 29);

  /* "PDSim\scroll\common_scroll_geo.pyx":30
 * cdef class CVInvolutes:
 *     def __init__(self):
 *         self.Inner = CVInvolute.__new__(CVInvolute)             # <<<<<<<<<<<<<<
 *         self.Outer = CVInvolute.__new__(CVInvolute)
 * 
 */
  __pyx_t_1 = __pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_CVInvolute(((PyTypeObject *)((PyObject*)__pyx_ptype_5PDSim_6scroll_17common_scroll_geo_CVInvolute)), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_CVInvolute)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->Inner);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->Inner));
  __pyx_v_self->Inner = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":31
 *     def __init__(self):
 *         self.Inner = CVInvolute.__new__(CVInvolute)
 *         self.Outer = CVInvolute.__new__(CVInvolute)             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_t_1 = __pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_CVInvolute(((PyTypeObject *)((PyObject*)__pyx_ptype_5PDSim_6scroll_17common_scroll_geo_CVInvolute)), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_CVInvolute)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->Outer);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->Outer));
  __pyx_v_self->Outer = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":29
 * 
 * cdef class CVInvolutes:
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.Inner = CVInvolute.__new__(CVInvolute)
 *         self.Outer = CVInvolute.__new__(CVInvolute)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.CVInvolutes.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":33
 *         self.Outer = CVInvolute.__new__(CVInvolute)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         s = ''
 *         s += "Outer.involute = {i:s}\n".format(i=involute_index_to_key(self.Outer.involute))
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_3__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_3__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_2__repr__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_2__repr__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self) {
  PyObject *__pyx_v_s = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__repr__", 0);
  __Pyx_TraceCall("__repr__", __pyx_f[0], 33);

  /* "PDSim\scroll\common_scroll_geo.pyx":34
 * 
 *     def __repr__(self):
 *         s = ''             # <<<<<<<<<<<<<<
 *         s += "Outer.involute = {i:s}\n".format(i=involute_index_to_key(self.Outer.involute))
 *         s += "Outer.phi_0 = {i:g}\n".format(i=self.Outer.phi_0)
 */
  __Pyx_INCREF(__pyx_kp_s_);
  __pyx_v_s = __pyx_kp_s_;

  /* "PDSim\scroll\common_scroll_geo.pyx":35
 *     def __repr__(self):
 *         s = ''
 *         s += "Outer.involute = {i:s}\n".format(i=involute_index_to_key(self.Outer.involute))             # <<<<<<<<<<<<<<
 *         s += "Outer.phi_0 = {i:g}\n".format(i=self.Outer.phi_0)
 *         s += "Outer.phi_max = {i:g}\n".format(i=self.Outer.phi_max)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Outer_involute_i_s, __pyx_n_s_format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __pyx_f_5PDSim_6scroll_17common_scroll_geo_involute_index_to_key(__pyx_v_self->Outer->involute, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_i, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_InPlaceAdd(__pyx_v_s, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF_SET(__pyx_v_s, __pyx_t_2);
  __pyx_t_2 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":36
 *         s = ''
 *         s += "Outer.involute = {i:s}\n".format(i=involute_index_to_key(self.Outer.involute))
 *         s += "Outer.phi_0 = {i:g}\n".format(i=self.Outer.phi_0)             # <<<<<<<<<<<<<<
 *         s += "Outer.phi_max = {i:g}\n".format(i=self.Outer.phi_max)
 *         s += "Outer.phi_min = {i:g}\n".format(i=self.Outer.phi_min)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Outer_phi_0_i_g, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Outer->phi_0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_i, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_s, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF_SET(__pyx_v_s, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":37
 *         s += "Outer.involute = {i:s}\n".format(i=involute_index_to_key(self.Outer.involute))
 *         s += "Outer.phi_0 = {i:g}\n".format(i=self.Outer.phi_0)
 *         s += "Outer.phi_max = {i:g}\n".format(i=self.Outer.phi_max)             # <<<<<<<<<<<<<<
 *         s += "Outer.phi_min = {i:g}\n".format(i=self.Outer.phi_min)
 *         s += "Inner.involute = {i:s}\n".format(i=involute_index_to_key(self.Inner.involute))
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Outer_phi_max_i_g, __pyx_n_s_format); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->Outer->phi_max); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_i, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_s, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF_SET(__pyx_v_s, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":38
 *         s += "Outer.phi_0 = {i:g}\n".format(i=self.Outer.phi_0)
 *         s += "Outer.phi_max = {i:g}\n".format(i=self.Outer.phi_max)
 *         s += "Outer.phi_min = {i:g}\n".format(i=self.Outer.phi_min)             # <<<<<<<<<<<<<<
 *         s += "Inner.involute = {i:s}\n".format(i=involute_index_to_key(self.Inner.involute))
 *         s += "Inner.phi_0 = {i:g}\n".format(i=self.Inner.phi_0)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Outer_phi_min_i_g, __pyx_n_s_format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_self->Outer->phi_min); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_i, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_InPlaceAdd(__pyx_v_s, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF_SET(__pyx_v_s, __pyx_t_2);
  __pyx_t_2 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":39
 *         s += "Outer.phi_max = {i:g}\n".format(i=self.Outer.phi_max)
 *         s += "Outer.phi_min = {i:g}\n".format(i=self.Outer.phi_min)
 *         s += "Inner.involute = {i:s}\n".format(i=involute_index_to_key(self.Inner.involute))             # <<<<<<<<<<<<<<
 *         s += "Inner.phi_0 = {i:g}\n".format(i=self.Inner.phi_0)
 *         s += "Inner.phi_max = {i:g}\n".format(i=self.Inner.phi_max)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Inner_involute_i_s, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __pyx_f_5PDSim_6scroll_17common_scroll_geo_involute_index_to_key(__pyx_v_self->Inner->involute, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_i, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_s, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF_SET(__pyx_v_s, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":40
 *         s += "Outer.phi_min = {i:g}\n".format(i=self.Outer.phi_min)
 *         s += "Inner.involute = {i:s}\n".format(i=involute_index_to_key(self.Inner.involute))
 *         s += "Inner.phi_0 = {i:g}\n".format(i=self.Inner.phi_0)             # <<<<<<<<<<<<<<
 *         s += "Inner.phi_max = {i:g}\n".format(i=self.Inner.phi_max)
 *         s += "Inner.phi_min = {i:g}".format(i=self.Inner.phi_min)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Inner_phi_0_i_g, __pyx_n_s_format); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->Inner->phi_0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_i, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_s, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF_SET(__pyx_v_s, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":41
 *         s += "Inner.involute = {i:s}\n".format(i=involute_index_to_key(self.Inner.involute))
 *         s += "Inner.phi_0 = {i:g}\n".format(i=self.Inner.phi_0)
 *         s += "Inner.phi_max = {i:g}\n".format(i=self.Inner.phi_max)             # <<<<<<<<<<<<<<
 *         s += "Inner.phi_min = {i:g}".format(i=self.Inner.phi_min)
 *         return s
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Inner_phi_max_i_g, __pyx_n_s_format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_self->Inner->phi_max); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_i, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_InPlaceAdd(__pyx_v_s, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF_SET(__pyx_v_s, __pyx_t_2);
  __pyx_t_2 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":42
 *         s += "Inner.phi_0 = {i:g}\n".format(i=self.Inner.phi_0)
 *         s += "Inner.phi_max = {i:g}\n".format(i=self.Inner.phi_max)
 *         s += "Inner.phi_min = {i:g}".format(i=self.Inner.phi_min)             # <<<<<<<<<<<<<<
 *         return s
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Inner_phi_min_i_g, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Inner->phi_min); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_i, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_s, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF_SET(__pyx_v_s, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":43
 *         s += "Inner.phi_max = {i:g}\n".format(i=self.Inner.phi_max)
 *         s += "Inner.phi_min = {i:g}".format(i=self.Inner.phi_min)
 *         return s             # <<<<<<<<<<<<<<
 * 
 * cpdef bytes involute_index_to_key(int index):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_s);
  __pyx_r = __pyx_v_s;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":33
 *         self.Outer = CVInvolute.__new__(CVInvolute)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         s = ''
 *         s += "Outer.involute = {i:s}\n".format(i=involute_index_to_key(self.Outer.involute))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.CVInvolutes.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":21
 * 
 * cdef class CVInvolutes:
 *     cdef public CVInvolute Inner, Outer             # <<<<<<<<<<<<<<
 * 
 * cdef enum involute_index:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 21);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->Inner));
  __pyx_r = ((PyObject *)__pyx_v_self->Inner);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 21);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_CVInvolute))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->Inner);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->Inner));
  __pyx_v_self->Inner = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.CVInvolutes.Inner.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner_4__del__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner_4__del__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_TraceCall("__del__", __pyx_f[1], 21);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->Inner);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->Inner));
  __pyx_v_self->Inner = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 21);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->Outer));
  __pyx_r = ((PyObject *)__pyx_v_self->Outer);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 21);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_CVInvolute))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->Outer);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->Outer));
  __pyx_v_self->Outer = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.CVInvolutes.Outer.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer_4__del__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer_4__del__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_TraceCall("__del__", __pyx_f[1], 21);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->Outer);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->Outer));
  __pyx_v_self->Outer = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":45
 *         return s
 * 
 * cpdef bytes involute_index_to_key(int index):             # <<<<<<<<<<<<<<
 *     """
 *     Return the string associated with a given index from the common_scroll_geo.involute_index enumeration
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7involute_index_to_key(PyObject *__pyx_self, PyObject *__pyx_arg_index); /*proto*/
static PyObject *__pyx_f_5PDSim_6scroll_17common_scroll_geo_involute_index_to_key(int __pyx_v_index, CYTHON_UNUSED int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("involute_index_to_key", 0);
  __Pyx_TraceCall("involute_index_to_key", __pyx_f[0], 45);

  /* "PDSim\scroll\common_scroll_geo.pyx":56
 *     elif index == INVOLUTE_OI:
 *         return bytes('oi')
 *     elif index == INVOLUTE_OO:             # <<<<<<<<<<<<<<
 *         return bytes('oo')
 *     else:
 */
  switch (__pyx_v_index) {

    /* "PDSim\scroll\common_scroll_geo.pyx":50
 *     """
 * 
 *     if index == INVOLUTE_FI:             # <<<<<<<<<<<<<<
 *         return bytes('fi')
 *     elif index == INVOLUTE_FO:
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_FI:

    /* "PDSim\scroll\common_scroll_geo.pyx":51
 * 
 *     if index == INVOLUTE_FI:
 *         return bytes('fi')             # <<<<<<<<<<<<<<
 *     elif index == INVOLUTE_FO:
 *         return bytes('fo')
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)(&PyBytes_Type))), __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = ((PyObject*)__pyx_t_1);
    __pyx_t_1 = 0;
    goto __pyx_L0;
    break;

    /* "PDSim\scroll\common_scroll_geo.pyx":52
 *     if index == INVOLUTE_FI:
 *         return bytes('fi')
 *     elif index == INVOLUTE_FO:             # <<<<<<<<<<<<<<
 *         return bytes('fo')
 *     elif index == INVOLUTE_OI:
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_FO:

    /* "PDSim\scroll\common_scroll_geo.pyx":53
 *         return bytes('fi')
 *     elif index == INVOLUTE_FO:
 *         return bytes('fo')             # <<<<<<<<<<<<<<
 *     elif index == INVOLUTE_OI:
 *         return bytes('oi')
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)(&PyBytes_Type))), __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = ((PyObject*)__pyx_t_1);
    __pyx_t_1 = 0;
    goto __pyx_L0;
    break;

    /* "PDSim\scroll\common_scroll_geo.pyx":54
 *     elif index == INVOLUTE_FO:
 *         return bytes('fo')
 *     elif index == INVOLUTE_OI:             # <<<<<<<<<<<<<<
 *         return bytes('oi')
 *     elif index == INVOLUTE_OO:
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_OI:

    /* "PDSim\scroll\common_scroll_geo.pyx":55
 *         return bytes('fo')
 *     elif index == INVOLUTE_OI:
 *         return bytes('oi')             # <<<<<<<<<<<<<<
 *     elif index == INVOLUTE_OO:
 *         return bytes('oo')
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)(&PyBytes_Type))), __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = ((PyObject*)__pyx_t_1);
    __pyx_t_1 = 0;
    goto __pyx_L0;
    break;

    /* "PDSim\scroll\common_scroll_geo.pyx":56
 *     elif index == INVOLUTE_OI:
 *         return bytes('oi')
 *     elif index == INVOLUTE_OO:             # <<<<<<<<<<<<<<
 *         return bytes('oo')
 *     else:
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_OO:

    /* "PDSim\scroll\common_scroll_geo.pyx":57
 *         return bytes('oi')
 *     elif index == INVOLUTE_OO:
 *         return bytes('oo')             # <<<<<<<<<<<<<<
 *     else:
 *         return bytes('')
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)(&PyBytes_Type))), __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = ((PyObject*)__pyx_t_1);
    __pyx_t_1 = 0;
    goto __pyx_L0;
    break;
    default:

    /* "PDSim\scroll\common_scroll_geo.pyx":59
 *         return bytes('oo')
 *     else:
 *         return bytes('')             # <<<<<<<<<<<<<<
 * 
 * cpdef double Gr(double phi, geoVals geo, double theta, int inv):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)(&PyBytes_Type))), __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = ((PyObject*)__pyx_t_1);
    __pyx_t_1 = 0;
    goto __pyx_L0;
    break;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":45
 *         return s
 * 
 * cpdef bytes involute_index_to_key(int index):             # <<<<<<<<<<<<<<
 *     """
 *     Return the string associated with a given index from the common_scroll_geo.involute_index enumeration
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.involute_index_to_key", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7involute_index_to_key(PyObject *__pyx_self, PyObject *__pyx_arg_index); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_6involute_index_to_key[] = "involute_index_to_key(int index) -> bytes\n\n    Return the string associated with a given index from the common_scroll_geo.involute_index enumeration\n    ";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7involute_index_to_key(PyObject *__pyx_self, PyObject *__pyx_arg_index) {
  int __pyx_v_index;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("involute_index_to_key (wrapper)", 0);
  assert(__pyx_arg_index); {
    __pyx_v_index = __Pyx_PyInt_As_int(__pyx_arg_index); if (unlikely((__pyx_v_index == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.involute_index_to_key", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_6involute_index_to_key(__pyx_self, ((int)__pyx_v_index));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_6involute_index_to_key(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_index) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("involute_index_to_key", 0);
  __Pyx_TraceCall("involute_index_to_key", __pyx_f[0], 45);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5PDSim_6scroll_17common_scroll_geo_involute_index_to_key(__pyx_v_index, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.involute_index_to_key", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":61
 *         return bytes('')
 * 
 * cpdef double Gr(double phi, geoVals geo, double theta, int inv):             # <<<<<<<<<<<<<<
 *     """
 *     The antiderivative of the area integration term, where
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_9Gr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static double __pyx_f_5PDSim_6scroll_17common_scroll_geo_Gr(double __pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, int __pyx_v_inv, CYTHON_UNUSED int __pyx_skip_dispatch) {
  double __pyx_v_theta_m;
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("Gr", 0);
  __Pyx_TraceCall("Gr", __pyx_f[0], 61);

  /* "PDSim\scroll\common_scroll_geo.pyx":69
 *         Gr \\equiv \\int\\left[\\left(-y\\frac{dx(\\phi)}{d\\phi}+x\\frac{dy(\\phi)}{d\\phi}\\right)d\\phi\\right]
 *     """
 *     theta_m = geo.phi_fie - theta + 3.0*pi/2.0             # <<<<<<<<<<<<<<
 *     if inv == INVOLUTE_FI:
 *         return phi*geo.rb**2*(phi**2 - 3*phi*geo.phi_fi0 + 3*geo.phi_fi0**2)/3
 */
  __pyx_v_theta_m = ((__pyx_v_geo->phi_fie - __pyx_v_theta) + ((3.0 * M_PI) / 2.0));

  /* "PDSim\scroll\common_scroll_geo.pyx":79
 *                        + 3*(phi-geo.phi_oi0)*geo.ro*cos(phi - theta_m)
 *                        - 3*geo.ro*sin(phi - theta_m))/3
 *     elif inv == INVOLUTE_OO:             # <<<<<<<<<<<<<<
 *         return geo.rb*(phi**3*geo.rb - 3*phi**2*geo.phi_oo0*geo.rb
 *                        + 3*phi*geo.phi_oo0**2*geo.rb
 */
  switch (__pyx_v_inv) {

    /* "PDSim\scroll\common_scroll_geo.pyx":70
 *     """
 *     theta_m = geo.phi_fie - theta + 3.0*pi/2.0
 *     if inv == INVOLUTE_FI:             # <<<<<<<<<<<<<<
 *         return phi*geo.rb**2*(phi**2 - 3*phi*geo.phi_fi0 + 3*geo.phi_fi0**2)/3
 *     elif inv == INVOLUTE_FO:
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_FI:

    /* "PDSim\scroll\common_scroll_geo.pyx":71
 *     theta_m = geo.phi_fie - theta + 3.0*pi/2.0
 *     if inv == INVOLUTE_FI:
 *         return phi*geo.rb**2*(phi**2 - 3*phi*geo.phi_fi0 + 3*geo.phi_fi0**2)/3             # <<<<<<<<<<<<<<
 *     elif inv == INVOLUTE_FO:
 *         return phi*geo.rb**2*(phi**2 - 3*phi*geo.phi_fo0 + 3*geo.phi_fo0**2)/3
 */
    __pyx_r = (((__pyx_v_phi * pow(__pyx_v_geo->rb, 2.0)) * ((pow(__pyx_v_phi, 2.0) - ((3.0 * __pyx_v_phi) * __pyx_v_geo->phi_fi0)) + (3.0 * pow(__pyx_v_geo->phi_fi0, 2.0)))) / 3.0);
    goto __pyx_L0;
    break;

    /* "PDSim\scroll\common_scroll_geo.pyx":72
 *     if inv == INVOLUTE_FI:
 *         return phi*geo.rb**2*(phi**2 - 3*phi*geo.phi_fi0 + 3*geo.phi_fi0**2)/3
 *     elif inv == INVOLUTE_FO:             # <<<<<<<<<<<<<<
 *         return phi*geo.rb**2*(phi**2 - 3*phi*geo.phi_fo0 + 3*geo.phi_fo0**2)/3
 *     elif inv == INVOLUTE_OI:
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_FO:

    /* "PDSim\scroll\common_scroll_geo.pyx":73
 *         return phi*geo.rb**2*(phi**2 - 3*phi*geo.phi_fi0 + 3*geo.phi_fi0**2)/3
 *     elif inv == INVOLUTE_FO:
 *         return phi*geo.rb**2*(phi**2 - 3*phi*geo.phi_fo0 + 3*geo.phi_fo0**2)/3             # <<<<<<<<<<<<<<
 *     elif inv == INVOLUTE_OI:
 *         return geo.rb*(phi**3*geo.rb - 3*phi**2*geo.phi_oi0*geo.rb
 */
    __pyx_r = (((__pyx_v_phi * pow(__pyx_v_geo->rb, 2.0)) * ((pow(__pyx_v_phi, 2.0) - ((3.0 * __pyx_v_phi) * __pyx_v_geo->phi_fo0)) + (3.0 * pow(__pyx_v_geo->phi_fo0, 2.0)))) / 3.0);
    goto __pyx_L0;
    break;

    /* "PDSim\scroll\common_scroll_geo.pyx":74
 *     elif inv == INVOLUTE_FO:
 *         return phi*geo.rb**2*(phi**2 - 3*phi*geo.phi_fo0 + 3*geo.phi_fo0**2)/3
 *     elif inv == INVOLUTE_OI:             # <<<<<<<<<<<<<<
 *         return geo.rb*(phi**3*geo.rb - 3*phi**2*geo.phi_oi0*geo.rb
 *                        + 3*phi*geo.phi_oi0**2*geo.rb
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_OI:

    /* "PDSim\scroll\common_scroll_geo.pyx":78
 *                        + 3*phi*geo.phi_oi0**2*geo.rb
 *                        + 3*(phi-geo.phi_oi0)*geo.ro*cos(phi - theta_m)
 *                        - 3*geo.ro*sin(phi - theta_m))/3             # <<<<<<<<<<<<<<
 *     elif inv == INVOLUTE_OO:
 *         return geo.rb*(phi**3*geo.rb - 3*phi**2*geo.phi_oo0*geo.rb
 */
    __pyx_r = ((__pyx_v_geo->rb * (((((pow(__pyx_v_phi, 3.0) * __pyx_v_geo->rb) - (((3.0 * pow(__pyx_v_phi, 2.0)) * __pyx_v_geo->phi_oi0) * __pyx_v_geo->rb)) + (((3.0 * __pyx_v_phi) * pow(__pyx_v_geo->phi_oi0, 2.0)) * __pyx_v_geo->rb)) + (((3.0 * (__pyx_v_phi - __pyx_v_geo->phi_oi0)) * __pyx_v_geo->ro) * cos((__pyx_v_phi - __pyx_v_theta_m)))) - ((3.0 * __pyx_v_geo->ro) * sin((__pyx_v_phi - __pyx_v_theta_m))))) / 3.0);
    goto __pyx_L0;
    break;

    /* "PDSim\scroll\common_scroll_geo.pyx":79
 *                        + 3*(phi-geo.phi_oi0)*geo.ro*cos(phi - theta_m)
 *                        - 3*geo.ro*sin(phi - theta_m))/3
 *     elif inv == INVOLUTE_OO:             # <<<<<<<<<<<<<<
 *         return geo.rb*(phi**3*geo.rb - 3*phi**2*geo.phi_oo0*geo.rb
 *                        + 3*phi*geo.phi_oo0**2*geo.rb
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_OO:

    /* "PDSim\scroll\common_scroll_geo.pyx":83
 *                        + 3*phi*geo.phi_oo0**2*geo.rb
 *                        + 3*(phi-geo.phi_oo0)*geo.ro*cos(phi - theta_m)
 *                        - 3*geo.ro*sin(phi - theta_m))/3             # <<<<<<<<<<<<<<
 * 
 * cpdef double dGr_dphi(double phi, geoVals geo, double theta, int inv):
 */
    __pyx_r = ((__pyx_v_geo->rb * (((((pow(__pyx_v_phi, 3.0) * __pyx_v_geo->rb) - (((3.0 * pow(__pyx_v_phi, 2.0)) * __pyx_v_geo->phi_oo0) * __pyx_v_geo->rb)) + (((3.0 * __pyx_v_phi) * pow(__pyx_v_geo->phi_oo0, 2.0)) * __pyx_v_geo->rb)) + (((3.0 * (__pyx_v_phi - __pyx_v_geo->phi_oo0)) * __pyx_v_geo->ro) * cos((__pyx_v_phi - __pyx_v_theta_m)))) - ((3.0 * __pyx_v_geo->ro) * sin((__pyx_v_phi - __pyx_v_theta_m))))) / 3.0);
    goto __pyx_L0;
    break;
    default: break;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":61
 *         return bytes('')
 * 
 * cpdef double Gr(double phi, geoVals geo, double theta, int inv):             # <<<<<<<<<<<<<<
 *     """
 *     The antiderivative of the area integration term, where
 */

  /* function exit code */
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_9Gr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_8Gr[] = "Gr(double phi, geoVals geo, double theta, int inv) -> double\n\n    The antiderivative of the area integration term, where \n    \n    .. math::\n    \n        Gr \\equiv \\int\\left[\\left(-y\\frac{dx(\\phi)}{d\\phi}+x\\frac{dy(\\phi)}{d\\phi}\\right)d\\phi\\right]\n    ";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_9Gr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_phi;
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo = 0;
  double __pyx_v_theta;
  int __pyx_v_inv;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Gr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_phi,&__pyx_n_s_geo,&__pyx_n_s_theta,&__pyx_n_s_inv,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_phi)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_geo)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("Gr", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_theta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("Gr", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_inv)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("Gr", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "Gr") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_phi = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_phi == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_geo = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)values[1]);
    __pyx_v_theta = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_theta == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_inv = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_inv == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Gr", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.Gr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_geo), __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_geoVals, 1, "geo", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_8Gr(__pyx_self, __pyx_v_phi, __pyx_v_geo, __pyx_v_theta, __pyx_v_inv);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_8Gr(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, int __pyx_v_inv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("Gr", 0);
  __Pyx_TraceCall("Gr", __pyx_f[0], 61);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_5PDSim_6scroll_17common_scroll_geo_Gr(__pyx_v_phi, __pyx_v_geo, __pyx_v_theta, __pyx_v_inv, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.Gr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":85
 *                        - 3*geo.ro*sin(phi - theta_m))/3
 * 
 * cpdef double dGr_dphi(double phi, geoVals geo, double theta, int inv):             # <<<<<<<<<<<<<<
 *     """
 *     The partial derivative of Gr with respect to phi with theta held constant
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_11dGr_dphi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static double __pyx_f_5PDSim_6scroll_17common_scroll_geo_dGr_dphi(double __pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, int __pyx_v_inv, CYTHON_UNUSED int __pyx_skip_dispatch) {
  double __pyx_v_THETA;
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("dGr_dphi", 0);
  __Pyx_TraceCall("dGr_dphi", __pyx_f[0], 85);

  /* "PDSim\scroll\common_scroll_geo.pyx":90
 *     """
 * 
 *     THETA = geo.phi_fie - theta - pi/2.0             # <<<<<<<<<<<<<<
 * 
 *     if inv == INVOLUTE_FI:
 */
  __pyx_v_THETA = ((__pyx_v_geo->phi_fie - __pyx_v_theta) - (M_PI / 2.0));

  /* "PDSim\scroll\common_scroll_geo.pyx":98
 *     elif inv == INVOLUTE_OI:
 *         return geo.rb*(geo.rb*(phi - geo.phi_oi0)**2 + (phi- geo.phi_oi0)*geo.ro*sin(THETA - phi))
 *     elif inv == INVOLUTE_OO:             # <<<<<<<<<<<<<<
 *         return geo.rb*(geo.rb*(phi - geo.phi_oo0)**2 + (phi- geo.phi_oo0)*geo.ro*sin(THETA - phi))
 * 
 */
  switch (__pyx_v_inv) {

    /* "PDSim\scroll\common_scroll_geo.pyx":92
 *     THETA = geo.phi_fie - theta - pi/2.0
 * 
 *     if inv == INVOLUTE_FI:             # <<<<<<<<<<<<<<
 *         return geo.rb**2*(phi - geo.phi_fi0)**2
 *     elif inv == INVOLUTE_FO:
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_FI:

    /* "PDSim\scroll\common_scroll_geo.pyx":93
 * 
 *     if inv == INVOLUTE_FI:
 *         return geo.rb**2*(phi - geo.phi_fi0)**2             # <<<<<<<<<<<<<<
 *     elif inv == INVOLUTE_FO:
 *         return geo.rb**2*(phi - geo.phi_fo0)**2
 */
    __pyx_r = (pow(__pyx_v_geo->rb, 2.0) * pow((__pyx_v_phi - __pyx_v_geo->phi_fi0), 2.0));
    goto __pyx_L0;
    break;

    /* "PDSim\scroll\common_scroll_geo.pyx":94
 *     if inv == INVOLUTE_FI:
 *         return geo.rb**2*(phi - geo.phi_fi0)**2
 *     elif inv == INVOLUTE_FO:             # <<<<<<<<<<<<<<
 *         return geo.rb**2*(phi - geo.phi_fo0)**2
 *     elif inv == INVOLUTE_OI:
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_FO:

    /* "PDSim\scroll\common_scroll_geo.pyx":95
 *         return geo.rb**2*(phi - geo.phi_fi0)**2
 *     elif inv == INVOLUTE_FO:
 *         return geo.rb**2*(phi - geo.phi_fo0)**2             # <<<<<<<<<<<<<<
 *     elif inv == INVOLUTE_OI:
 *         return geo.rb*(geo.rb*(phi - geo.phi_oi0)**2 + (phi- geo.phi_oi0)*geo.ro*sin(THETA - phi))
 */
    __pyx_r = (pow(__pyx_v_geo->rb, 2.0) * pow((__pyx_v_phi - __pyx_v_geo->phi_fo0), 2.0));
    goto __pyx_L0;
    break;

    /* "PDSim\scroll\common_scroll_geo.pyx":96
 *     elif inv == INVOLUTE_FO:
 *         return geo.rb**2*(phi - geo.phi_fo0)**2
 *     elif inv == INVOLUTE_OI:             # <<<<<<<<<<<<<<
 *         return geo.rb*(geo.rb*(phi - geo.phi_oi0)**2 + (phi- geo.phi_oi0)*geo.ro*sin(THETA - phi))
 *     elif inv == INVOLUTE_OO:
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_OI:

    /* "PDSim\scroll\common_scroll_geo.pyx":97
 *         return geo.rb**2*(phi - geo.phi_fo0)**2
 *     elif inv == INVOLUTE_OI:
 *         return geo.rb*(geo.rb*(phi - geo.phi_oi0)**2 + (phi- geo.phi_oi0)*geo.ro*sin(THETA - phi))             # <<<<<<<<<<<<<<
 *     elif inv == INVOLUTE_OO:
 *         return geo.rb*(geo.rb*(phi - geo.phi_oo0)**2 + (phi- geo.phi_oo0)*geo.ro*sin(THETA - phi))
 */
    __pyx_r = (__pyx_v_geo->rb * ((__pyx_v_geo->rb * pow((__pyx_v_phi - __pyx_v_geo->phi_oi0), 2.0)) + (((__pyx_v_phi - __pyx_v_geo->phi_oi0) * __pyx_v_geo->ro) * sin((__pyx_v_THETA - __pyx_v_phi)))));
    goto __pyx_L0;
    break;

    /* "PDSim\scroll\common_scroll_geo.pyx":98
 *     elif inv == INVOLUTE_OI:
 *         return geo.rb*(geo.rb*(phi - geo.phi_oi0)**2 + (phi- geo.phi_oi0)*geo.ro*sin(THETA - phi))
 *     elif inv == INVOLUTE_OO:             # <<<<<<<<<<<<<<
 *         return geo.rb*(geo.rb*(phi - geo.phi_oo0)**2 + (phi- geo.phi_oo0)*geo.ro*sin(THETA - phi))
 * 
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_OO:

    /* "PDSim\scroll\common_scroll_geo.pyx":99
 *         return geo.rb*(geo.rb*(phi - geo.phi_oi0)**2 + (phi- geo.phi_oi0)*geo.ro*sin(THETA - phi))
 *     elif inv == INVOLUTE_OO:
 *         return geo.rb*(geo.rb*(phi - geo.phi_oo0)**2 + (phi- geo.phi_oo0)*geo.ro*sin(THETA - phi))             # <<<<<<<<<<<<<<
 * 
 * cpdef double dGr_dtheta(double phi, geoVals geo, double theta, int inv):
 */
    __pyx_r = (__pyx_v_geo->rb * ((__pyx_v_geo->rb * pow((__pyx_v_phi - __pyx_v_geo->phi_oo0), 2.0)) + (((__pyx_v_phi - __pyx_v_geo->phi_oo0) * __pyx_v_geo->ro) * sin((__pyx_v_THETA - __pyx_v_phi)))));
    goto __pyx_L0;
    break;
    default: break;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":85
 *                        - 3*geo.ro*sin(phi - theta_m))/3
 * 
 * cpdef double dGr_dphi(double phi, geoVals geo, double theta, int inv):             # <<<<<<<<<<<<<<
 *     """
 *     The partial derivative of Gr with respect to phi with theta held constant
 */

  /* function exit code */
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_11dGr_dphi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_10dGr_dphi[] = "dGr_dphi(double phi, geoVals geo, double theta, int inv) -> double\n\n    The partial derivative of Gr with respect to phi with theta held constant\n    ";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_11dGr_dphi(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_phi;
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo = 0;
  double __pyx_v_theta;
  int __pyx_v_inv;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dGr_dphi (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_phi,&__pyx_n_s_geo,&__pyx_n_s_theta,&__pyx_n_s_inv,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_phi)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_geo)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dGr_dphi", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_theta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dGr_dphi", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_inv)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dGr_dphi", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dGr_dphi") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_phi = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_phi == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_geo = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)values[1]);
    __pyx_v_theta = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_theta == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_inv = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_inv == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dGr_dphi", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.dGr_dphi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_geo), __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_geoVals, 1, "geo", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_10dGr_dphi(__pyx_self, __pyx_v_phi, __pyx_v_geo, __pyx_v_theta, __pyx_v_inv);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_10dGr_dphi(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, int __pyx_v_inv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("dGr_dphi", 0);
  __Pyx_TraceCall("dGr_dphi", __pyx_f[0], 85);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_5PDSim_6scroll_17common_scroll_geo_dGr_dphi(__pyx_v_phi, __pyx_v_geo, __pyx_v_theta, __pyx_v_inv, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.dGr_dphi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":101
 *         return geo.rb*(geo.rb*(phi - geo.phi_oo0)**2 + (phi- geo.phi_oo0)*geo.ro*sin(THETA - phi))
 * 
 * cpdef double dGr_dtheta(double phi, geoVals geo, double theta, int inv):             # <<<<<<<<<<<<<<
 *     """
 *     The partial derivative of Gr with respect to theta with phi held constant
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13dGr_dtheta(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static double __pyx_f_5PDSim_6scroll_17common_scroll_geo_dGr_dtheta(double __pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, int __pyx_v_inv, CYTHON_UNUSED int __pyx_skip_dispatch) {
  double __pyx_v_THETA;
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("dGr_dtheta", 0);
  __Pyx_TraceCall("dGr_dtheta", __pyx_f[0], 101);

  /* "PDSim\scroll\common_scroll_geo.pyx":106
 *     """
 * 
 *     THETA = geo.phi_fie - theta - pi/2.0             # <<<<<<<<<<<<<<
 * 
 *     if inv == INVOLUTE_FI or inv == INVOLUTE_FO:
 */
  __pyx_v_THETA = ((__pyx_v_geo->phi_fie - __pyx_v_theta) - (M_PI / 2.0));

  /* "PDSim\scroll\common_scroll_geo.pyx":112
 *     elif inv == INVOLUTE_OI:
 *         return geo.rb*geo.ro*((phi - geo.phi_oi0)*sin(THETA - phi) - cos(THETA - phi))
 *     elif inv == INVOLUTE_OO:             # <<<<<<<<<<<<<<
 *         return geo.rb*geo.ro*((phi - geo.phi_oo0)*sin(THETA - phi) - cos(THETA - phi))
 * 
 */
  switch (__pyx_v_inv) {

    /* "PDSim\scroll\common_scroll_geo.pyx":108
 *     THETA = geo.phi_fie - theta - pi/2.0
 * 
 *     if inv == INVOLUTE_FI or inv == INVOLUTE_FO:             # <<<<<<<<<<<<<<
 *         return 0.0
 *     elif inv == INVOLUTE_OI:
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_FI:
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_FO:

    /* "PDSim\scroll\common_scroll_geo.pyx":109
 * 
 *     if inv == INVOLUTE_FI or inv == INVOLUTE_FO:
 *         return 0.0             # <<<<<<<<<<<<<<
 *     elif inv == INVOLUTE_OI:
 *         return geo.rb*geo.ro*((phi - geo.phi_oi0)*sin(THETA - phi) - cos(THETA - phi))
 */
    __pyx_r = 0.0;
    goto __pyx_L0;
    break;

    /* "PDSim\scroll\common_scroll_geo.pyx":110
 *     if inv == INVOLUTE_FI or inv == INVOLUTE_FO:
 *         return 0.0
 *     elif inv == INVOLUTE_OI:             # <<<<<<<<<<<<<<
 *         return geo.rb*geo.ro*((phi - geo.phi_oi0)*sin(THETA - phi) - cos(THETA - phi))
 *     elif inv == INVOLUTE_OO:
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_OI:

    /* "PDSim\scroll\common_scroll_geo.pyx":111
 *         return 0.0
 *     elif inv == INVOLUTE_OI:
 *         return geo.rb*geo.ro*((phi - geo.phi_oi0)*sin(THETA - phi) - cos(THETA - phi))             # <<<<<<<<<<<<<<
 *     elif inv == INVOLUTE_OO:
 *         return geo.rb*geo.ro*((phi - geo.phi_oo0)*sin(THETA - phi) - cos(THETA - phi))
 */
    __pyx_r = ((__pyx_v_geo->rb * __pyx_v_geo->ro) * (((__pyx_v_phi - __pyx_v_geo->phi_oi0) * sin((__pyx_v_THETA - __pyx_v_phi))) - cos((__pyx_v_THETA - __pyx_v_phi))));
    goto __pyx_L0;
    break;

    /* "PDSim\scroll\common_scroll_geo.pyx":112
 *     elif inv == INVOLUTE_OI:
 *         return geo.rb*geo.ro*((phi - geo.phi_oi0)*sin(THETA - phi) - cos(THETA - phi))
 *     elif inv == INVOLUTE_OO:             # <<<<<<<<<<<<<<
 *         return geo.rb*geo.ro*((phi - geo.phi_oo0)*sin(THETA - phi) - cos(THETA - phi))
 * 
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_OO:

    /* "PDSim\scroll\common_scroll_geo.pyx":113
 *         return geo.rb*geo.ro*((phi - geo.phi_oi0)*sin(THETA - phi) - cos(THETA - phi))
 *     elif inv == INVOLUTE_OO:
 *         return geo.rb*geo.ro*((phi - geo.phi_oo0)*sin(THETA - phi) - cos(THETA - phi))             # <<<<<<<<<<<<<<
 * 
 * cdef coords_inv_dtheta(double phi, geoVals geo, double theta, int inv, double *dx, double *dy):
 */
    __pyx_r = ((__pyx_v_geo->rb * __pyx_v_geo->ro) * (((__pyx_v_phi - __pyx_v_geo->phi_oo0) * sin((__pyx_v_THETA - __pyx_v_phi))) - cos((__pyx_v_THETA - __pyx_v_phi))));
    goto __pyx_L0;
    break;
    default: break;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":101
 *         return geo.rb*(geo.rb*(phi - geo.phi_oo0)**2 + (phi- geo.phi_oo0)*geo.ro*sin(THETA - phi))
 * 
 * cpdef double dGr_dtheta(double phi, geoVals geo, double theta, int inv):             # <<<<<<<<<<<<<<
 *     """
 *     The partial derivative of Gr with respect to theta with phi held constant
 */

  /* function exit code */
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13dGr_dtheta(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_12dGr_dtheta[] = "dGr_dtheta(double phi, geoVals geo, double theta, int inv) -> double\n\n    The partial derivative of Gr with respect to theta with phi held constant\n    ";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13dGr_dtheta(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_phi;
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo = 0;
  double __pyx_v_theta;
  int __pyx_v_inv;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dGr_dtheta (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_phi,&__pyx_n_s_geo,&__pyx_n_s_theta,&__pyx_n_s_inv,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_phi)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_geo)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dGr_dtheta", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_theta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dGr_dtheta", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_inv)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dGr_dtheta", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dGr_dtheta") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_phi = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_phi == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_geo = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)values[1]);
    __pyx_v_theta = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_theta == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_inv = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_inv == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dGr_dtheta", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.dGr_dtheta", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_geo), __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_geoVals, 1, "geo", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_12dGr_dtheta(__pyx_self, __pyx_v_phi, __pyx_v_geo, __pyx_v_theta, __pyx_v_inv);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_12dGr_dtheta(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, int __pyx_v_inv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("dGr_dtheta", 0);
  __Pyx_TraceCall("dGr_dtheta", __pyx_f[0], 101);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_5PDSim_6scroll_17common_scroll_geo_dGr_dtheta(__pyx_v_phi, __pyx_v_geo, __pyx_v_theta, __pyx_v_inv, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.dGr_dtheta", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":115
 *         return geo.rb*geo.ro*((phi - geo.phi_oo0)*sin(THETA - phi) - cos(THETA - phi))
 * 
 * cdef coords_inv_dtheta(double phi, geoVals geo, double theta, int inv, double *dx, double *dy):             # <<<<<<<<<<<<<<
 *     """
 *     Internal function that does the calculation if phi is a double variable
 */

static PyObject *__pyx_f_5PDSim_6scroll_17common_scroll_geo_coords_inv_dtheta(CYTHON_UNUSED double __pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, int __pyx_v_inv, double *__pyx_v_dx, double *__pyx_v_dy) {
  double __pyx_v_rb;
  double __pyx_v_ro;
  double __pyx_v_om;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("coords_inv_dtheta", 0);
  __Pyx_TraceCall("coords_inv_dtheta", __pyx_f[0], 115);

  /* "PDSim\scroll\common_scroll_geo.pyx":120
 *     """
 * 
 *     rb = geo.rb             # <<<<<<<<<<<<<<
 *     ro = rb*(pi - geo.phi_fi0 + geo.phi_oo0)
 *     om = geo.phi_fie - theta + 3.0*pi/2.0
 */
  __pyx_t_1 = __pyx_v_geo->rb;
  __pyx_v_rb = __pyx_t_1;

  /* "PDSim\scroll\common_scroll_geo.pyx":121
 * 
 *     rb = geo.rb
 *     ro = rb*(pi - geo.phi_fi0 + geo.phi_oo0)             # <<<<<<<<<<<<<<
 *     om = geo.phi_fie - theta + 3.0*pi/2.0
 * 
 */
  __pyx_v_ro = (__pyx_v_rb * ((M_PI - __pyx_v_geo->phi_fi0) + __pyx_v_geo->phi_oo0));

  /* "PDSim\scroll\common_scroll_geo.pyx":122
 *     rb = geo.rb
 *     ro = rb*(pi - geo.phi_fi0 + geo.phi_oo0)
 *     om = geo.phi_fie - theta + 3.0*pi/2.0             # <<<<<<<<<<<<<<
 * 
 *     if inv == INVOLUTE_FI or inv == INVOLUTE_FO:
 */
  __pyx_v_om = ((__pyx_v_geo->phi_fie - __pyx_v_theta) + ((3.0 * M_PI) / 2.0));

  /* "PDSim\scroll\common_scroll_geo.pyx":127
 *         dx[0] = 0.0
 *         dy[0] = 0.0
 *     elif inv == INVOLUTE_OI or inv == INVOLUTE_OO:             # <<<<<<<<<<<<<<
 *         dx[0] = +ro*sin(om)
 *         dy[0] = -ro*cos(om)
 */
  switch (__pyx_v_inv) {

    /* "PDSim\scroll\common_scroll_geo.pyx":124
 *     om = geo.phi_fie - theta + 3.0*pi/2.0
 * 
 *     if inv == INVOLUTE_FI or inv == INVOLUTE_FO:             # <<<<<<<<<<<<<<
 *         dx[0] = 0.0
 *         dy[0] = 0.0
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_FI:
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_FO:

    /* "PDSim\scroll\common_scroll_geo.pyx":125
 * 
 *     if inv == INVOLUTE_FI or inv == INVOLUTE_FO:
 *         dx[0] = 0.0             # <<<<<<<<<<<<<<
 *         dy[0] = 0.0
 *     elif inv == INVOLUTE_OI or inv == INVOLUTE_OO:
 */
    (__pyx_v_dx[0]) = 0.0;

    /* "PDSim\scroll\common_scroll_geo.pyx":126
 *     if inv == INVOLUTE_FI or inv == INVOLUTE_FO:
 *         dx[0] = 0.0
 *         dy[0] = 0.0             # <<<<<<<<<<<<<<
 *     elif inv == INVOLUTE_OI or inv == INVOLUTE_OO:
 *         dx[0] = +ro*sin(om)
 */
    (__pyx_v_dy[0]) = 0.0;
    break;

    /* "PDSim\scroll\common_scroll_geo.pyx":127
 *         dx[0] = 0.0
 *         dy[0] = 0.0
 *     elif inv == INVOLUTE_OI or inv == INVOLUTE_OO:             # <<<<<<<<<<<<<<
 *         dx[0] = +ro*sin(om)
 *         dy[0] = -ro*cos(om)
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_OI:
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_OO:

    /* "PDSim\scroll\common_scroll_geo.pyx":128
 *         dy[0] = 0.0
 *     elif inv == INVOLUTE_OI or inv == INVOLUTE_OO:
 *         dx[0] = +ro*sin(om)             # <<<<<<<<<<<<<<
 *         dy[0] = -ro*cos(om)
 *     else:
 */
    (__pyx_v_dx[0]) = (__pyx_v_ro * sin(__pyx_v_om));

    /* "PDSim\scroll\common_scroll_geo.pyx":129
 *     elif inv == INVOLUTE_OI or inv == INVOLUTE_OO:
 *         dx[0] = +ro*sin(om)
 *         dy[0] = -ro*cos(om)             # <<<<<<<<<<<<<<
 *     else:
 *         raise ValueError('flag not valid')
 */
    (__pyx_v_dy[0]) = ((-__pyx_v_ro) * cos(__pyx_v_om));
    break;
    default:

    /* "PDSim\scroll\common_scroll_geo.pyx":131
 *         dy[0] = -ro*cos(om)
 *     else:
 *         raise ValueError('flag not valid')             # <<<<<<<<<<<<<<
 * 
 * cpdef long get_compressor_CV_index(str key) except *:
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    break;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":115
 *         return geo.rb*geo.ro*((phi - geo.phi_oo0)*sin(THETA - phi) - cos(THETA - phi))
 * 
 * cdef coords_inv_dtheta(double phi, geoVals geo, double theta, int inv, double *dx, double *dy):             # <<<<<<<<<<<<<<
 *     """
 *     Internal function that does the calculation if phi is a double variable
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.coords_inv_dtheta", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":133
 *         raise ValueError('flag not valid')
 * 
 * cpdef long get_compressor_CV_index(str key) except *:             # <<<<<<<<<<<<<<
 *     """
 *     Returns the index defined in the ``compressor_CV_indices`` enum.
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_15get_compressor_CV_index(PyObject *__pyx_self, PyObject *__pyx_v_key); /*proto*/
static long __pyx_f_5PDSim_6scroll_17common_scroll_geo_get_compressor_CV_index(PyObject *__pyx_v_key, CYTHON_UNUSED int __pyx_skip_dispatch) {
  long __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("get_compressor_CV_index", 0);
  __Pyx_TraceCall("get_compressor_CV_index", __pyx_f[0], 133);

  /* "PDSim\scroll\common_scroll_geo.pyx":138
 *     """
 * 
 *     if key == 'sa':             # <<<<<<<<<<<<<<
 *         return keyIsa
 *     elif key == 's1':
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_n_s_sa, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":139
 * 
 *     if key == 'sa':
 *         return keyIsa             # <<<<<<<<<<<<<<
 *     elif key == 's1':
 *         return keyIs1
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIsa;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":140
 *     if key == 'sa':
 *         return keyIsa
 *     elif key == 's1':             # <<<<<<<<<<<<<<
 *         return keyIs1
 *     elif key == 's2':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_n_s_s1, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "PDSim\scroll\common_scroll_geo.pyx":141
 *         return keyIsa
 *     elif key == 's1':
 *         return keyIs1             # <<<<<<<<<<<<<<
 *     elif key == 's2':
 *         return keyIs2
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIs1;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":142
 *     elif key == 's1':
 *         return keyIs1
 *     elif key == 's2':             # <<<<<<<<<<<<<<
 *         return keyIs2
 *     elif key == 'd1':
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_n_s_s2, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":143
 *         return keyIs1
 *     elif key == 's2':
 *         return keyIs2             # <<<<<<<<<<<<<<
 *     elif key == 'd1':
 *         return keyId1
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIs2;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":144
 *     elif key == 's2':
 *         return keyIs2
 *     elif key == 'd1':             # <<<<<<<<<<<<<<
 *         return keyId1
 *     elif key == 'd2':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_n_s_d1, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "PDSim\scroll\common_scroll_geo.pyx":145
 *         return keyIs2
 *     elif key == 'd1':
 *         return keyId1             # <<<<<<<<<<<<<<
 *     elif key == 'd2':
 *         return keyId2
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyId1;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":146
 *     elif key == 'd1':
 *         return keyId1
 *     elif key == 'd2':             # <<<<<<<<<<<<<<
 *         return keyId2
 *     elif key == 'dd':
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_n_s_d2, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":147
 *         return keyId1
 *     elif key == 'd2':
 *         return keyId2             # <<<<<<<<<<<<<<
 *     elif key == 'dd':
 *         return keyIdd
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyId2;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":148
 *     elif key == 'd2':
 *         return keyId2
 *     elif key == 'dd':             # <<<<<<<<<<<<<<
 *         return keyIdd
 *     elif key == 'ddd':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_n_s_dd, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "PDSim\scroll\common_scroll_geo.pyx":149
 *         return keyId2
 *     elif key == 'dd':
 *         return keyIdd             # <<<<<<<<<<<<<<
 *     elif key == 'ddd':
 *         return keyIddd
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIdd;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":150
 *     elif key == 'dd':
 *         return keyIdd
 *     elif key == 'ddd':             # <<<<<<<<<<<<<<
 *         return keyIddd
 *     elif key == 'c1.1':
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_n_s_ddd, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":151
 *         return keyIdd
 *     elif key == 'ddd':
 *         return keyIddd             # <<<<<<<<<<<<<<
 *     elif key == 'c1.1':
 *         return keyIc1_1
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIddd;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":152
 *     elif key == 'ddd':
 *         return keyIddd
 *     elif key == 'c1.1':             # <<<<<<<<<<<<<<
 *         return keyIc1_1
 *     elif key == 'c2.1':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c1_1, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "PDSim\scroll\common_scroll_geo.pyx":153
 *         return keyIddd
 *     elif key == 'c1.1':
 *         return keyIc1_1             # <<<<<<<<<<<<<<
 *     elif key == 'c2.1':
 *         return keyIc2_1
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_1;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":154
 *     elif key == 'c1.1':
 *         return keyIc1_1
 *     elif key == 'c2.1':             # <<<<<<<<<<<<<<
 *         return keyIc2_1
 *     elif key == 'c1.2':
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c2_1, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":155
 *         return keyIc1_1
 *     elif key == 'c2.1':
 *         return keyIc2_1             # <<<<<<<<<<<<<<
 *     elif key == 'c1.2':
 *         return keyIc1_2
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_1;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":156
 *     elif key == 'c2.1':
 *         return keyIc2_1
 *     elif key == 'c1.2':             # <<<<<<<<<<<<<<
 *         return keyIc1_2
 *     elif key == 'c2.2':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c1_2, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "PDSim\scroll\common_scroll_geo.pyx":157
 *         return keyIc2_1
 *     elif key == 'c1.2':
 *         return keyIc1_2             # <<<<<<<<<<<<<<
 *     elif key == 'c2.2':
 *         return keyIc2_2
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_2;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":158
 *     elif key == 'c1.2':
 *         return keyIc1_2
 *     elif key == 'c2.2':             # <<<<<<<<<<<<<<
 *         return keyIc2_2
 *     elif key == 'c1.3':
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c2_2, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":159
 *         return keyIc1_2
 *     elif key == 'c2.2':
 *         return keyIc2_2             # <<<<<<<<<<<<<<
 *     elif key == 'c1.3':
 *         return keyIc1_3
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_2;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":160
 *     elif key == 'c2.2':
 *         return keyIc2_2
 *     elif key == 'c1.3':             # <<<<<<<<<<<<<<
 *         return keyIc1_3
 *     elif key == 'c2.3':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c1_3, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "PDSim\scroll\common_scroll_geo.pyx":161
 *         return keyIc2_2
 *     elif key == 'c1.3':
 *         return keyIc1_3             # <<<<<<<<<<<<<<
 *     elif key == 'c2.3':
 *         return keyIc2_3
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_3;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":162
 *     elif key == 'c1.3':
 *         return keyIc1_3
 *     elif key == 'c2.3':             # <<<<<<<<<<<<<<
 *         return keyIc2_3
 *     elif key == 'c1.4':
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c2_3, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":163
 *         return keyIc1_3
 *     elif key == 'c2.3':
 *         return keyIc2_3             # <<<<<<<<<<<<<<
 *     elif key == 'c1.4':
 *         return keyIc1_4
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_3;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":164
 *     elif key == 'c2.3':
 *         return keyIc2_3
 *     elif key == 'c1.4':             # <<<<<<<<<<<<<<
 *         return keyIc1_4
 *     elif key == 'c2.4':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c1_4, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "PDSim\scroll\common_scroll_geo.pyx":165
 *         return keyIc2_3
 *     elif key == 'c1.4':
 *         return keyIc1_4             # <<<<<<<<<<<<<<
 *     elif key == 'c2.4':
 *         return keyIc2_4
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_4;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":166
 *     elif key == 'c1.4':
 *         return keyIc1_4
 *     elif key == 'c2.4':             # <<<<<<<<<<<<<<
 *         return keyIc2_4
 *     elif key == 'c1.5':
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c2_4, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":167
 *         return keyIc1_4
 *     elif key == 'c2.4':
 *         return keyIc2_4             # <<<<<<<<<<<<<<
 *     elif key == 'c1.5':
 *         return keyIc1_5
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_4;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":168
 *     elif key == 'c2.4':
 *         return keyIc2_4
 *     elif key == 'c1.5':             # <<<<<<<<<<<<<<
 *         return keyIc1_5
 *     elif key == 'c2.5':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c1_5, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "PDSim\scroll\common_scroll_geo.pyx":169
 *         return keyIc2_4
 *     elif key == 'c1.5':
 *         return keyIc1_5             # <<<<<<<<<<<<<<
 *     elif key == 'c2.5':
 *         return keyIc2_5
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_5;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":170
 *     elif key == 'c1.5':
 *         return keyIc1_5
 *     elif key == 'c2.5':             # <<<<<<<<<<<<<<
 *         return keyIc2_5
 *     elif key == 'c1.6':
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c2_5, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":171
 *         return keyIc1_5
 *     elif key == 'c2.5':
 *         return keyIc2_5             # <<<<<<<<<<<<<<
 *     elif key == 'c1.6':
 *         return keyIc1_6
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_5;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":172
 *     elif key == 'c2.5':
 *         return keyIc2_5
 *     elif key == 'c1.6':             # <<<<<<<<<<<<<<
 *         return keyIc1_6
 *     elif key == 'c2.6':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c1_6, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "PDSim\scroll\common_scroll_geo.pyx":173
 *         return keyIc2_5
 *     elif key == 'c1.6':
 *         return keyIc1_6             # <<<<<<<<<<<<<<
 *     elif key == 'c2.6':
 *         return keyIc2_6
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_6;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":174
 *     elif key == 'c1.6':
 *         return keyIc1_6
 *     elif key == 'c2.6':             # <<<<<<<<<<<<<<
 *         return keyIc2_6
 *     elif key == 'c1.7':
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c2_6, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":175
 *         return keyIc1_6
 *     elif key == 'c2.6':
 *         return keyIc2_6             # <<<<<<<<<<<<<<
 *     elif key == 'c1.7':
 *         return keyIc1_7
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_6;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":176
 *     elif key == 'c2.6':
 *         return keyIc2_6
 *     elif key == 'c1.7':             # <<<<<<<<<<<<<<
 *         return keyIc1_7
 *     elif key == 'c2.7':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c1_7, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "PDSim\scroll\common_scroll_geo.pyx":177
 *         return keyIc2_6
 *     elif key == 'c1.7':
 *         return keyIc1_7             # <<<<<<<<<<<<<<
 *     elif key == 'c2.7':
 *         return keyIc2_7
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_7;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":178
 *     elif key == 'c1.7':
 *         return keyIc1_7
 *     elif key == 'c2.7':             # <<<<<<<<<<<<<<
 *         return keyIc2_7
 *     elif key == 'c1.8':
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c2_7, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":179
 *         return keyIc1_7
 *     elif key == 'c2.7':
 *         return keyIc2_7             # <<<<<<<<<<<<<<
 *     elif key == 'c1.8':
 *         return keyIc1_8
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_7;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":180
 *     elif key == 'c2.7':
 *         return keyIc2_7
 *     elif key == 'c1.8':             # <<<<<<<<<<<<<<
 *         return keyIc1_8
 *     elif key == 'c2.8':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c1_8, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "PDSim\scroll\common_scroll_geo.pyx":181
 *         return keyIc2_7
 *     elif key == 'c1.8':
 *         return keyIc1_8             # <<<<<<<<<<<<<<
 *     elif key == 'c2.8':
 *         return keyIc2_8
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_8;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":182
 *     elif key == 'c1.8':
 *         return keyIc1_8
 *     elif key == 'c2.8':             # <<<<<<<<<<<<<<
 *         return keyIc2_8
 *     elif key == 'c1.9':
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c2_8, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":183
 *         return keyIc1_8
 *     elif key == 'c2.8':
 *         return keyIc2_8             # <<<<<<<<<<<<<<
 *     elif key == 'c1.9':
 *         return keyIc1_9
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_8;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":184
 *     elif key == 'c2.8':
 *         return keyIc2_8
 *     elif key == 'c1.9':             # <<<<<<<<<<<<<<
 *         return keyIc1_9
 *     elif key == 'c2.9':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c1_9, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "PDSim\scroll\common_scroll_geo.pyx":185
 *         return keyIc2_8
 *     elif key == 'c1.9':
 *         return keyIc1_9             # <<<<<<<<<<<<<<
 *     elif key == 'c2.9':
 *         return keyIc2_9
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_9;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":186
 *     elif key == 'c1.9':
 *         return keyIc1_9
 *     elif key == 'c2.9':             # <<<<<<<<<<<<<<
 *         return keyIc2_9
 *     elif key == 'c1.10':
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c2_9, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":187
 *         return keyIc1_9
 *     elif key == 'c2.9':
 *         return keyIc2_9             # <<<<<<<<<<<<<<
 *     elif key == 'c1.10':
 *         return keyIc1_10
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_9;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":188
 *     elif key == 'c2.9':
 *         return keyIc2_9
 *     elif key == 'c1.10':             # <<<<<<<<<<<<<<
 *         return keyIc1_10
 *     elif key == 'c2.10':
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c1_10, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "PDSim\scroll\common_scroll_geo.pyx":189
 *         return keyIc2_9
 *     elif key == 'c1.10':
 *         return keyIc1_10             # <<<<<<<<<<<<<<
 *     elif key == 'c2.10':
 *         return keyIc2_10
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc1_10;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":190
 *     elif key == 'c1.10':
 *         return keyIc1_10
 *     elif key == 'c2.10':             # <<<<<<<<<<<<<<
 *         return keyIc2_10
 *     else:
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_key, __pyx_kp_s_c2_10, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":191
 *         return keyIc1_10
 *     elif key == 'c2.10':
 *         return keyIc2_10             # <<<<<<<<<<<<<<
 *     else:
 *         return -1
 */
    __pyx_r = __pyx_e_5PDSim_6scroll_17common_scroll_geo_keyIc2_10;
    goto __pyx_L0;
  }
  /*else*/ {

    /* "PDSim\scroll\common_scroll_geo.pyx":193
 *         return keyIc2_10
 *     else:
 *         return -1             # <<<<<<<<<<<<<<
 * 
 * cpdef long get_compression_chamber_index(long path, long alpha):
 */
    __pyx_r = -1;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":133
 *         raise ValueError('flag not valid')
 * 
 * cpdef long get_compressor_CV_index(str key) except *:             # <<<<<<<<<<<<<<
 *     """
 *     Returns the index defined in the ``compressor_CV_indices`` enum.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.get_compressor_CV_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_15get_compressor_CV_index(PyObject *__pyx_self, PyObject *__pyx_v_key); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_14get_compressor_CV_index[] = "get_compressor_CV_index(str key) -> long\n\n    Returns the index defined in the ``compressor_CV_indices`` enum. \n    ";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_15get_compressor_CV_index(PyObject *__pyx_self, PyObject *__pyx_v_key) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_compressor_CV_index (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_key), (&PyString_Type), 1, "key", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_14get_compressor_CV_index(__pyx_self, ((PyObject*)__pyx_v_key));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_14get_compressor_CV_index(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("get_compressor_CV_index", 0);
  __Pyx_TraceCall("get_compressor_CV_index", __pyx_f[0], 133);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5PDSim_6scroll_17common_scroll_geo_get_compressor_CV_index(__pyx_v_key, 0); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.get_compressor_CV_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":195
 *         return -1
 * 
 * cpdef long get_compression_chamber_index(long path, long alpha):             # <<<<<<<<<<<<<<
 *     """
 *     Return the index for the compression chamber with integers
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_17get_compression_chamber_index(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static long __pyx_f_5PDSim_6scroll_17common_scroll_geo_get_compression_chamber_index(long __pyx_v_path, long __pyx_v_alpha, CYTHON_UNUSED int __pyx_skip_dispatch) {
  long __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("get_compression_chamber_index", 0);
  __Pyx_TraceCall("get_compression_chamber_index", __pyx_f[0], 195);

  /* "PDSim\scroll\common_scroll_geo.pyx":199
 *     Return the index for the compression chamber with integers
 *     """
 *     return 1000*path+alpha             # <<<<<<<<<<<<<<
 * 
 * #This is a list of all the members in geoVals
 */
  __pyx_r = ((1000 * __pyx_v_path) + __pyx_v_alpha);
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":195
 *         return -1
 * 
 * cpdef long get_compression_chamber_index(long path, long alpha):             # <<<<<<<<<<<<<<
 *     """
 *     Return the index for the compression chamber with integers
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_17get_compression_chamber_index(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_16get_compression_chamber_index[] = "get_compression_chamber_index(long path, long alpha) -> long\n\n    Return the index for the compression chamber with integers\n    ";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_17get_compression_chamber_index(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  long __pyx_v_path;
  long __pyx_v_alpha;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_compression_chamber_index (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_path,&__pyx_n_s_alpha,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("get_compression_chamber_index", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_compression_chamber_index") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_path = __Pyx_PyInt_As_long(values[0]); if (unlikely((__pyx_v_path == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_alpha = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v_alpha == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_compression_chamber_index", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.get_compression_chamber_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_16get_compression_chamber_index(__pyx_self, __pyx_v_path, __pyx_v_alpha);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_16get_compression_chamber_index(CYTHON_UNUSED PyObject *__pyx_self, long __pyx_v_path, long __pyx_v_alpha) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("get_compression_chamber_index", 0);
  __Pyx_TraceCall("get_compression_chamber_index", __pyx_f[0], 195);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_f_5PDSim_6scroll_17common_scroll_geo_get_compression_chamber_index(__pyx_v_path, __pyx_v_alpha, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.get_compression_chamber_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":215
 *                 'cx_scroll','cy_scroll','V_scroll','Vremove']
 * 
 * def rebuild_geoVals(d):             # <<<<<<<<<<<<<<
 *     geo = geoVals()
 *     for atr in geoValsvarlist:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_19rebuild_geoVals(PyObject *__pyx_self, PyObject *__pyx_v_d); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_18rebuild_geoVals[] = "rebuild_geoVals(d)";
static PyMethodDef __pyx_mdef_5PDSim_6scroll_17common_scroll_geo_19rebuild_geoVals = {"rebuild_geoVals", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_19rebuild_geoVals, METH_O, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_18rebuild_geoVals};
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_19rebuild_geoVals(PyObject *__pyx_self, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rebuild_geoVals (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_18rebuild_geoVals(__pyx_self, ((PyObject *)__pyx_v_d));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_18rebuild_geoVals(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_d) {
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo = NULL;
  PyObject *__pyx_v_atr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(__pyx_codeobj__17)
  __Pyx_RefNannySetupContext("rebuild_geoVals", 0);
  __Pyx_TraceCall("rebuild_geoVals", __pyx_f[0], 215);

  /* "PDSim\scroll\common_scroll_geo.pyx":216
 * 
 * def rebuild_geoVals(d):
 *     geo = geoVals()             # <<<<<<<<<<<<<<
 *     for atr in geoValsvarlist:
 *         setattr(geo,atr,d[atr])
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_5PDSim_6scroll_17common_scroll_geo_geoVals)), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_geo = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":217
 * def rebuild_geoVals(d):
 *     geo = geoVals()
 *     for atr in geoValsvarlist:             # <<<<<<<<<<<<<<
 *         setattr(geo,atr,d[atr])
 *     return geo
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_geoValsvarlist); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_atr, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":218
 *     geo = geoVals()
 *     for atr in geoValsvarlist:
 *         setattr(geo,atr,d[atr])             # <<<<<<<<<<<<<<
 *     return geo
 * 
 */
    __pyx_t_1 = PyObject_GetItem(__pyx_v_d, __pyx_v_atr); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyObject_SetAttr(((PyObject *)__pyx_v_geo), __pyx_v_atr, __pyx_t_1); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":217
 * def rebuild_geoVals(d):
 *     geo = geoVals()
 *     for atr in geoValsvarlist:             # <<<<<<<<<<<<<<
 *         setattr(geo,atr,d[atr])
 *     return geo
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":219
 *     for atr in geoValsvarlist:
 *         setattr(geo,atr,d[atr])
 *     return geo             # <<<<<<<<<<<<<<
 * 
 * cdef class geoVals:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_geo));
  __pyx_r = ((PyObject *)__pyx_v_geo);
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":215
 *                 'cx_scroll','cy_scroll','V_scroll','Vremove']
 * 
 * def rebuild_geoVals(d):             # <<<<<<<<<<<<<<
 *     geo = geoVals()
 *     for atr in geoValsvarlist:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.rebuild_geoVals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_geo);
  __Pyx_XDECREF(__pyx_v_atr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":223
 * cdef class geoVals:
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.phi_ie_offset = 0.0
 * 
 */

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals___init__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals___init__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__init__", 0);
  __Pyx_TraceCall("__init__", __pyx_f[0], 223);

  /* "PDSim\scroll\common_scroll_geo.pyx":224
 * 
 *     def __init__(self):
 *         self.phi_ie_offset = 0.0             # <<<<<<<<<<<<<<
 * 
 *     def __reduce__(self):
 */
  __pyx_v_self->phi_ie_offset = 0.0;

  /* "PDSim\scroll\common_scroll_geo.pyx":223
 * cdef class geoVals:
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.phi_ie_offset = 0.0
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":226
 *         self.phi_ie_offset = 0.0
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         d={}
 *         for atr in geoValsvarlist:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_3__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_7geoVals_2__reduce__[] = "geoVals.__reduce__(self)";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_3__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_2__reduce__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_2__reduce__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_v_d = NULL;
  PyObject *__pyx_v_atr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__reduce__", 0);
  __Pyx_TraceCall("__reduce__", __pyx_f[0], 226);

  /* "PDSim\scroll\common_scroll_geo.pyx":227
 * 
 *     def __reduce__(self):
 *         d={}             # <<<<<<<<<<<<<<
 *         for atr in geoValsvarlist:
 *             d[atr]=getattr(self,atr)
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_d = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":228
 *     def __reduce__(self):
 *         d={}
 *         for atr in geoValsvarlist:             # <<<<<<<<<<<<<<
 *             d[atr]=getattr(self,atr)
 *         return rebuild_geoVals,(d,)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_geoValsvarlist); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_atr, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":229
 *         d={}
 *         for atr in geoValsvarlist:
 *             d[atr]=getattr(self,atr)             # <<<<<<<<<<<<<<
 *         return rebuild_geoVals,(d,)
 * 
 */
    __pyx_t_1 = __Pyx_GetAttr(((PyObject *)__pyx_v_self), __pyx_v_atr); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(PyDict_SetItem(__pyx_v_d, __pyx_v_atr, __pyx_t_1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":228
 *     def __reduce__(self):
 *         d={}
 *         for atr in geoValsvarlist:             # <<<<<<<<<<<<<<
 *             d[atr]=getattr(self,atr)
 *         return rebuild_geoVals,(d,)
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":230
 *         for atr in geoValsvarlist:
 *             d[atr]=getattr(self,atr)
 *         return rebuild_geoVals,(d,)             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_rebuild_geoVals); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_d);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_d);
  __Pyx_GIVEREF(__pyx_v_d);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":226
 *         self.phi_ie_offset = 0.0
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         d={}
 *         for atr in geoValsvarlist:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.__reduce__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_d);
  __Pyx_XDECREF(__pyx_v_atr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":232
 *         return rebuild_geoVals,(d,)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         s='geoVals instance at '+str(id(self))+'\n'
 *         for atr in geoValsvarlist:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_4__repr__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_4__repr__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_v_s = NULL;
  PyObject *__pyx_v_atr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__repr__", 0);
  __Pyx_TraceCall("__repr__", __pyx_f[0], 232);

  /* "PDSim\scroll\common_scroll_geo.pyx":233
 * 
 *     def __repr__(self):
 *         s='geoVals instance at '+str(id(self))+'\n'             # <<<<<<<<<<<<<<
 *         for atr in geoValsvarlist:
 *             s+=atr+': '+str(getattr(self,atr))+'\n'
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_id, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_kp_s_geoVals_instance_at, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_1, __pyx_kp_s__10); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_s = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":234
 *     def __repr__(self):
 *         s='geoVals instance at '+str(id(self))+'\n'
 *         for atr in geoValsvarlist:             # <<<<<<<<<<<<<<
 *             s+=atr+': '+str(getattr(self,atr))+'\n'
 *         return s
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_geoValsvarlist); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_4(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_atr, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":235
 *         s='geoVals instance at '+str(id(self))+'\n'
 *         for atr in geoValsvarlist:
 *             s+=atr+': '+str(getattr(self,atr))+'\n'             # <<<<<<<<<<<<<<
 *         return s
 * 
 */
    __pyx_t_2 = PyNumber_Add(__pyx_v_atr, __pyx_kp_s__18); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_GetAttr(((PyObject *)__pyx_v_self), __pyx_v_atr); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), __pyx_t_6, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Add(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Add(__pyx_t_6, __pyx_kp_s__10); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_InPlaceAdd(__pyx_v_s, __pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_s, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":234
 *     def __repr__(self):
 *         s='geoVals instance at '+str(id(self))+'\n'
 *         for atr in geoValsvarlist:             # <<<<<<<<<<<<<<
 *             s+=atr+': '+str(getattr(self,atr))+'\n'
 *         return s
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":236
 *         for atr in geoValsvarlist:
 *             s+=atr+': '+str(getattr(self,atr))+'\n'
 *         return s             # <<<<<<<<<<<<<<
 * 
 *     cpdef double val_if_symmetric(self, double val):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_s);
  __pyx_r = __pyx_v_s;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":232
 *         return rebuild_geoVals,(d,)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         s='geoVals instance at '+str(id(self))+'\n'
 *         for atr in geoValsvarlist:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XDECREF(__pyx_v_atr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":238
 *         return s
 * 
 *     cpdef double val_if_symmetric(self, double val):             # <<<<<<<<<<<<<<
 *         """ Returns the value if symmetric, throws ValueError otherwise """
 *         if self.is_symmetric():
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7val_if_symmetric(PyObject *__pyx_v_self, PyObject *__pyx_arg_val); /*proto*/
static double __pyx_f_5PDSim_6scroll_17common_scroll_geo_7geoVals_val_if_symmetric(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, double __pyx_v_val, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  double __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("val_if_symmetric", 0);
  __Pyx_TraceCall("val_if_symmetric", __pyx_f[0], 238);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_val_if_symmetric); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7val_if_symmetric)) {
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_val); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_7;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":240
 *     cpdef double val_if_symmetric(self, double val):
 *         """ Returns the value if symmetric, throws ValueError otherwise """
 *         if self.is_symmetric():             # <<<<<<<<<<<<<<
 *             return val
 *         else:
 */
  __pyx_t_8 = (((struct __pyx_vtabstruct_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self->__pyx_vtab)->is_symmetric(__pyx_v_self, 0) != 0);
  if (__pyx_t_8) {

    /* "PDSim\scroll\common_scroll_geo.pyx":241
 *         """ Returns the value if symmetric, throws ValueError otherwise """
 *         if self.is_symmetric():
 *             return val             # <<<<<<<<<<<<<<
 *         else:
 *             raise ValueError('Symmetric angle requested (phi_ie, phi_is, phi_i0, etc.) but the geometry is not symmetric')
 */
    __pyx_r = __pyx_v_val;
    goto __pyx_L0;
  }
  /*else*/ {

    /* "PDSim\scroll\common_scroll_geo.pyx":243
 *             return val
 *         else:
 *             raise ValueError('Symmetric angle requested (phi_ie, phi_is, phi_i0, etc.) but the geometry is not symmetric')             # <<<<<<<<<<<<<<
 * 
 *     property phi_ie:
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":238
 *         return s
 * 
 *     cpdef double val_if_symmetric(self, double val):             # <<<<<<<<<<<<<<
 *         """ Returns the value if symmetric, throws ValueError otherwise """
 *         if self.is_symmetric():
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_WriteUnraisable("PDSim.scroll.common_scroll_geo.geoVals.val_if_symmetric", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7val_if_symmetric(PyObject *__pyx_v_self, PyObject *__pyx_arg_val); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_7geoVals_6val_if_symmetric[] = "geoVals.val_if_symmetric(self, double val) -> double\n Returns the value if symmetric, throws ValueError otherwise ";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7val_if_symmetric(PyObject *__pyx_v_self, PyObject *__pyx_arg_val) {
  double __pyx_v_val;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("val_if_symmetric (wrapper)", 0);
  assert(__pyx_arg_val); {
    __pyx_v_val = __pyx_PyFloat_AsDouble(__pyx_arg_val); if (unlikely((__pyx_v_val == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.val_if_symmetric", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6val_if_symmetric(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((double)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6val_if_symmetric(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, double __pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("val_if_symmetric", 0);
  __Pyx_TraceCall("val_if_symmetric", __pyx_f[0], 238);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_5PDSim_6scroll_17common_scroll_geo_7geoVals_val_if_symmetric(__pyx_v_self, __pyx_v_val, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.val_if_symmetric", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":247
 *     property phi_ie:
 *         """ Inner Ending Angle """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.val_if_symmetric(self.phi_fie)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_ie_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_ie_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_ie___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_ie___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[0], 247);

  /* "PDSim\scroll\common_scroll_geo.pyx":248
 *         """ Inner Ending Angle """
 *         def __get__(self):
 *             return self.val_if_symmetric(self.phi_fie)             # <<<<<<<<<<<<<<
 * 
 *     property phi_is:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_vtabstruct_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self->__pyx_vtab)->val_if_symmetric(__pyx_v_self, __pyx_v_self->phi_fie, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":247
 *     property phi_ie:
 *         """ Inner Ending Angle """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.val_if_symmetric(self.phi_fie)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_ie.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":252
 *     property phi_is:
 *         """ Inner Starting Angle """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.val_if_symmetric(self.phi_fis)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_is_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_is_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_is___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_is___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[0], 252);

  /* "PDSim\scroll\common_scroll_geo.pyx":253
 *         """ Inner Starting Angle """
 *         def __get__(self):
 *             return self.val_if_symmetric(self.phi_fis)             # <<<<<<<<<<<<<<
 * 
 *     property phi_i0:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_vtabstruct_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self->__pyx_vtab)->val_if_symmetric(__pyx_v_self, __pyx_v_self->phi_fis, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":252
 *     property phi_is:
 *         """ Inner Starting Angle """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.val_if_symmetric(self.phi_fis)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_is.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":257
 *     property phi_i0:
 *         """ Inner Initial Angle """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.val_if_symmetric(self.phi_fi0)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_i0_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_i0_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_i0___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_i0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[0], 257);

  /* "PDSim\scroll\common_scroll_geo.pyx":258
 *         """ Inner Initial Angle """
 *         def __get__(self):
 *             return self.val_if_symmetric(self.phi_fi0)             # <<<<<<<<<<<<<<
 * 
 *     property phi_oe:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_vtabstruct_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self->__pyx_vtab)->val_if_symmetric(__pyx_v_self, __pyx_v_self->phi_fi0, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":257
 *     property phi_i0:
 *         """ Inner Initial Angle """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.val_if_symmetric(self.phi_fi0)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_i0.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":262
 *     property phi_oe:
 *         """ Outer Ending Angle """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.val_if_symmetric(self.phi_foe)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_oe_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_oe_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_oe___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_oe___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[0], 262);

  /* "PDSim\scroll\common_scroll_geo.pyx":263
 *         """ Outer Ending Angle """
 *         def __get__(self):
 *             return self.val_if_symmetric(self.phi_foe)             # <<<<<<<<<<<<<<
 * 
 *     property phi_os:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_vtabstruct_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self->__pyx_vtab)->val_if_symmetric(__pyx_v_self, __pyx_v_self->phi_foe, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":262
 *     property phi_oe:
 *         """ Outer Ending Angle """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.val_if_symmetric(self.phi_foe)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_oe.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":267
 *     property phi_os:
 *         """ Outer Starting Angle """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.val_if_symmetric(self.phi_fos)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_os_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_os_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_os___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_os___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[0], 267);

  /* "PDSim\scroll\common_scroll_geo.pyx":268
 *         """ Outer Starting Angle """
 *         def __get__(self):
 *             return self.val_if_symmetric(self.phi_fos)             # <<<<<<<<<<<<<<
 * 
 *     property phi_o0:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_vtabstruct_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self->__pyx_vtab)->val_if_symmetric(__pyx_v_self, __pyx_v_self->phi_fos, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":267
 *     property phi_os:
 *         """ Outer Starting Angle """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.val_if_symmetric(self.phi_fos)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_os.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":272
 *     property phi_o0:
 *         """ Outer Initial Angle """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.val_if_symmetric(self.phi_fo0)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_o0_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_o0_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_o0___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_o0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[0], 272);

  /* "PDSim\scroll\common_scroll_geo.pyx":273
 *         """ Outer Initial Angle """
 *         def __get__(self):
 *             return self.val_if_symmetric(self.phi_fo0)             # <<<<<<<<<<<<<<
 * 
 *     cpdef bint is_symmetric(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_vtabstruct_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self->__pyx_vtab)->val_if_symmetric(__pyx_v_self, __pyx_v_self->phi_fo0, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":272
 *     property phi_o0:
 *         """ Outer Initial Angle """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.val_if_symmetric(self.phi_fo0)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_o0.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":275
 *             return self.val_if_symmetric(self.phi_fo0)
 * 
 *     cpdef bint is_symmetric(self):             # <<<<<<<<<<<<<<
 *         """
 *         Returns true if all the angles for the fixed scroll are the same as for the orbiting scroll
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9is_symmetric(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static int __pyx_f_5PDSim_6scroll_17common_scroll_geo_7geoVals_is_symmetric(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("is_symmetric", 0);
  __Pyx_TraceCall("is_symmetric", __pyx_f[0], 275);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_is_symmetric); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9is_symmetric)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":279
 *         Returns true if all the angles for the fixed scroll are the same as for the orbiting scroll
 *         """
 *         return (abs(self.phi_fi0-self.phi_oi0) < 1e-14             # <<<<<<<<<<<<<<
 *                 and abs(self.phi_fis-self.phi_ois) < 1e-14
 *                 and abs(self.phi_fie-self.phi_oie) < 1e-14
 */
  __pyx_t_6 = ((fabs((__pyx_v_self->phi_fi0 - __pyx_v_self->phi_oi0)) < 1e-14) != 0);
  if (__pyx_t_6) {
  } else {
    __pyx_t_5 = __pyx_t_6;
    goto __pyx_L3_bool_binop_done;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":280
 *         """
 *         return (abs(self.phi_fi0-self.phi_oi0) < 1e-14
 *                 and abs(self.phi_fis-self.phi_ois) < 1e-14             # <<<<<<<<<<<<<<
 *                 and abs(self.phi_fie-self.phi_oie) < 1e-14
 *                 and abs(self.phi_fo0-self.phi_oo0) < 1e-14
 */
  __pyx_t_6 = ((fabs((__pyx_v_self->phi_fis - __pyx_v_self->phi_ois)) < 1e-14) != 0);
  if (__pyx_t_6) {
  } else {
    __pyx_t_5 = __pyx_t_6;
    goto __pyx_L3_bool_binop_done;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":281
 *         return (abs(self.phi_fi0-self.phi_oi0) < 1e-14
 *                 and abs(self.phi_fis-self.phi_ois) < 1e-14
 *                 and abs(self.phi_fie-self.phi_oie) < 1e-14             # <<<<<<<<<<<<<<
 *                 and abs(self.phi_fo0-self.phi_oo0) < 1e-14
 *                 and abs(self.phi_fos-self.phi_oos) < 1e-14
 */
  __pyx_t_6 = ((fabs((__pyx_v_self->phi_fie - __pyx_v_self->phi_oie)) < 1e-14) != 0);
  if (__pyx_t_6) {
  } else {
    __pyx_t_5 = __pyx_t_6;
    goto __pyx_L3_bool_binop_done;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":282
 *                 and abs(self.phi_fis-self.phi_ois) < 1e-14
 *                 and abs(self.phi_fie-self.phi_oie) < 1e-14
 *                 and abs(self.phi_fo0-self.phi_oo0) < 1e-14             # <<<<<<<<<<<<<<
 *                 and abs(self.phi_fos-self.phi_oos) < 1e-14
 *                 and abs(self.phi_foe-self.phi_ooe) < 1e-14
 */
  __pyx_t_6 = ((fabs((__pyx_v_self->phi_fo0 - __pyx_v_self->phi_oo0)) < 1e-14) != 0);
  if (__pyx_t_6) {
  } else {
    __pyx_t_5 = __pyx_t_6;
    goto __pyx_L3_bool_binop_done;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":283
 *                 and abs(self.phi_fie-self.phi_oie) < 1e-14
 *                 and abs(self.phi_fo0-self.phi_oo0) < 1e-14
 *                 and abs(self.phi_fos-self.phi_oos) < 1e-14             # <<<<<<<<<<<<<<
 *                 and abs(self.phi_foe-self.phi_ooe) < 1e-14
 *                 )
 */
  __pyx_t_6 = ((fabs((__pyx_v_self->phi_fos - __pyx_v_self->phi_oos)) < 1e-14) != 0);
  if (__pyx_t_6) {
  } else {
    __pyx_t_5 = __pyx_t_6;
    goto __pyx_L3_bool_binop_done;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":284
 *                 and abs(self.phi_fo0-self.phi_oo0) < 1e-14
 *                 and abs(self.phi_fos-self.phi_oos) < 1e-14
 *                 and abs(self.phi_foe-self.phi_ooe) < 1e-14             # <<<<<<<<<<<<<<
 *                 )
 * 
 */
  __pyx_t_6 = ((fabs((__pyx_v_self->phi_foe - __pyx_v_self->phi_ooe)) < 1e-14) != 0);
  __pyx_t_5 = __pyx_t_6;
  __pyx_L3_bool_binop_done:;
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":275
 *             return self.val_if_symmetric(self.phi_fo0)
 * 
 *     cpdef bint is_symmetric(self):             # <<<<<<<<<<<<<<
 *         """
 *         Returns true if all the angles for the fixed scroll are the same as for the orbiting scroll
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("PDSim.scroll.common_scroll_geo.geoVals.is_symmetric", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9is_symmetric(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_7geoVals_8is_symmetric[] = "geoVals.is_symmetric(self) -> bool\n\n        Returns true if all the angles for the fixed scroll are the same as for the orbiting scroll\n        ";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9is_symmetric(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_symmetric (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_8is_symmetric(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_8is_symmetric(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("is_symmetric", 0);
  __Pyx_TraceCall("is_symmetric", __pyx_f[0], 275);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_5PDSim_6scroll_17common_scroll_geo_7geoVals_is_symmetric(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.is_symmetric", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":50
 * #Take over the geo class with strict typing
 * cdef class geoVals:
 *     cdef public double h,ro,rb,t             # <<<<<<<<<<<<<<
 *     cdef public double phi_fi0,phi_fis,phi_fie,phi_fo0,phi_fos,phi_foe, phi_oi0,phi_ois,phi_oie, phi_oo0,phi_oos,phi_ooe
 *     cdef public double xa_arc1,ya_arc1,ra_arc1,t1_arc1,t2_arc1
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_1h_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_1h_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_1h___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_1h___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 50);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->h); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.h.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_1h_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_1h_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_1h_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_1h_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 50);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->h = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.h.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_2ro_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_2ro_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_2ro___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_2ro___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 50);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ro); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.ro.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_2ro_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_2ro_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_2ro_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_2ro_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 50);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->ro = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.ro.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_2rb_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_2rb_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_2rb___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_2rb___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 50);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->rb); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.rb.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_2rb_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_2rb_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_2rb_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_2rb_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 50);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->rb = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.rb.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_1t_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_1t_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_1t___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_1t___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 50);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->t); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.t.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_1t_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_1t_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_1t_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_1t_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 50);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->t = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.t.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":51
 * cdef class geoVals:
 *     cdef public double h,ro,rb,t
 *     cdef public double phi_fi0,phi_fis,phi_fie,phi_fo0,phi_fos,phi_foe, phi_oi0,phi_ois,phi_oie, phi_oo0,phi_oos,phi_ooe             # <<<<<<<<<<<<<<
 *     cdef public double xa_arc1,ya_arc1,ra_arc1,t1_arc1,t2_arc1
 *     cdef public double xa_arc2,ya_arc2,ra_arc2,t1_arc2,t2_arc2
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fi0_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fi0_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fi0___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fi0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 51);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_fi0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_fi0.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fi0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fi0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fi0_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fi0_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 51);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_fi0 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_fi0.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fis_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fis_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fis___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fis___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 51);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_fis); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_fis.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fis_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fis_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fis_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fis_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 51);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_fis = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_fis.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fie_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fie_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fie___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fie___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 51);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_fie); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_fie.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fie_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fie_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fie_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fie_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 51);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_fie = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_fie.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fo0_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fo0_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fo0___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fo0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 51);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_fo0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_fo0.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fo0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fo0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fo0_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fo0_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 51);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_fo0 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_fo0.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fos_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fos_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fos___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fos___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 51);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_fos); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_fos.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fos_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fos_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fos_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fos_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 51);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_fos = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_fos.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_foe_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_foe_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_foe___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_foe___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 51);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_foe); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_foe.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_foe_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_foe_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_foe_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_foe_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 51);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_foe = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_foe.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oi0_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oi0_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oi0___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oi0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 51);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_oi0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_oi0.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oi0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oi0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oi0_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oi0_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 51);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_oi0 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_oi0.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ois_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ois_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ois___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ois___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 51);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_ois); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_ois.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ois_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ois_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ois_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ois_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 51);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_ois = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_ois.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oie_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oie_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oie___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oie___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 51);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_oie); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_oie.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oie_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oie_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oie_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oie_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 51);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_oie = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_oie.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oo0_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oo0_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oo0___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oo0___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 51);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_oo0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_oo0.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oo0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oo0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oo0_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oo0_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 51);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_oo0 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_oo0.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oos_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oos_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oos___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oos___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 51);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_oos); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_oos.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oos_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oos_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oos_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oos_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 51);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_oos = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_oos.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ooe_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ooe_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ooe___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ooe___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 51);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_ooe); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_ooe.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ooe_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ooe_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ooe_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ooe_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 51);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_ooe = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_ooe.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":52
 *     cdef public double h,ro,rb,t
 *     cdef public double phi_fi0,phi_fis,phi_fie,phi_fo0,phi_fos,phi_foe, phi_oi0,phi_ois,phi_oie, phi_oo0,phi_oos,phi_ooe
 *     cdef public double xa_arc1,ya_arc1,ra_arc1,t1_arc1,t2_arc1             # <<<<<<<<<<<<<<
 *     cdef public double xa_arc2,ya_arc2,ra_arc2,t1_arc2,t2_arc2
 *     cdef public double b_line, t1_line, t2_line, m_line
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc1___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc1___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 52);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->xa_arc1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.xa_arc1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc1_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc1_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 52);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->xa_arc1 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.xa_arc1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc1___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc1___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 52);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ya_arc1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.ya_arc1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc1_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc1_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 52);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->ya_arc1 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.ya_arc1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc1___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc1___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 52);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ra_arc1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.ra_arc1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc1_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc1_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 52);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->ra_arc1 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.ra_arc1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc1___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc1___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 52);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->t1_arc1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.t1_arc1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc1_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc1_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 52);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->t1_arc1 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.t1_arc1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc1___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc1___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 52);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->t2_arc1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.t2_arc1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc1_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc1_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 52);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->t2_arc1 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.t2_arc1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":53
 *     cdef public double phi_fi0,phi_fis,phi_fie,phi_fo0,phi_fos,phi_foe, phi_oi0,phi_ois,phi_oie, phi_oo0,phi_oos,phi_ooe
 *     cdef public double xa_arc1,ya_arc1,ra_arc1,t1_arc1,t2_arc1
 *     cdef public double xa_arc2,ya_arc2,ra_arc2,t1_arc2,t2_arc2             # <<<<<<<<<<<<<<
 *     cdef public double b_line, t1_line, t2_line, m_line
 *     cdef public double x0_wall,y0_wall,r_wall
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc2___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc2___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 53);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->xa_arc2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.xa_arc2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc2_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc2_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 53);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->xa_arc2 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.xa_arc2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc2___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc2___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 53);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ya_arc2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.ya_arc2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc2_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc2_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 53);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->ya_arc2 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.ya_arc2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc2___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc2___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 53);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ra_arc2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.ra_arc2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc2_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc2_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 53);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->ra_arc2 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.ra_arc2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc2___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc2___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 53);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->t1_arc2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.t1_arc2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc2_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc2_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 53);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->t1_arc2 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.t1_arc2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc2___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc2___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 53);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->t2_arc2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.t2_arc2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc2_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc2_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 53);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->t2_arc2 = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.t2_arc2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":54
 *     cdef public double xa_arc1,ya_arc1,ra_arc1,t1_arc1,t2_arc1
 *     cdef public double xa_arc2,ya_arc2,ra_arc2,t1_arc2,t2_arc2
 *     cdef public double b_line, t1_line, t2_line, m_line             # <<<<<<<<<<<<<<
 *     cdef public double x0_wall,y0_wall,r_wall
 *     cdef public double delta_radial, delta_flank
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6b_line_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6b_line_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6b_line___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6b_line___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 54);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->b_line); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.b_line.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6b_line_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6b_line_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6b_line_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6b_line_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 54);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->b_line = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.b_line.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_line_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_line_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_line___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_line___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 54);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->t1_line); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.t1_line.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_line_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_line_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_line_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_line_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 54);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->t1_line = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.t1_line.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_line_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_line_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_line___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_line___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 54);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->t2_line); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.t2_line.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_line_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_line_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_line_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_line_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 54);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->t2_line = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.t2_line.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6m_line_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6m_line_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6m_line___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6m_line___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 54);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_line); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.m_line.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6m_line_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6m_line_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6m_line_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6m_line_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 54);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->m_line = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.m_line.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":55
 *     cdef public double xa_arc2,ya_arc2,ra_arc2,t1_arc2,t2_arc2
 *     cdef public double b_line, t1_line, t2_line, m_line
 *     cdef public double x0_wall,y0_wall,r_wall             # <<<<<<<<<<<<<<
 *     cdef public double delta_radial, delta_flank
 *     cdef public double phi_ie_offset, delta_suction_offset
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7x0_wall_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7x0_wall_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7x0_wall___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7x0_wall___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 55);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->x0_wall); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.x0_wall.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7x0_wall_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7x0_wall_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7x0_wall_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7x0_wall_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 55);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->x0_wall = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.x0_wall.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7y0_wall_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7y0_wall_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7y0_wall___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7y0_wall___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 55);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->y0_wall); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.y0_wall.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7y0_wall_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7y0_wall_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7y0_wall_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7y0_wall_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 55);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->y0_wall = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.y0_wall.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6r_wall_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6r_wall_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6r_wall___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6r_wall___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 55);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->r_wall); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.r_wall.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6r_wall_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6r_wall_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6r_wall_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_6r_wall_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 55);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->r_wall = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.r_wall.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":56
 *     cdef public double b_line, t1_line, t2_line, m_line
 *     cdef public double x0_wall,y0_wall,r_wall
 *     cdef public double delta_radial, delta_flank             # <<<<<<<<<<<<<<
 *     cdef public double phi_ie_offset, delta_suction_offset
 *     cdef public double cx_scroll, cy_scroll, V_scroll
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_12delta_radial_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_12delta_radial_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_12delta_radial___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_12delta_radial___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 56);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->delta_radial); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.delta_radial.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_12delta_radial_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_12delta_radial_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_12delta_radial_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_12delta_radial_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 56);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->delta_radial = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.delta_radial.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_11delta_flank_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_11delta_flank_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_11delta_flank___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_11delta_flank___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 56);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->delta_flank); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.delta_flank.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_11delta_flank_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_11delta_flank_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_11delta_flank_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_11delta_flank_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 56);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->delta_flank = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.delta_flank.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":57
 *     cdef public double x0_wall,y0_wall,r_wall
 *     cdef public double delta_radial, delta_flank
 *     cdef public double phi_ie_offset, delta_suction_offset             # <<<<<<<<<<<<<<
 *     cdef public double cx_scroll, cy_scroll, V_scroll
 *     cdef public double Vremove
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_13phi_ie_offset_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_13phi_ie_offset_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_13phi_ie_offset___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_13phi_ie_offset___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 57);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->phi_ie_offset); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_ie_offset.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_13phi_ie_offset_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_13phi_ie_offset_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_13phi_ie_offset_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_13phi_ie_offset_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 57);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->phi_ie_offset = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.phi_ie_offset.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_20delta_suction_offset_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_20delta_suction_offset_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_20delta_suction_offset___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_20delta_suction_offset___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 57);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->delta_suction_offset); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.delta_suction_offset.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_20delta_suction_offset_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_20delta_suction_offset_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_20delta_suction_offset_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_20delta_suction_offset_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 57);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->delta_suction_offset = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.delta_suction_offset.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":58
 *     cdef public double delta_radial, delta_flank
 *     cdef public double phi_ie_offset, delta_suction_offset
 *     cdef public double cx_scroll, cy_scroll, V_scroll             # <<<<<<<<<<<<<<
 *     cdef public double Vremove
 *     cdef public np.ndarray xvec_disc_port, yvec_disc_port
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cx_scroll_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cx_scroll_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cx_scroll___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cx_scroll___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 58);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->cx_scroll); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.cx_scroll.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cx_scroll_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cx_scroll_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cx_scroll_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cx_scroll_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 58);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->cx_scroll = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.cx_scroll.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cy_scroll_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cy_scroll_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cy_scroll___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cy_scroll___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 58);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->cy_scroll); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.cy_scroll.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cy_scroll_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cy_scroll_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cy_scroll_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cy_scroll_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 58);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->cy_scroll = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.cy_scroll.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_8V_scroll_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_8V_scroll_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_8V_scroll___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_8V_scroll___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 58);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->V_scroll); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.V_scroll.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_8V_scroll_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_8V_scroll_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_8V_scroll_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_8V_scroll_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 58);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->V_scroll = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.V_scroll.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":59
 *     cdef public double phi_ie_offset, delta_suction_offset
 *     cdef public double cx_scroll, cy_scroll, V_scroll
 *     cdef public double Vremove             # <<<<<<<<<<<<<<
 *     cdef public np.ndarray xvec_disc_port, yvec_disc_port
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7Vremove_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7Vremove_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7Vremove___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7Vremove___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 59);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Vremove); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.Vremove.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7Vremove_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7Vremove_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7Vremove_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_7Vremove_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 59);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->Vremove = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.Vremove.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":60
 *     cdef public double cx_scroll, cy_scroll, V_scroll
 *     cdef public double Vremove
 *     cdef public np.ndarray xvec_disc_port, yvec_disc_port             # <<<<<<<<<<<<<<
 * 
 *     cpdef bint is_symmetric(self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 60);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->xvec_disc_port));
  __pyx_r = ((PyObject *)__pyx_v_self->xvec_disc_port);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 60);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->xvec_disc_port);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->xvec_disc_port));
  __pyx_v_self->xvec_disc_port = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.xvec_disc_port.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port_4__del__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port_4__del__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_TraceCall("__del__", __pyx_f[1], 60);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->xvec_disc_port);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->xvec_disc_port));
  __pyx_v_self->xvec_disc_port = ((PyArrayObject *)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port___get__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port___get__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_TraceCall("__get__", __pyx_f[1], 60);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->yvec_disc_port));
  __pyx_r = ((PyObject *)__pyx_v_self->yvec_disc_port);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port_2__set__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port_2__set__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_TraceCall("__set__", __pyx_f[1], 60);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->yvec_disc_port);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->yvec_disc_port));
  __pyx_v_self->yvec_disc_port = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.geoVals.yvec_disc_port.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port_4__del__(((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port_4__del__(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_TraceCall("__del__", __pyx_f[1], 60);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->yvec_disc_port);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->yvec_disc_port));
  __pyx_v_self->yvec_disc_port = ((PyArrayObject *)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":287
 *                 )
 * 
 * def polyarea(x,y):             # <<<<<<<<<<<<<<
 *     N=len(x)
 *     area = 0.0
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_21polyarea(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_20polyarea[] = "polyarea(x, y)";
static PyMethodDef __pyx_mdef_5PDSim_6scroll_17common_scroll_geo_21polyarea = {"polyarea", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_21polyarea, METH_VARARGS|METH_KEYWORDS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_20polyarea};
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_21polyarea(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("polyarea (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("polyarea", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "polyarea") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("polyarea", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.polyarea", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_20polyarea(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_20polyarea(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_v_N = NULL;
  PyObject *__pyx_v_area = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_j = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(__pyx_codeobj__20)
  __Pyx_RefNannySetupContext("polyarea", 0);
  __Pyx_TraceCall("polyarea", __pyx_f[0], 287);

  /* "PDSim\scroll\common_scroll_geo.pyx":288
 * 
 * def polyarea(x,y):
 *     N=len(x)             # <<<<<<<<<<<<<<
 *     area = 0.0
 *     for i in range(N):
 */
  __pyx_t_1 = PyObject_Length(__pyx_v_x); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_N = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":289
 * def polyarea(x,y):
 *     N=len(x)
 *     area = 0.0             # <<<<<<<<<<<<<<
 *     for i in range(N):
 *         j = (i+1) % N
 */
  __Pyx_INCREF(__pyx_float_0_0);
  __pyx_v_area = __pyx_float_0_0;

  /* "PDSim\scroll\common_scroll_geo.pyx":290
 *     N=len(x)
 *     area = 0.0
 *     for i in range(N):             # <<<<<<<<<<<<<<
 *         j = (i+1) % N
 *         area = area + x[i]*y[j] - y[i]*x[j]
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_N);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_N);
  __Pyx_GIVEREF(__pyx_v_N);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_1 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_1 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_1 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_1); __Pyx_INCREF(__pyx_t_3); __pyx_t_1++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_1); __pyx_t_1++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        if (__pyx_t_1 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_1); __Pyx_INCREF(__pyx_t_3); __pyx_t_1++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_1); __pyx_t_1++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":291
 *     area = 0.0
 *     for i in range(N):
 *         j = (i+1) % N             # <<<<<<<<<<<<<<
 *         area = area + x[i]*y[j] - y[i]*x[j]
 *     return area/2.0
 */
    __pyx_t_3 = PyNumber_Add(__pyx_v_i, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyNumber_Remainder(__pyx_t_3, __pyx_v_N); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_j, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":292
 *     for i in range(N):
 *         j = (i+1) % N
 *         area = area + x[i]*y[j] - y[i]*x[j]             # <<<<<<<<<<<<<<
 *     return area/2.0
 * 
 */
    __pyx_t_5 = PyObject_GetItem(__pyx_v_x, __pyx_v_i); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = PyObject_GetItem(__pyx_v_y, __pyx_v_j); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_5, __pyx_t_3); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Add(__pyx_v_area, __pyx_t_6); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_GetItem(__pyx_v_y, __pyx_v_i); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = PyObject_GetItem(__pyx_v_x, __pyx_v_j); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = PyNumber_Multiply(__pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Subtract(__pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF_SET(__pyx_v_area, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":290
 *     N=len(x)
 *     area = 0.0
 *     for i in range(N):             # <<<<<<<<<<<<<<
 *         j = (i+1) % N
 *         area = area + x[i]*y[j] - y[i]*x[j]
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":293
 *         j = (i+1) % N
 *         area = area + x[i]*y[j] - y[i]*x[j]
 *     return area/2.0             # <<<<<<<<<<<<<<
 * 
 * def polycentroid(xi,yi):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_v_area, __pyx_float_2_0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":287
 *                 )
 * 
 * def polyarea(x,y):             # <<<<<<<<<<<<<<
 *     N=len(x)
 *     area = 0.0
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.polyarea", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_N);
  __Pyx_XDECREF(__pyx_v_area);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":295
 *     return area/2.0
 * 
 * def polycentroid(xi,yi):             # <<<<<<<<<<<<<<
 *     # Add additional element if needed to close polygon
 *     if not xi[0]==xi[-1] or not yi[0]==yi[-1]:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_23polycentroid(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_22polycentroid[] = "polycentroid(xi, yi)";
static PyMethodDef __pyx_mdef_5PDSim_6scroll_17common_scroll_geo_23polycentroid = {"polycentroid", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_23polycentroid, METH_VARARGS|METH_KEYWORDS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_22polycentroid};
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_23polycentroid(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_xi = 0;
  PyObject *__pyx_v_yi = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("polycentroid (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xi,&__pyx_n_s_yi,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xi)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_yi)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("polycentroid", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "polycentroid") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_xi = values[0];
    __pyx_v_yi = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("polycentroid", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.polycentroid", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_22polycentroid(__pyx_self, __pyx_v_xi, __pyx_v_yi);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_22polycentroid(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_xi, PyObject *__pyx_v_yi) {
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_sumx = NULL;
  PyObject *__pyx_v_sumy = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(__pyx_codeobj__21)
  __Pyx_RefNannySetupContext("polycentroid", 0);
  __Pyx_TraceCall("polycentroid", __pyx_f[0], 295);

  /* "PDSim\scroll\common_scroll_geo.pyx":297
 * def polycentroid(xi,yi):
 *     # Add additional element if needed to close polygon
 *     if not xi[0]==xi[-1] or not yi[0]==yi[-1]:             # <<<<<<<<<<<<<<
 *         x=np.r_[xi,xi[-1]]
 *         y=np.r_[yi,yi[-1]]
 */
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_xi, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_xi, -1, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_RichCompare(__pyx_t_2, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = ((!__pyx_t_5) != 0);
  if (!__pyx_t_6) {
  } else {
    __pyx_t_1 = __pyx_t_6;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_yi, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_yi, -1, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_4, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = ((!__pyx_t_6) != 0);
  __pyx_t_1 = __pyx_t_5;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "PDSim\scroll\common_scroll_geo.pyx":298
 *     # Add additional element if needed to close polygon
 *     if not xi[0]==xi[-1] or not yi[0]==yi[-1]:
 *         x=np.r_[xi,xi[-1]]             # <<<<<<<<<<<<<<
 *         y=np.r_[yi,yi[-1]]
 *     else:
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_r); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_xi, -1, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_xi);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_xi);
    __Pyx_GIVEREF(__pyx_v_xi);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_t_4); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_x = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":299
 *     if not xi[0]==xi[-1] or not yi[0]==yi[-1]:
 *         x=np.r_[xi,xi[-1]]
 *         y=np.r_[yi,yi[-1]]             # <<<<<<<<<<<<<<
 *     else:
 *         x=xi
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_r); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_yi, -1, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_yi);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_yi);
    __Pyx_GIVEREF(__pyx_v_yi);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_GetItem(__pyx_t_4, __pyx_t_3); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_y = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "PDSim\scroll\common_scroll_geo.pyx":301
 *         y=np.r_[yi,yi[-1]]
 *     else:
 *         x=xi             # <<<<<<<<<<<<<<
 *         y=yi
 *     sumx=0.0
 */
    __Pyx_INCREF(__pyx_v_xi);
    __pyx_v_x = __pyx_v_xi;

    /* "PDSim\scroll\common_scroll_geo.pyx":302
 *     else:
 *         x=xi
 *         y=yi             # <<<<<<<<<<<<<<
 *     sumx=0.0
 *     sumy=0.0
 */
    __Pyx_INCREF(__pyx_v_yi);
    __pyx_v_y = __pyx_v_yi;
  }
  __pyx_L3:;

  /* "PDSim\scroll\common_scroll_geo.pyx":303
 *         x=xi
 *         y=yi
 *     sumx=0.0             # <<<<<<<<<<<<<<
 *     sumy=0.0
 *     for i in range(len(x)-1):
 */
  __Pyx_INCREF(__pyx_float_0_0);
  __pyx_v_sumx = __pyx_float_0_0;

  /* "PDSim\scroll\common_scroll_geo.pyx":304
 *         y=yi
 *     sumx=0.0
 *     sumy=0.0             # <<<<<<<<<<<<<<
 *     for i in range(len(x)-1):
 *         sumx=sumx+(x[i]+x[i+1])*(x[i]*y[i+1]-x[i+1]*y[i])
 */
  __Pyx_INCREF(__pyx_float_0_0);
  __pyx_v_sumy = __pyx_float_0_0;

  /* "PDSim\scroll\common_scroll_geo.pyx":305
 *     sumx=0.0
 *     sumy=0.0
 *     for i in range(len(x)-1):             # <<<<<<<<<<<<<<
 *         sumx=sumx+(x[i]+x[i+1])*(x[i]*y[i+1]-x[i+1]*y[i])
 *         sumy=sumy+(y[i]+y[i+1])*(x[i]*y[i+1]-x[i+1]*y[i])
 */
  __pyx_t_7 = PyObject_Length(__pyx_v_x); if (unlikely(__pyx_t_7 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyInt_FromSsize_t((__pyx_t_7 - 1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_3 = __pyx_t_2; __Pyx_INCREF(__pyx_t_3); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_3))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_7); __Pyx_INCREF(__pyx_t_2); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_7); __Pyx_INCREF(__pyx_t_2); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_8(__pyx_t_3);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":306
 *     sumy=0.0
 *     for i in range(len(x)-1):
 *         sumx=sumx+(x[i]+x[i+1])*(x[i]*y[i+1]-x[i+1]*y[i])             # <<<<<<<<<<<<<<
 *         sumy=sumy+(y[i]+y[i+1])*(x[i]*y[i+1]-x[i+1]*y[i])
 *     return sumx/(6*polyarea(x,y)),sumy/(6*polyarea(x,y))
 */
    __pyx_t_2 = PyObject_GetItem(__pyx_v_x, __pyx_v_i); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyNumber_Add(__pyx_v_i, __pyx_int_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = PyObject_GetItem(__pyx_v_x, __pyx_t_4); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_t_9); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyObject_GetItem(__pyx_v_x, __pyx_v_i); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_2 = PyNumber_Add(__pyx_v_i, __pyx_int_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_10 = PyObject_GetItem(__pyx_v_y, __pyx_t_2); if (unlikely(__pyx_t_10 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Multiply(__pyx_t_9, __pyx_t_10); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = PyNumber_Add(__pyx_v_i, __pyx_int_1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_9 = PyObject_GetItem(__pyx_v_x, __pyx_t_10); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = PyObject_GetItem(__pyx_v_y, __pyx_v_i); if (unlikely(__pyx_t_10 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_11 = PyNumber_Multiply(__pyx_t_9, __pyx_t_10); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = PyNumber_Subtract(__pyx_t_2, __pyx_t_11); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __pyx_t_11 = PyNumber_Multiply(__pyx_t_4, __pyx_t_10); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = PyNumber_Add(__pyx_v_sumx, __pyx_t_11); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF_SET(__pyx_v_sumx, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":307
 *     for i in range(len(x)-1):
 *         sumx=sumx+(x[i]+x[i+1])*(x[i]*y[i+1]-x[i+1]*y[i])
 *         sumy=sumy+(y[i]+y[i+1])*(x[i]*y[i+1]-x[i+1]*y[i])             # <<<<<<<<<<<<<<
 *     return sumx/(6*polyarea(x,y)),sumy/(6*polyarea(x,y))
 * 
 */
    __pyx_t_10 = PyObject_GetItem(__pyx_v_y, __pyx_v_i); if (unlikely(__pyx_t_10 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_11 = PyNumber_Add(__pyx_v_i, __pyx_int_1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_4 = PyObject_GetItem(__pyx_v_y, __pyx_t_11); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __pyx_t_11 = PyNumber_Add(__pyx_t_10, __pyx_t_4); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_GetItem(__pyx_v_x, __pyx_v_i); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_10 = PyNumber_Add(__pyx_v_i, __pyx_int_1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_2 = PyObject_GetItem(__pyx_v_y, __pyx_t_10); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = PyNumber_Multiply(__pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Add(__pyx_v_i, __pyx_int_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyObject_GetItem(__pyx_v_x, __pyx_t_2); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_GetItem(__pyx_v_y, __pyx_v_i); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_9 = PyNumber_Multiply(__pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Subtract(__pyx_t_10, __pyx_t_9); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyNumber_Multiply(__pyx_t_11, __pyx_t_2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Add(__pyx_v_sumy, __pyx_t_9); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF_SET(__pyx_v_sumy, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":305
 *     sumx=0.0
 *     sumy=0.0
 *     for i in range(len(x)-1):             # <<<<<<<<<<<<<<
 *         sumx=sumx+(x[i]+x[i+1])*(x[i]*y[i+1]-x[i+1]*y[i])
 *         sumy=sumy+(y[i]+y[i+1])*(x[i]*y[i+1]-x[i+1]*y[i])
 */
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":308
 *         sumx=sumx+(x[i]+x[i+1])*(x[i]*y[i+1]-x[i+1]*y[i])
 *         sumy=sumy+(y[i]+y[i+1])*(x[i]*y[i+1]-x[i+1]*y[i])
 *     return sumx/(6*polyarea(x,y)),sumy/(6*polyarea(x,y))             # <<<<<<<<<<<<<<
 * 
 * cpdef tuple _coords_inv_np(np.ndarray[np.float_t] phi, geoVals geo,double theta, flag=""):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_polyarea); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_9 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  __pyx_t_11 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_11);
  if (__pyx_t_9) {
    PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __Pyx_GIVEREF(__pyx_t_9); __pyx_t_9 = NULL;
  }
  __Pyx_INCREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_7, __pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_7, __pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_11, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Multiply(__pyx_int_6, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyNumber_Divide(__pyx_v_sumx, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_11 = __Pyx_GetModuleGlobalName(__pyx_n_s_polyarea); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_11);
  __pyx_t_9 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_11))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_11);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_11, function);
      __pyx_t_7 = 1;
    }
  }
  __pyx_t_10 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_10);
  if (__pyx_t_9) {
    PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9); __Pyx_GIVEREF(__pyx_t_9); __pyx_t_9 = NULL;
  }
  __Pyx_INCREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_7, __pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_7, __pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_11, __pyx_t_10, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __pyx_t_11 = PyNumber_Multiply(__pyx_int_6, __pyx_t_2); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_11);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_v_sumy, __pyx_t_11); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __pyx_t_11 = PyTuple_New(2); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_11);
  PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_11, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_11;
  __pyx_t_11 = 0;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":295
 *     return area/2.0
 * 
 * def polycentroid(xi,yi):             # <<<<<<<<<<<<<<
 *     # Add additional element if needed to close polygon
 *     if not xi[0]==xi[-1] or not yi[0]==yi[-1]:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.polycentroid", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_sumx);
  __Pyx_XDECREF(__pyx_v_sumy);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":310
 *     return sumx/(6*polyarea(x,y)),sumy/(6*polyarea(x,y))
 * 
 * cpdef tuple _coords_inv_np(np.ndarray[np.float_t] phi, geoVals geo,double theta, flag=""):             # <<<<<<<<<<<<<<
 *     """
 *     Internal function that does the calculation if phi is definitely a 1D numpy vector
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_25_coords_inv_np(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5PDSim_6scroll_17common_scroll_geo__coords_inv_np(PyArrayObject *__pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, CYTHON_UNUSED int __pyx_skip_dispatch, struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo__coords_inv_np *__pyx_optional_args) {
  PyObject *__pyx_v_flag = ((PyObject *)__pyx_kp_s_);
  double __pyx_v_rb;
  double __pyx_v_ro;
  double __pyx_v_om;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_phi;
  __Pyx_Buffer __pyx_pybuffer_phi;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("_coords_inv_np", 0);
  __Pyx_TraceCall("_coords_inv_np", __pyx_f[0], 310);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_flag = __pyx_optional_args->flag;
    }
  }
  __pyx_pybuffer_phi.pybuffer.buf = NULL;
  __pyx_pybuffer_phi.refcount = 0;
  __pyx_pybuffernd_phi.data = NULL;
  __pyx_pybuffernd_phi.rcbuffer = &__pyx_pybuffer_phi;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_phi.rcbuffer->pybuffer, (PyObject*)__pyx_v_phi, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_phi.diminfo[0].strides = __pyx_pybuffernd_phi.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_phi.diminfo[0].shape = __pyx_pybuffernd_phi.rcbuffer->pybuffer.shape[0];

  /* "PDSim\scroll\common_scroll_geo.pyx":314
 *     Internal function that does the calculation if phi is definitely a 1D numpy vector
 *     """
 *     rb = geo.rb             # <<<<<<<<<<<<<<
 *     ro = rb*(pi - geo.phi_fi0 + geo.phi_oo0)
 *     om = geo.phi_fie - theta + 3.0*pi/2.0
 */
  __pyx_t_1 = __pyx_v_geo->rb;
  __pyx_v_rb = __pyx_t_1;

  /* "PDSim\scroll\common_scroll_geo.pyx":315
 *     """
 *     rb = geo.rb
 *     ro = rb*(pi - geo.phi_fi0 + geo.phi_oo0)             # <<<<<<<<<<<<<<
 *     om = geo.phi_fie - theta + 3.0*pi/2.0
 * 
 */
  __pyx_v_ro = (__pyx_v_rb * ((M_PI - __pyx_v_geo->phi_fi0) + __pyx_v_geo->phi_oo0));

  /* "PDSim\scroll\common_scroll_geo.pyx":316
 *     rb = geo.rb
 *     ro = rb*(pi - geo.phi_fi0 + geo.phi_oo0)
 *     om = geo.phi_fie - theta + 3.0*pi/2.0             # <<<<<<<<<<<<<<
 * 
 *     if flag=="fi":
 */
  __pyx_v_om = ((__pyx_v_geo->phi_fie - __pyx_v_theta) + ((3.0 * M_PI) / 2.0));

  /* "PDSim\scroll\common_scroll_geo.pyx":318
 *     om = geo.phi_fie - theta + 3.0*pi/2.0
 * 
 *     if flag=="fi":             # <<<<<<<<<<<<<<
 *         x = rb*np.cos(phi)+rb*(phi-geo.phi_fi0)*np.sin(phi)
 *         y = rb*np.sin(phi)-rb*(phi-geo.phi_fi0)*np.cos(phi)
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_flag, __pyx_n_s_fi, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":319
 * 
 *     if flag=="fi":
 *         x = rb*np.cos(phi)+rb*(phi-geo.phi_fi0)*np.sin(phi)             # <<<<<<<<<<<<<<
 *         y = rb*np.sin(phi)-rb*(phi-geo.phi_fi0)*np.cos(phi)
 *     elif flag=="fo":
 */
    __pyx_t_3 = PyFloat_FromDouble(__pyx_v_rb); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_cos); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyFloat_FromDouble(__pyx_v_rb); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyFloat_FromDouble(__pyx_v_geo->phi_fi0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = PyNumber_Subtract(((PyObject *)__pyx_v_phi), __pyx_t_3); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_4, __pyx_t_7); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sin); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_4) {
      __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_5, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
    } else {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Multiply(__pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Add(__pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_x = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":320
 *     if flag=="fi":
 *         x = rb*np.cos(phi)+rb*(phi-geo.phi_fi0)*np.sin(phi)
 *         y = rb*np.sin(phi)-rb*(phi-geo.phi_fi0)*np.cos(phi)             # <<<<<<<<<<<<<<
 *     elif flag=="fo":
 *         x = rb*np.cos(phi)+rb*(phi-geo.phi_fo0)*np.sin(phi)
 */
    __pyx_t_7 = PyFloat_FromDouble(__pyx_v_rb); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_sin); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
    } else {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_8, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_7, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyFloat_FromDouble(__pyx_v_rb); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = PyFloat_FromDouble(__pyx_v_geo->phi_fi0); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = PyNumber_Subtract(((PyObject *)__pyx_v_phi), __pyx_t_7); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Multiply(__pyx_t_5, __pyx_t_8); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_cos); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_t_6, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
    } else {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_7, __pyx_t_8); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyNumber_Subtract(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_y = __pyx_t_8;
    __pyx_t_8 = 0;
    goto __pyx_L3;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":321
 *         x = rb*np.cos(phi)+rb*(phi-geo.phi_fi0)*np.sin(phi)
 *         y = rb*np.sin(phi)-rb*(phi-geo.phi_fi0)*np.cos(phi)
 *     elif flag=="fo":             # <<<<<<<<<<<<<<
 *         x = rb*np.cos(phi)+rb*(phi-geo.phi_fo0)*np.sin(phi)
 *         y = rb*np.sin(phi)-rb*(phi-geo.phi_fo0)*np.cos(phi)
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_flag, __pyx_n_s_fo, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":322
 *         y = rb*np.sin(phi)-rb*(phi-geo.phi_fi0)*np.cos(phi)
 *     elif flag=="fo":
 *         x = rb*np.cos(phi)+rb*(phi-geo.phi_fo0)*np.sin(phi)             # <<<<<<<<<<<<<<
 *         y = rb*np.sin(phi)-rb*(phi-geo.phi_fo0)*np.cos(phi)
 *     elif flag=="oi":
 */
    __pyx_t_8 = PyFloat_FromDouble(__pyx_v_rb); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_cos); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_7, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
    } else {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Multiply(__pyx_t_8, __pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyFloat_FromDouble(__pyx_v_rb); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = PyFloat_FromDouble(__pyx_v_geo->phi_fo0); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_4 = PyNumber_Subtract(((PyObject *)__pyx_v_phi), __pyx_t_8); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyNumber_Multiply(__pyx_t_6, __pyx_t_4); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_sin); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_8, __pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Add(__pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_x = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":323
 *     elif flag=="fo":
 *         x = rb*np.cos(phi)+rb*(phi-geo.phi_fo0)*np.sin(phi)
 *         y = rb*np.sin(phi)-rb*(phi-geo.phi_fo0)*np.cos(phi)             # <<<<<<<<<<<<<<
 *     elif flag=="oi":
 *         x = -rb*np.cos(phi)-rb*(phi-geo.phi_oi0)*np.sin(phi)+ro*np.cos(om)
 */
    __pyx_t_4 = PyFloat_FromDouble(__pyx_v_rb); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_sin); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_8, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyNumber_Multiply(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyFloat_FromDouble(__pyx_v_rb); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyFloat_FromDouble(__pyx_v_geo->phi_fo0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyNumber_Subtract(((PyObject *)__pyx_v_phi), __pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_cos); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_7, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
    } else {
      __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_6, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_6, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Multiply(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Subtract(__pyx_t_8, __pyx_t_7); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_v_y = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L3;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":324
 *         x = rb*np.cos(phi)+rb*(phi-geo.phi_fo0)*np.sin(phi)
 *         y = rb*np.sin(phi)-rb*(phi-geo.phi_fo0)*np.cos(phi)
 *     elif flag=="oi":             # <<<<<<<<<<<<<<
 *         x = -rb*np.cos(phi)-rb*(phi-geo.phi_oi0)*np.sin(phi)+ro*np.cos(om)
 *         y = -rb*np.sin(phi)+rb*(phi-geo.phi_oi0)*np.cos(phi)+ro*np.sin(om)
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_flag, __pyx_n_s_oi, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":325
 *         y = rb*np.sin(phi)-rb*(phi-geo.phi_fo0)*np.cos(phi)
 *     elif flag=="oi":
 *         x = -rb*np.cos(phi)-rb*(phi-geo.phi_oi0)*np.sin(phi)+ro*np.cos(om)             # <<<<<<<<<<<<<<
 *         y = -rb*np.sin(phi)+rb*(phi-geo.phi_oi0)*np.cos(phi)+ro*np.sin(om)
 *     elif flag=="oo":
 */
    __pyx_t_5 = PyFloat_FromDouble((-__pyx_v_rb)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_cos); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_4, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
    } else {
      __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_8); __Pyx_GIVEREF(__pyx_t_8); __pyx_t_8 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_6, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyFloat_FromDouble(__pyx_v_rb); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_5 = PyFloat_FromDouble(__pyx_v_geo->phi_oi0); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyNumber_Subtract(((PyObject *)__pyx_v_phi), __pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Multiply(__pyx_t_7, __pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_sin); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_8, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
    } else {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyNumber_Multiply(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Subtract(__pyx_t_4, __pyx_t_8); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyFloat_FromDouble(__pyx_v_ro); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_cos); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyFloat_FromDouble(__pyx_v_om); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
      PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_8, __pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Add(__pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_x = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":326
 *     elif flag=="oi":
 *         x = -rb*np.cos(phi)-rb*(phi-geo.phi_oi0)*np.sin(phi)+ro*np.cos(om)
 *         y = -rb*np.sin(phi)+rb*(phi-geo.phi_oi0)*np.cos(phi)+ro*np.sin(om)             # <<<<<<<<<<<<<<
 *     elif flag=="oo":
 *         x = -rb*np.cos(phi)-rb*(phi-geo.phi_oo0)*np.sin(phi)+ro*np.cos(om)
 */
    __pyx_t_4 = PyFloat_FromDouble((-__pyx_v_rb)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_sin); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_8, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_9, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_9, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyNumber_Multiply(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyFloat_FromDouble(__pyx_v_rb); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyFloat_FromDouble(__pyx_v_geo->phi_oi0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = PyNumber_Subtract(((PyObject *)__pyx_v_phi), __pyx_t_4); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_3, __pyx_t_9); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_cos); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_9 = __Pyx_PyObject_CallOneArg(__pyx_t_6, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_5, NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_4, __pyx_t_9); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyNumber_Add(__pyx_t_8, __pyx_t_6); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyFloat_FromDouble(__pyx_v_ro); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sin); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyFloat_FromDouble(__pyx_v_om); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_8);
    } else {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Multiply(__pyx_t_6, __pyx_t_8); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyNumber_Add(__pyx_t_9, __pyx_t_5); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_y = __pyx_t_8;
    __pyx_t_8 = 0;
    goto __pyx_L3;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":327
 *         x = -rb*np.cos(phi)-rb*(phi-geo.phi_oi0)*np.sin(phi)+ro*np.cos(om)
 *         y = -rb*np.sin(phi)+rb*(phi-geo.phi_oi0)*np.cos(phi)+ro*np.sin(om)
 *     elif flag=="oo":             # <<<<<<<<<<<<<<
 *         x = -rb*np.cos(phi)-rb*(phi-geo.phi_oo0)*np.sin(phi)+ro*np.cos(om)
 *         y = -rb*np.sin(phi)+rb*(phi-geo.phi_oo0)*np.cos(phi)+ro*np.sin(om)
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_flag, __pyx_n_s_oo, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":328
 *         y = -rb*np.sin(phi)+rb*(phi-geo.phi_oi0)*np.cos(phi)+ro*np.sin(om)
 *     elif flag=="oo":
 *         x = -rb*np.cos(phi)-rb*(phi-geo.phi_oo0)*np.sin(phi)+ro*np.cos(om)             # <<<<<<<<<<<<<<
 *         y = -rb*np.sin(phi)+rb*(phi-geo.phi_oo0)*np.cos(phi)+ro*np.sin(om)
 *     else:
 */
    __pyx_t_8 = PyFloat_FromDouble((-__pyx_v_rb)); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_cos); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_6, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
    } else {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_9); __Pyx_GIVEREF(__pyx_t_9); __pyx_t_9 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_8, __pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyFloat_FromDouble(__pyx_v_rb); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_8 = PyFloat_FromDouble(__pyx_v_geo->phi_oo0); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = PyNumber_Subtract(((PyObject *)__pyx_v_phi), __pyx_t_8); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyNumber_Multiply(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sin); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_9, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
    } else {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_4, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyNumber_Multiply(__pyx_t_8, __pyx_t_7); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Subtract(__pyx_t_6, __pyx_t_9); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyFloat_FromDouble(__pyx_v_ro); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_cos); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyFloat_FromDouble(__pyx_v_om); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_8); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_GOTREF(__pyx_t_6);
    } else {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_9, __pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Add(__pyx_t_7, __pyx_t_4); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_x = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":329
 *     elif flag=="oo":
 *         x = -rb*np.cos(phi)-rb*(phi-geo.phi_oo0)*np.sin(phi)+ro*np.cos(om)
 *         y = -rb*np.sin(phi)+rb*(phi-geo.phi_oo0)*np.cos(phi)+ro*np.sin(om)             # <<<<<<<<<<<<<<
 *     else:
 *         raise ValueError('flag not valid')
 */
    __pyx_t_6 = PyFloat_FromDouble((-__pyx_v_rb)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_sin); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_3, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyNumber_Multiply(__pyx_t_6, __pyx_t_4); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyFloat_FromDouble(__pyx_v_rb); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyFloat_FromDouble(__pyx_v_geo->phi_oo0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = PyNumber_Subtract(((PyObject *)__pyx_v_phi), __pyx_t_6); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_cos); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    if (!__pyx_t_4) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_7, ((PyObject *)__pyx_v_phi)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_phi));
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, ((PyObject *)__pyx_v_phi));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_phi));
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Multiply(__pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Add(__pyx_t_9, __pyx_t_7); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyFloat_FromDouble(__pyx_v_ro); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_sin); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyFloat_FromDouble(__pyx_v_om); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    if (!__pyx_t_4) {
      __pyx_t_9 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_6); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_9);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __Pyx_GIVEREF(__pyx_t_4); __pyx_t_4 = NULL;
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_5, NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyNumber_Multiply(__pyx_t_7, __pyx_t_9); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyNumber_Add(__pyx_t_3, __pyx_t_8); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_v_y = __pyx_t_9;
    __pyx_t_9 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "PDSim\scroll\common_scroll_geo.pyx":331
 *         y = -rb*np.sin(phi)+rb*(phi-geo.phi_oo0)*np.cos(phi)+ro*np.sin(om)
 *     else:
 *         raise ValueError('flag not valid')             # <<<<<<<<<<<<<<
 *     return (x,y)
 * 
 */
    __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_Raise(__pyx_t_9, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  /* "PDSim\scroll\common_scroll_geo.pyx":332
 *     else:
 *         raise ValueError('flag not valid')
 *     return (x,y)             # <<<<<<<<<<<<<<
 * 
 * cdef _coords_inv_d_int(double phi, geoVals geo,double theta, int flag, double *x, double *y):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_INCREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  __pyx_r = ((PyObject*)__pyx_t_9);
  __pyx_t_9 = 0;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":310
 *     return sumx/(6*polyarea(x,y)),sumy/(6*polyarea(x,y))
 * 
 * cpdef tuple _coords_inv_np(np.ndarray[np.float_t] phi, geoVals geo,double theta, flag=""):             # <<<<<<<<<<<<<<
 *     """
 *     Internal function that does the calculation if phi is definitely a 1D numpy vector
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_phi.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo._coords_inv_np", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_phi.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_25_coords_inv_np(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_24_coords_inv_np[] = "_coords_inv_np(ndarray phi, geoVals geo, double theta, flag='') -> tuple\n\n    Internal function that does the calculation if phi is definitely a 1D numpy vector\n    ";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_25_coords_inv_np(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_phi = 0;
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo = 0;
  double __pyx_v_theta;
  PyObject *__pyx_v_flag = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_coords_inv_np (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_phi,&__pyx_n_s_geo,&__pyx_n_s_theta,&__pyx_n_s_flag,0};
    PyObject* values[4] = {0,0,0,0};
    values[3] = ((PyObject *)__pyx_kp_s_);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_phi)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_geo)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_coords_inv_np", 0, 3, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_theta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_coords_inv_np", 0, 3, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_flag);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_coords_inv_np") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_phi = ((PyArrayObject *)values[0]);
    __pyx_v_geo = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)values[1]);
    __pyx_v_theta = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_theta == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_flag = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_coords_inv_np", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo._coords_inv_np", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_phi), __pyx_ptype_5numpy_ndarray, 1, "phi", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_geo), __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_geoVals, 1, "geo", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_24_coords_inv_np(__pyx_self, __pyx_v_phi, __pyx_v_geo, __pyx_v_theta, __pyx_v_flag);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_24_coords_inv_np(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, PyObject *__pyx_v_flag) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_phi;
  __Pyx_Buffer __pyx_pybuffer_phi;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo__coords_inv_np __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("_coords_inv_np", 0);
  __Pyx_TraceCall("_coords_inv_np", __pyx_f[0], 310);
  __pyx_pybuffer_phi.pybuffer.buf = NULL;
  __pyx_pybuffer_phi.refcount = 0;
  __pyx_pybuffernd_phi.data = NULL;
  __pyx_pybuffernd_phi.rcbuffer = &__pyx_pybuffer_phi;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_phi.rcbuffer->pybuffer, (PyObject*)__pyx_v_phi, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_phi.diminfo[0].strides = __pyx_pybuffernd_phi.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_phi.diminfo[0].shape = __pyx_pybuffernd_phi.rcbuffer->pybuffer.shape[0];
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.flag = __pyx_v_flag;
  __pyx_t_1 = __pyx_f_5PDSim_6scroll_17common_scroll_geo__coords_inv_np(((PyArrayObject *)__pyx_v_phi), __pyx_v_geo, __pyx_v_theta, 0, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_phi.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo._coords_inv_np", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_phi.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":334
 *     return (x,y)
 * 
 * cdef _coords_inv_d_int(double phi, geoVals geo,double theta, int flag, double *x, double *y):             # <<<<<<<<<<<<<<
 *     """
 *     Internal function that does the calculation if phi is a double variable
 */

static PyObject *__pyx_f_5PDSim_6scroll_17common_scroll_geo__coords_inv_d_int(double __pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, int __pyx_v_flag, double *__pyx_v_x, double *__pyx_v_y) {
  double __pyx_v_rb;
  double __pyx_v_ro;
  double __pyx_v_om;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("_coords_inv_d_int", 0);
  __Pyx_TraceCall("_coords_inv_d_int", __pyx_f[0], 334);

  /* "PDSim\scroll\common_scroll_geo.pyx":339
 *     """
 * 
 *     rb = geo.rb             # <<<<<<<<<<<<<<
 *     ro = rb*(pi - geo.phi_fi0 + geo.phi_oo0)
 *     om = geo.phi_fie - theta + 3.0*pi/2.0
 */
  __pyx_t_1 = __pyx_v_geo->rb;
  __pyx_v_rb = __pyx_t_1;

  /* "PDSim\scroll\common_scroll_geo.pyx":340
 * 
 *     rb = geo.rb
 *     ro = rb*(pi - geo.phi_fi0 + geo.phi_oo0)             # <<<<<<<<<<<<<<
 *     om = geo.phi_fie - theta + 3.0*pi/2.0
 * 
 */
  __pyx_v_ro = (__pyx_v_rb * ((M_PI - __pyx_v_geo->phi_fi0) + __pyx_v_geo->phi_oo0));

  /* "PDSim\scroll\common_scroll_geo.pyx":341
 *     rb = geo.rb
 *     ro = rb*(pi - geo.phi_fi0 + geo.phi_oo0)
 *     om = geo.phi_fie - theta + 3.0*pi/2.0             # <<<<<<<<<<<<<<
 * 
 *     if flag == INVOLUTE_FI:
 */
  __pyx_v_om = ((__pyx_v_geo->phi_fie - __pyx_v_theta) + ((3.0 * M_PI) / 2.0));

  /* "PDSim\scroll\common_scroll_geo.pyx":352
 *         x[0] = -rb*cos(phi)-rb*(phi-geo.phi_oi0)*sin(phi)+ro*cos(om)
 *         y[0] = -rb*sin(phi)+rb*(phi-geo.phi_oi0)*cos(phi)+ro*sin(om)
 *     elif flag == INVOLUTE_OO:             # <<<<<<<<<<<<<<
 *         x[0] = -rb*cos(phi)-rb*(phi-geo.phi_oo0)*sin(phi)+ro*cos(om)
 *         y[0] = -rb*sin(phi)+rb*(phi-geo.phi_oo0)*cos(phi)+ro*sin(om)
 */
  switch (__pyx_v_flag) {

    /* "PDSim\scroll\common_scroll_geo.pyx":343
 *     om = geo.phi_fie - theta + 3.0*pi/2.0
 * 
 *     if flag == INVOLUTE_FI:             # <<<<<<<<<<<<<<
 *         x[0] = rb*cos(phi)+rb*(phi-geo.phi_fi0)*sin(phi)
 *         y[0] = rb*sin(phi)-rb*(phi-geo.phi_fi0)*cos(phi)
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_FI:

    /* "PDSim\scroll\common_scroll_geo.pyx":344
 * 
 *     if flag == INVOLUTE_FI:
 *         x[0] = rb*cos(phi)+rb*(phi-geo.phi_fi0)*sin(phi)             # <<<<<<<<<<<<<<
 *         y[0] = rb*sin(phi)-rb*(phi-geo.phi_fi0)*cos(phi)
 *     elif flag == INVOLUTE_FO:
 */
    (__pyx_v_x[0]) = ((__pyx_v_rb * cos(__pyx_v_phi)) + ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_fi0)) * sin(__pyx_v_phi)));

    /* "PDSim\scroll\common_scroll_geo.pyx":345
 *     if flag == INVOLUTE_FI:
 *         x[0] = rb*cos(phi)+rb*(phi-geo.phi_fi0)*sin(phi)
 *         y[0] = rb*sin(phi)-rb*(phi-geo.phi_fi0)*cos(phi)             # <<<<<<<<<<<<<<
 *     elif flag == INVOLUTE_FO:
 *         x[0] = rb*cos(phi)+rb*(phi-geo.phi_fo0)*sin(phi)
 */
    (__pyx_v_y[0]) = ((__pyx_v_rb * sin(__pyx_v_phi)) - ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_fi0)) * cos(__pyx_v_phi)));
    break;

    /* "PDSim\scroll\common_scroll_geo.pyx":346
 *         x[0] = rb*cos(phi)+rb*(phi-geo.phi_fi0)*sin(phi)
 *         y[0] = rb*sin(phi)-rb*(phi-geo.phi_fi0)*cos(phi)
 *     elif flag == INVOLUTE_FO:             # <<<<<<<<<<<<<<
 *         x[0] = rb*cos(phi)+rb*(phi-geo.phi_fo0)*sin(phi)
 *         y[0] = rb*sin(phi)-rb*(phi-geo.phi_fo0)*cos(phi)
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_FO:

    /* "PDSim\scroll\common_scroll_geo.pyx":347
 *         y[0] = rb*sin(phi)-rb*(phi-geo.phi_fi0)*cos(phi)
 *     elif flag == INVOLUTE_FO:
 *         x[0] = rb*cos(phi)+rb*(phi-geo.phi_fo0)*sin(phi)             # <<<<<<<<<<<<<<
 *         y[0] = rb*sin(phi)-rb*(phi-geo.phi_fo0)*cos(phi)
 *     elif flag == INVOLUTE_OI:
 */
    (__pyx_v_x[0]) = ((__pyx_v_rb * cos(__pyx_v_phi)) + ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_fo0)) * sin(__pyx_v_phi)));

    /* "PDSim\scroll\common_scroll_geo.pyx":348
 *     elif flag == INVOLUTE_FO:
 *         x[0] = rb*cos(phi)+rb*(phi-geo.phi_fo0)*sin(phi)
 *         y[0] = rb*sin(phi)-rb*(phi-geo.phi_fo0)*cos(phi)             # <<<<<<<<<<<<<<
 *     elif flag == INVOLUTE_OI:
 *         x[0] = -rb*cos(phi)-rb*(phi-geo.phi_oi0)*sin(phi)+ro*cos(om)
 */
    (__pyx_v_y[0]) = ((__pyx_v_rb * sin(__pyx_v_phi)) - ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_fo0)) * cos(__pyx_v_phi)));
    break;

    /* "PDSim\scroll\common_scroll_geo.pyx":349
 *         x[0] = rb*cos(phi)+rb*(phi-geo.phi_fo0)*sin(phi)
 *         y[0] = rb*sin(phi)-rb*(phi-geo.phi_fo0)*cos(phi)
 *     elif flag == INVOLUTE_OI:             # <<<<<<<<<<<<<<
 *         x[0] = -rb*cos(phi)-rb*(phi-geo.phi_oi0)*sin(phi)+ro*cos(om)
 *         y[0] = -rb*sin(phi)+rb*(phi-geo.phi_oi0)*cos(phi)+ro*sin(om)
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_OI:

    /* "PDSim\scroll\common_scroll_geo.pyx":350
 *         y[0] = rb*sin(phi)-rb*(phi-geo.phi_fo0)*cos(phi)
 *     elif flag == INVOLUTE_OI:
 *         x[0] = -rb*cos(phi)-rb*(phi-geo.phi_oi0)*sin(phi)+ro*cos(om)             # <<<<<<<<<<<<<<
 *         y[0] = -rb*sin(phi)+rb*(phi-geo.phi_oi0)*cos(phi)+ro*sin(om)
 *     elif flag == INVOLUTE_OO:
 */
    (__pyx_v_x[0]) = ((((-__pyx_v_rb) * cos(__pyx_v_phi)) - ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_oi0)) * sin(__pyx_v_phi))) + (__pyx_v_ro * cos(__pyx_v_om)));

    /* "PDSim\scroll\common_scroll_geo.pyx":351
 *     elif flag == INVOLUTE_OI:
 *         x[0] = -rb*cos(phi)-rb*(phi-geo.phi_oi0)*sin(phi)+ro*cos(om)
 *         y[0] = -rb*sin(phi)+rb*(phi-geo.phi_oi0)*cos(phi)+ro*sin(om)             # <<<<<<<<<<<<<<
 *     elif flag == INVOLUTE_OO:
 *         x[0] = -rb*cos(phi)-rb*(phi-geo.phi_oo0)*sin(phi)+ro*cos(om)
 */
    (__pyx_v_y[0]) = ((((-__pyx_v_rb) * sin(__pyx_v_phi)) + ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_oi0)) * cos(__pyx_v_phi))) + (__pyx_v_ro * sin(__pyx_v_om)));
    break;

    /* "PDSim\scroll\common_scroll_geo.pyx":352
 *         x[0] = -rb*cos(phi)-rb*(phi-geo.phi_oi0)*sin(phi)+ro*cos(om)
 *         y[0] = -rb*sin(phi)+rb*(phi-geo.phi_oi0)*cos(phi)+ro*sin(om)
 *     elif flag == INVOLUTE_OO:             # <<<<<<<<<<<<<<
 *         x[0] = -rb*cos(phi)-rb*(phi-geo.phi_oo0)*sin(phi)+ro*cos(om)
 *         y[0] = -rb*sin(phi)+rb*(phi-geo.phi_oo0)*cos(phi)+ro*sin(om)
 */
    case __pyx_e_5PDSim_6scroll_17common_scroll_geo_INVOLUTE_OO:

    /* "PDSim\scroll\common_scroll_geo.pyx":353
 *         y[0] = -rb*sin(phi)+rb*(phi-geo.phi_oi0)*cos(phi)+ro*sin(om)
 *     elif flag == INVOLUTE_OO:
 *         x[0] = -rb*cos(phi)-rb*(phi-geo.phi_oo0)*sin(phi)+ro*cos(om)             # <<<<<<<<<<<<<<
 *         y[0] = -rb*sin(phi)+rb*(phi-geo.phi_oo0)*cos(phi)+ro*sin(om)
 *     else:
 */
    (__pyx_v_x[0]) = ((((-__pyx_v_rb) * cos(__pyx_v_phi)) - ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_oo0)) * sin(__pyx_v_phi))) + (__pyx_v_ro * cos(__pyx_v_om)));

    /* "PDSim\scroll\common_scroll_geo.pyx":354
 *     elif flag == INVOLUTE_OO:
 *         x[0] = -rb*cos(phi)-rb*(phi-geo.phi_oo0)*sin(phi)+ro*cos(om)
 *         y[0] = -rb*sin(phi)+rb*(phi-geo.phi_oo0)*cos(phi)+ro*sin(om)             # <<<<<<<<<<<<<<
 *     else:
 *         raise ValueError('flag not valid')
 */
    (__pyx_v_y[0]) = ((((-__pyx_v_rb) * sin(__pyx_v_phi)) + ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_oo0)) * cos(__pyx_v_phi))) + (__pyx_v_ro * sin(__pyx_v_om)));
    break;
    default:

    /* "PDSim\scroll\common_scroll_geo.pyx":356
 *         y[0] = -rb*sin(phi)+rb*(phi-geo.phi_oo0)*cos(phi)+ro*sin(om)
 *     else:
 *         raise ValueError('flag not valid')             # <<<<<<<<<<<<<<
 * 
 * cpdef tuple _coords_inv_d(double phi, geoVals geo,double theta, flag=""):
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    break;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":334
 *     return (x,y)
 * 
 * cdef _coords_inv_d_int(double phi, geoVals geo,double theta, int flag, double *x, double *y):             # <<<<<<<<<<<<<<
 *     """
 *     Internal function that does the calculation if phi is a double variable
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo._coords_inv_d_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":358
 *         raise ValueError('flag not valid')
 * 
 * cpdef tuple _coords_inv_d(double phi, geoVals geo,double theta, flag=""):             # <<<<<<<<<<<<<<
 *     """
 *     Internal function that does the calculation if phi is a double variable
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_27_coords_inv_d(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5PDSim_6scroll_17common_scroll_geo__coords_inv_d(double __pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, CYTHON_UNUSED int __pyx_skip_dispatch, struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo__coords_inv_d *__pyx_optional_args) {
  PyObject *__pyx_v_flag = ((PyObject *)__pyx_kp_s_);
  double __pyx_v_rb;
  double __pyx_v_ro;
  double __pyx_v_om;
  double __pyx_v_x;
  double __pyx_v_y;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("_coords_inv_d", 0);
  __Pyx_TraceCall("_coords_inv_d", __pyx_f[0], 358);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_flag = __pyx_optional_args->flag;
    }
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":363
 *     """
 * 
 *     rb = geo.rb             # <<<<<<<<<<<<<<
 *     ro = rb*(pi - geo.phi_fi0 + geo.phi_oo0)
 *     om = geo.phi_fie - theta + 3.0*pi/2.0
 */
  __pyx_t_1 = __pyx_v_geo->rb;
  __pyx_v_rb = __pyx_t_1;

  /* "PDSim\scroll\common_scroll_geo.pyx":364
 * 
 *     rb = geo.rb
 *     ro = rb*(pi - geo.phi_fi0 + geo.phi_oo0)             # <<<<<<<<<<<<<<
 *     om = geo.phi_fie - theta + 3.0*pi/2.0
 * 
 */
  __pyx_v_ro = (__pyx_v_rb * ((M_PI - __pyx_v_geo->phi_fi0) + __pyx_v_geo->phi_oo0));

  /* "PDSim\scroll\common_scroll_geo.pyx":365
 *     rb = geo.rb
 *     ro = rb*(pi - geo.phi_fi0 + geo.phi_oo0)
 *     om = geo.phi_fie - theta + 3.0*pi/2.0             # <<<<<<<<<<<<<<
 * 
 *     if flag=="fi":
 */
  __pyx_v_om = ((__pyx_v_geo->phi_fie - __pyx_v_theta) + ((3.0 * M_PI) / 2.0));

  /* "PDSim\scroll\common_scroll_geo.pyx":367
 *     om = geo.phi_fie - theta + 3.0*pi/2.0
 * 
 *     if flag=="fi":             # <<<<<<<<<<<<<<
 *         x = rb*cos(phi)+rb*(phi-geo.phi_fi0)*sin(phi)
 *         y = rb*sin(phi)-rb*(phi-geo.phi_fi0)*cos(phi)
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_flag, __pyx_n_s_fi, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":368
 * 
 *     if flag=="fi":
 *         x = rb*cos(phi)+rb*(phi-geo.phi_fi0)*sin(phi)             # <<<<<<<<<<<<<<
 *         y = rb*sin(phi)-rb*(phi-geo.phi_fi0)*cos(phi)
 *     elif flag=="fo":
 */
    __pyx_v_x = ((__pyx_v_rb * cos(__pyx_v_phi)) + ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_fi0)) * sin(__pyx_v_phi)));

    /* "PDSim\scroll\common_scroll_geo.pyx":369
 *     if flag=="fi":
 *         x = rb*cos(phi)+rb*(phi-geo.phi_fi0)*sin(phi)
 *         y = rb*sin(phi)-rb*(phi-geo.phi_fi0)*cos(phi)             # <<<<<<<<<<<<<<
 *     elif flag=="fo":
 *         x = rb*cos(phi)+rb*(phi-geo.phi_fo0)*sin(phi)
 */
    __pyx_v_y = ((__pyx_v_rb * sin(__pyx_v_phi)) - ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_fi0)) * cos(__pyx_v_phi)));
    goto __pyx_L3;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":370
 *         x = rb*cos(phi)+rb*(phi-geo.phi_fi0)*sin(phi)
 *         y = rb*sin(phi)-rb*(phi-geo.phi_fi0)*cos(phi)
 *     elif flag=="fo":             # <<<<<<<<<<<<<<
 *         x = rb*cos(phi)+rb*(phi-geo.phi_fo0)*sin(phi)
 *         y = rb*sin(phi)-rb*(phi-geo.phi_fo0)*cos(phi)
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_flag, __pyx_n_s_fo, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":371
 *         y = rb*sin(phi)-rb*(phi-geo.phi_fi0)*cos(phi)
 *     elif flag=="fo":
 *         x = rb*cos(phi)+rb*(phi-geo.phi_fo0)*sin(phi)             # <<<<<<<<<<<<<<
 *         y = rb*sin(phi)-rb*(phi-geo.phi_fo0)*cos(phi)
 *     elif flag=="oi":
 */
    __pyx_v_x = ((__pyx_v_rb * cos(__pyx_v_phi)) + ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_fo0)) * sin(__pyx_v_phi)));

    /* "PDSim\scroll\common_scroll_geo.pyx":372
 *     elif flag=="fo":
 *         x = rb*cos(phi)+rb*(phi-geo.phi_fo0)*sin(phi)
 *         y = rb*sin(phi)-rb*(phi-geo.phi_fo0)*cos(phi)             # <<<<<<<<<<<<<<
 *     elif flag=="oi":
 *         x = -rb*cos(phi)-rb*(phi-geo.phi_oi0)*sin(phi)+ro*cos(om)
 */
    __pyx_v_y = ((__pyx_v_rb * sin(__pyx_v_phi)) - ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_fo0)) * cos(__pyx_v_phi)));
    goto __pyx_L3;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":373
 *         x = rb*cos(phi)+rb*(phi-geo.phi_fo0)*sin(phi)
 *         y = rb*sin(phi)-rb*(phi-geo.phi_fo0)*cos(phi)
 *     elif flag=="oi":             # <<<<<<<<<<<<<<
 *         x = -rb*cos(phi)-rb*(phi-geo.phi_oi0)*sin(phi)+ro*cos(om)
 *         y = -rb*sin(phi)+rb*(phi-geo.phi_oi0)*cos(phi)+ro*sin(om)
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_flag, __pyx_n_s_oi, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":374
 *         y = rb*sin(phi)-rb*(phi-geo.phi_fo0)*cos(phi)
 *     elif flag=="oi":
 *         x = -rb*cos(phi)-rb*(phi-geo.phi_oi0)*sin(phi)+ro*cos(om)             # <<<<<<<<<<<<<<
 *         y = -rb*sin(phi)+rb*(phi-geo.phi_oi0)*cos(phi)+ro*sin(om)
 *     elif flag=="oo":
 */
    __pyx_v_x = ((((-__pyx_v_rb) * cos(__pyx_v_phi)) - ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_oi0)) * sin(__pyx_v_phi))) + (__pyx_v_ro * cos(__pyx_v_om)));

    /* "PDSim\scroll\common_scroll_geo.pyx":375
 *     elif flag=="oi":
 *         x = -rb*cos(phi)-rb*(phi-geo.phi_oi0)*sin(phi)+ro*cos(om)
 *         y = -rb*sin(phi)+rb*(phi-geo.phi_oi0)*cos(phi)+ro*sin(om)             # <<<<<<<<<<<<<<
 *     elif flag=="oo":
 *         x = -rb*cos(phi)-rb*(phi-geo.phi_oo0)*sin(phi)+ro*cos(om)
 */
    __pyx_v_y = ((((-__pyx_v_rb) * sin(__pyx_v_phi)) + ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_oi0)) * cos(__pyx_v_phi))) + (__pyx_v_ro * sin(__pyx_v_om)));
    goto __pyx_L3;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":376
 *         x = -rb*cos(phi)-rb*(phi-geo.phi_oi0)*sin(phi)+ro*cos(om)
 *         y = -rb*sin(phi)+rb*(phi-geo.phi_oi0)*cos(phi)+ro*sin(om)
 *     elif flag=="oo":             # <<<<<<<<<<<<<<
 *         x = -rb*cos(phi)-rb*(phi-geo.phi_oo0)*sin(phi)+ro*cos(om)
 *         y = -rb*sin(phi)+rb*(phi-geo.phi_oo0)*cos(phi)+ro*sin(om)
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_flag, __pyx_n_s_oo, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":377
 *         y = -rb*sin(phi)+rb*(phi-geo.phi_oi0)*cos(phi)+ro*sin(om)
 *     elif flag=="oo":
 *         x = -rb*cos(phi)-rb*(phi-geo.phi_oo0)*sin(phi)+ro*cos(om)             # <<<<<<<<<<<<<<
 *         y = -rb*sin(phi)+rb*(phi-geo.phi_oo0)*cos(phi)+ro*sin(om)
 *     else:
 */
    __pyx_v_x = ((((-__pyx_v_rb) * cos(__pyx_v_phi)) - ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_oo0)) * sin(__pyx_v_phi))) + (__pyx_v_ro * cos(__pyx_v_om)));

    /* "PDSim\scroll\common_scroll_geo.pyx":378
 *     elif flag=="oo":
 *         x = -rb*cos(phi)-rb*(phi-geo.phi_oo0)*sin(phi)+ro*cos(om)
 *         y = -rb*sin(phi)+rb*(phi-geo.phi_oo0)*cos(phi)+ro*sin(om)             # <<<<<<<<<<<<<<
 *     else:
 *         raise ValueError('flag not valid')
 */
    __pyx_v_y = ((((-__pyx_v_rb) * sin(__pyx_v_phi)) + ((__pyx_v_rb * (__pyx_v_phi - __pyx_v_geo->phi_oo0)) * cos(__pyx_v_phi))) + (__pyx_v_ro * sin(__pyx_v_om)));
    goto __pyx_L3;
  }
  /*else*/ {

    /* "PDSim\scroll\common_scroll_geo.pyx":380
 *         y = -rb*sin(phi)+rb*(phi-geo.phi_oo0)*cos(phi)+ro*sin(om)
 *     else:
 *         raise ValueError('flag not valid')             # <<<<<<<<<<<<<<
 *     return (x,y)
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  /* "PDSim\scroll\common_scroll_geo.pyx":381
 *     else:
 *         raise ValueError('flag not valid')
 *     return (x,y)             # <<<<<<<<<<<<<<
 * 
 * cpdef tuple coords_inv(phi,geoVals geo,double theta,flag="fi"):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_x); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_y); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_r = ((PyObject*)__pyx_t_5);
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":358
 *         raise ValueError('flag not valid')
 * 
 * cpdef tuple _coords_inv_d(double phi, geoVals geo,double theta, flag=""):             # <<<<<<<<<<<<<<
 *     """
 *     Internal function that does the calculation if phi is a double variable
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo._coords_inv_d", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_27_coords_inv_d(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_26_coords_inv_d[] = "_coords_inv_d(double phi, geoVals geo, double theta, flag='') -> tuple\n\n    Internal function that does the calculation if phi is a double variable \n    ";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_27_coords_inv_d(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_phi;
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo = 0;
  double __pyx_v_theta;
  PyObject *__pyx_v_flag = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_coords_inv_d (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_phi,&__pyx_n_s_geo,&__pyx_n_s_theta,&__pyx_n_s_flag,0};
    PyObject* values[4] = {0,0,0,0};
    values[3] = ((PyObject *)__pyx_kp_s_);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_phi)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_geo)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_coords_inv_d", 0, 3, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_theta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_coords_inv_d", 0, 3, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_flag);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_coords_inv_d") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_phi = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_phi == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_geo = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)values[1]);
    __pyx_v_theta = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_theta == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_flag = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_coords_inv_d", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo._coords_inv_d", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_geo), __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_geoVals, 1, "geo", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_26_coords_inv_d(__pyx_self, __pyx_v_phi, __pyx_v_geo, __pyx_v_theta, __pyx_v_flag);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_26_coords_inv_d(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, PyObject *__pyx_v_flag) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo__coords_inv_d __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("_coords_inv_d", 0);
  __Pyx_TraceCall("_coords_inv_d", __pyx_f[0], 358);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.flag = __pyx_v_flag;
  __pyx_t_1 = __pyx_f_5PDSim_6scroll_17common_scroll_geo__coords_inv_d(__pyx_v_phi, __pyx_v_geo, __pyx_v_theta, 0, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo._coords_inv_d", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":383
 *     return (x,y)
 * 
 * cpdef tuple coords_inv(phi,geoVals geo,double theta,flag="fi"):             # <<<<<<<<<<<<<<
 *     """
 * 
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_29coords_inv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5PDSim_6scroll_17common_scroll_geo_coords_inv(PyObject *__pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, CYTHON_UNUSED int __pyx_skip_dispatch, struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo_coords_inv *__pyx_optional_args) {
  PyObject *__pyx_v_flag = ((PyObject *)__pyx_n_s_fi);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo__coords_inv_np __pyx_t_4;
  double __pyx_t_5;
  struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo__coords_inv_d __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("coords_inv", 0);
  __Pyx_TraceCall("coords_inv", __pyx_f[0], 383);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_flag = __pyx_optional_args->flag;
    }
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":405
 *         (x,y) : tuple of coordinates on the scroll
 *     """
 *     if type(phi) is np.ndarray:             # <<<<<<<<<<<<<<
 *         return _coords_inv_np(phi,geo,theta,flag)
 *     else:
 */
  __pyx_t_1 = (((PyObject *)Py_TYPE(__pyx_v_phi)) == ((PyObject *)((PyObject*)__pyx_ptype_5numpy_ndarray)));
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "PDSim\scroll\common_scroll_geo.pyx":406
 *     """
 *     if type(phi) is np.ndarray:
 *         return _coords_inv_np(phi,geo,theta,flag)             # <<<<<<<<<<<<<<
 *     else:
 *         return _coords_inv_d(phi,geo,theta,flag)
 */
    __Pyx_XDECREF(__pyx_r);
    if (!(likely(((__pyx_v_phi) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_phi, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_4.__pyx_n = 1;
    __pyx_t_4.flag = __pyx_v_flag;
    __pyx_t_3 = __pyx_f_5PDSim_6scroll_17common_scroll_geo__coords_inv_np(((PyArrayObject *)__pyx_v_phi), __pyx_v_geo, __pyx_v_theta, 0, &__pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }
  /*else*/ {

    /* "PDSim\scroll\common_scroll_geo.pyx":408
 *         return _coords_inv_np(phi,geo,theta,flag)
 *     else:
 *         return _coords_inv_d(phi,geo,theta,flag)             # <<<<<<<<<<<<<<
 * 
 * cpdef tuple coords_norm(phi_vec, geoVals geo, double theta,flag="fi"):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_phi); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_6.__pyx_n = 1;
    __pyx_t_6.flag = __pyx_v_flag;
    __pyx_t_3 = __pyx_f_5PDSim_6scroll_17common_scroll_geo__coords_inv_d(__pyx_t_5, __pyx_v_geo, __pyx_v_theta, 0, &__pyx_t_6); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "PDSim\scroll\common_scroll_geo.pyx":383
 *     return (x,y)
 * 
 * cpdef tuple coords_inv(phi,geoVals geo,double theta,flag="fi"):             # <<<<<<<<<<<<<<
 *     """
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.coords_inv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_29coords_inv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_28coords_inv[] = "coords_inv(phi, geoVals geo, double theta, flag='fi') -> tuple\n \n    \n    def coords_inv(phi,geo,theta,flag=\"fi\")\n    \n    The involute angles corresponding to the points along the involutes\n    (fixed inner [fi], fixed scroll outer involute [fo], orbiting\n    scroll outer involute [oo], and orbiting scroll inner involute [oi] )\n    \n    Arguments:\n        phi_vec : 1D numpy array or double\n            vector of involute angles\n        geo : geoVals class\n            scroll compressor geometry\n        theta : float\n            crank angle in the range 0 to :math: `2\\pi`\n        flag : string\n            involute of interest, possible values are 'fi','fo','oi','oo'\n            \n    Returns:\n        (x,y) : tuple of coordinates on the scroll\n    ";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_29coords_inv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_phi = 0;
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo = 0;
  double __pyx_v_theta;
  PyObject *__pyx_v_flag = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("coords_inv (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_phi,&__pyx_n_s_geo,&__pyx_n_s_theta,&__pyx_n_s_flag,0};
    PyObject* values[4] = {0,0,0,0};
    values[3] = ((PyObject *)__pyx_n_s_fi);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_phi)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_geo)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("coords_inv", 0, 3, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_theta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("coords_inv", 0, 3, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_flag);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "coords_inv") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_phi = values[0];
    __pyx_v_geo = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)values[1]);
    __pyx_v_theta = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_theta == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_flag = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("coords_inv", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.coords_inv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_geo), __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_geoVals, 1, "geo", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_28coords_inv(__pyx_self, __pyx_v_phi, __pyx_v_geo, __pyx_v_theta, __pyx_v_flag);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_28coords_inv(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_phi, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, PyObject *__pyx_v_flag) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo_coords_inv __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("coords_inv", 0);
  __Pyx_TraceCall("coords_inv", __pyx_f[0], 383);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.flag = __pyx_v_flag;
  __pyx_t_1 = __pyx_f_5PDSim_6scroll_17common_scroll_geo_coords_inv(__pyx_v_phi, __pyx_v_geo, __pyx_v_theta, 0, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.coords_inv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":410
 *         return _coords_inv_d(phi,geo,theta,flag)
 * 
 * cpdef tuple coords_norm(phi_vec, geoVals geo, double theta,flag="fi"):             # <<<<<<<<<<<<<<
 *     """
 *     The x and y coordinates of a unit normal vector pointing towards
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_31coords_norm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5PDSim_6scroll_17common_scroll_geo_coords_norm(PyObject *__pyx_v_phi_vec, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, CYTHON_UNUSED double __pyx_v_theta, CYTHON_UNUSED int __pyx_skip_dispatch, struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo_coords_norm *__pyx_optional_args) {
  PyObject *__pyx_v_flag = ((PyObject *)__pyx_n_s_fi);
  CYTHON_UNUSED double __pyx_v_rb;
  PyObject *__pyx_v_nx = NULL;
  PyObject *__pyx_v_ny = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_phi = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  PyObject *(*__pyx_t_11)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("coords_norm", 0);
  __Pyx_TraceCall("coords_norm", __pyx_f[0], 410);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_flag = __pyx_optional_args->flag;
    }
  }
  __Pyx_INCREF(__pyx_v_phi_vec);

  /* "PDSim\scroll\common_scroll_geo.pyx":431
 *     """
 * 
 *     rb=geo.rb             # <<<<<<<<<<<<<<
 *     if not type(phi_vec) is np.ndarray:
 *         if type(phi_vec) is list:
 */
  __pyx_t_1 = __pyx_v_geo->rb;
  __pyx_v_rb = __pyx_t_1;

  /* "PDSim\scroll\common_scroll_geo.pyx":432
 * 
 *     rb=geo.rb
 *     if not type(phi_vec) is np.ndarray:             # <<<<<<<<<<<<<<
 *         if type(phi_vec) is list:
 *             phi_vec=np.array(phi_vec)
 */
  __pyx_t_2 = (((PyObject *)Py_TYPE(__pyx_v_phi_vec)) != ((PyObject *)((PyObject*)__pyx_ptype_5numpy_ndarray)));
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "PDSim\scroll\common_scroll_geo.pyx":433
 *     rb=geo.rb
 *     if not type(phi_vec) is np.ndarray:
 *         if type(phi_vec) is list:             # <<<<<<<<<<<<<<
 *             phi_vec=np.array(phi_vec)
 *         else:
 */
    __pyx_t_3 = (((PyObject *)Py_TYPE(__pyx_v_phi_vec)) == ((PyObject *)((PyObject*)(&PyList_Type))));
    __pyx_t_2 = (__pyx_t_3 != 0);
    if (__pyx_t_2) {

      /* "PDSim\scroll\common_scroll_geo.pyx":434
 *     if not type(phi_vec) is np.ndarray:
 *         if type(phi_vec) is list:
 *             phi_vec=np.array(phi_vec)             # <<<<<<<<<<<<<<
 *         else:
 *             phi_vec=np.array([phi_vec])
 */
      __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_array); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_phi_vec); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_INCREF(__pyx_v_phi_vec);
        PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_v_phi_vec);
        __Pyx_GIVEREF(__pyx_v_phi_vec);
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF_SET(__pyx_v_phi_vec, __pyx_t_4);
      __pyx_t_4 = 0;
      goto __pyx_L4;
    }
    /*else*/ {

      /* "PDSim\scroll\common_scroll_geo.pyx":436
 *             phi_vec=np.array(phi_vec)
 *         else:
 *             phi_vec=np.array([phi_vec])             # <<<<<<<<<<<<<<
 *     nx=np.zeros(np.size(phi_vec))
 *     ny=np.zeros(np.size(phi_vec))
 */
      __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_array); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyList_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_v_phi_vec);
      PyList_SET_ITEM(__pyx_t_6, 0, __pyx_v_phi_vec);
      __Pyx_GIVEREF(__pyx_v_phi_vec);
      __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF_SET(__pyx_v_phi_vec, __pyx_t_4);
      __pyx_t_4 = 0;
    }
    __pyx_L4:;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "PDSim\scroll\common_scroll_geo.pyx":437
 *         else:
 *             phi_vec=np.array([phi_vec])
 *     nx=np.zeros(np.size(phi_vec))             # <<<<<<<<<<<<<<
 *     ny=np.zeros(np.size(phi_vec))
 * 
 */
  __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_size); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_phi_vec); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
  } else {
    __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
    __Pyx_INCREF(__pyx_v_phi_vec);
    PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_v_phi_vec);
    __Pyx_GIVEREF(__pyx_v_phi_vec);
    __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
    PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_7 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_v_nx = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":438
 *             phi_vec=np.array([phi_vec])
 *     nx=np.zeros(np.size(phi_vec))
 *     ny=np.zeros(np.size(phi_vec))             # <<<<<<<<<<<<<<
 * 
 *     for i in xrange(np.size(phi_vec)):
 */
  __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_zeros); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_size); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_7) {
    __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_phi_vec); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
    __Pyx_INCREF(__pyx_v_phi_vec);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_phi_vec);
    __Pyx_GIVEREF(__pyx_v_phi_vec);
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_9))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_9);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_9, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_8); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_8);
    __pyx_t_8 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_6, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_v_ny = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":440
 *     ny=np.zeros(np.size(phi_vec))
 * 
 *     for i in xrange(np.size(phi_vec)):             # <<<<<<<<<<<<<<
 *         phi=phi_vec[i]
 *         if flag=="fi":
 */
  __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_size); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (!__pyx_t_9) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_phi_vec); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_9); __Pyx_GIVEREF(__pyx_t_9); __pyx_t_9 = NULL;
    __Pyx_INCREF(__pyx_v_phi_vec);
    PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_v_phi_vec);
    __Pyx_GIVEREF(__pyx_v_phi_vec);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_6, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
    __pyx_t_6 = __pyx_t_4; __Pyx_INCREF(__pyx_t_6); __pyx_t_10 = 0;
    __pyx_t_11 = NULL;
  } else {
    __pyx_t_10 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_11 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  for (;;) {
    if (likely(!__pyx_t_11)) {
      if (likely(PyList_CheckExact(__pyx_t_6))) {
        if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_6)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_10); __Pyx_INCREF(__pyx_t_4); __pyx_t_10++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_6, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        if (__pyx_t_10 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_10); __Pyx_INCREF(__pyx_t_4); __pyx_t_10++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_6, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_11(__pyx_t_6);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":441
 * 
 *     for i in xrange(np.size(phi_vec)):
 *         phi=phi_vec[i]             # <<<<<<<<<<<<<<
 *         if flag=="fi":
 *             nx[i] = +sin(phi)
 */
    __pyx_t_4 = PyObject_GetItem(__pyx_v_phi_vec, __pyx_v_i); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 441; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_XDECREF_SET(__pyx_v_phi, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "PDSim\scroll\common_scroll_geo.pyx":442
 *     for i in xrange(np.size(phi_vec)):
 *         phi=phi_vec[i]
 *         if flag=="fi":             # <<<<<<<<<<<<<<
 *             nx[i] = +sin(phi)
 *             ny[i] = -cos(phi)
 */
    __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_flag, __pyx_n_s_fi, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_2) {

      /* "PDSim\scroll\common_scroll_geo.pyx":443
 *         phi=phi_vec[i]
 *         if flag=="fi":
 *             nx[i] = +sin(phi)             # <<<<<<<<<<<<<<
 *             ny[i] = -cos(phi)
 *         elif flag=="fo":
 */
      __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_phi); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyFloat_FromDouble(sin(__pyx_t_1)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(PyObject_SetItem(__pyx_v_nx, __pyx_v_i, __pyx_t_4) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "PDSim\scroll\common_scroll_geo.pyx":444
 *         if flag=="fi":
 *             nx[i] = +sin(phi)
 *             ny[i] = -cos(phi)             # <<<<<<<<<<<<<<
 *         elif flag=="fo":
 *             nx[i] = -sin(phi)
 */
      __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_phi); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyFloat_FromDouble((-cos(__pyx_t_1))); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(PyObject_SetItem(__pyx_v_ny, __pyx_v_i, __pyx_t_4) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L7;
    }

    /* "PDSim\scroll\common_scroll_geo.pyx":445
 *             nx[i] = +sin(phi)
 *             ny[i] = -cos(phi)
 *         elif flag=="fo":             # <<<<<<<<<<<<<<
 *             nx[i] = -sin(phi)
 *             ny[i] = +cos(phi)
 */
    __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_flag, __pyx_n_s_fo, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_2) {

      /* "PDSim\scroll\common_scroll_geo.pyx":446
 *             ny[i] = -cos(phi)
 *         elif flag=="fo":
 *             nx[i] = -sin(phi)             # <<<<<<<<<<<<<<
 *             ny[i] = +cos(phi)
 *         elif flag=="oi":
 */
      __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_phi); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyFloat_FromDouble((-sin(__pyx_t_1))); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(PyObject_SetItem(__pyx_v_nx, __pyx_v_i, __pyx_t_4) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "PDSim\scroll\common_scroll_geo.pyx":447
 *         elif flag=="fo":
 *             nx[i] = -sin(phi)
 *             ny[i] = +cos(phi)             # <<<<<<<<<<<<<<
 *         elif flag=="oi":
 *             nx[i] = -sin(phi)
 */
      __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_phi); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyFloat_FromDouble(cos(__pyx_t_1)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(PyObject_SetItem(__pyx_v_ny, __pyx_v_i, __pyx_t_4) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L7;
    }

    /* "PDSim\scroll\common_scroll_geo.pyx":448
 *             nx[i] = -sin(phi)
 *             ny[i] = +cos(phi)
 *         elif flag=="oi":             # <<<<<<<<<<<<<<
 *             nx[i] = -sin(phi)
 *             ny[i] = +cos(phi)
 */
    __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_flag, __pyx_n_s_oi, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_2) {

      /* "PDSim\scroll\common_scroll_geo.pyx":449
 *             ny[i] = +cos(phi)
 *         elif flag=="oi":
 *             nx[i] = -sin(phi)             # <<<<<<<<<<<<<<
 *             ny[i] = +cos(phi)
 *         elif flag=="oo":
 */
      __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_phi); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyFloat_FromDouble((-sin(__pyx_t_1))); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(PyObject_SetItem(__pyx_v_nx, __pyx_v_i, __pyx_t_4) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "PDSim\scroll\common_scroll_geo.pyx":450
 *         elif flag=="oi":
 *             nx[i] = -sin(phi)
 *             ny[i] = +cos(phi)             # <<<<<<<<<<<<<<
 *         elif flag=="oo":
 *             nx[i] = +sin(phi)
 */
      __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_phi); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyFloat_FromDouble(cos(__pyx_t_1)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(PyObject_SetItem(__pyx_v_ny, __pyx_v_i, __pyx_t_4) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L7;
    }

    /* "PDSim\scroll\common_scroll_geo.pyx":451
 *             nx[i] = -sin(phi)
 *             ny[i] = +cos(phi)
 *         elif flag=="oo":             # <<<<<<<<<<<<<<
 *             nx[i] = +sin(phi)
 *             ny[i] = -cos(phi)
 */
    __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_flag, __pyx_n_s_oo, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_2) {

      /* "PDSim\scroll\common_scroll_geo.pyx":452
 *             ny[i] = +cos(phi)
 *         elif flag=="oo":
 *             nx[i] = +sin(phi)             # <<<<<<<<<<<<<<
 *             ny[i] = -cos(phi)
 *         else:
 */
      __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_phi); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyFloat_FromDouble(sin(__pyx_t_1)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(PyObject_SetItem(__pyx_v_nx, __pyx_v_i, __pyx_t_4) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "PDSim\scroll\common_scroll_geo.pyx":453
 *         elif flag=="oo":
 *             nx[i] = +sin(phi)
 *             ny[i] = -cos(phi)             # <<<<<<<<<<<<<<
 *         else:
 *             print "Uh oh... error in coords_norm"
 */
      __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_phi); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyFloat_FromDouble((-cos(__pyx_t_1))); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(PyObject_SetItem(__pyx_v_ny, __pyx_v_i, __pyx_t_4) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L7;
    }
    /*else*/ {

      /* "PDSim\scroll\common_scroll_geo.pyx":455
 *             ny[i] = -cos(phi)
 *         else:
 *             print "Uh oh... error in coords_norm"             # <<<<<<<<<<<<<<
 *     return (nx,ny)
 * 
 */
      if (__Pyx_PrintOne(0, __pyx_kp_s_Uh_oh_error_in_coords_norm) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L7:;

    /* "PDSim\scroll\common_scroll_geo.pyx":440
 *     ny=np.zeros(np.size(phi_vec))
 * 
 *     for i in xrange(np.size(phi_vec)):             # <<<<<<<<<<<<<<
 *         phi=phi_vec[i]
 *         if flag=="fi":
 */
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":456
 *         else:
 *             print "Uh oh... error in coords_norm"
 *     return (nx,ny)             # <<<<<<<<<<<<<<
 * 
 * cdef double x_antideriv(double phi, double phi_0):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_INCREF(__pyx_v_nx);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_nx);
  __Pyx_GIVEREF(__pyx_v_nx);
  __Pyx_INCREF(__pyx_v_ny);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_v_ny);
  __Pyx_GIVEREF(__pyx_v_ny);
  __pyx_r = ((PyObject*)__pyx_t_6);
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":410
 *         return _coords_inv_d(phi,geo,theta,flag)
 * 
 * cpdef tuple coords_norm(phi_vec, geoVals geo, double theta,flag="fi"):             # <<<<<<<<<<<<<<
 *     """
 *     The x and y coordinates of a unit normal vector pointing towards
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.coords_norm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_nx);
  __Pyx_XDECREF(__pyx_v_ny);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_phi);
  __Pyx_XDECREF(__pyx_v_phi_vec);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_31coords_norm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_30coords_norm[] = "coords_norm(phi_vec, geoVals geo, double theta, flag='fi') -> tuple\n \n    The x and y coordinates of a unit normal vector pointing towards\n    the scroll involute for the the involutes\n    (fixed inner [fi], fixed scroll outer involute [fo], orbiting\n    scroll outer involute [oo], and orbiting scroll inner involute [oi])\n    \n    Arguments:\n        phi_vec : 1D numpy array\n            vector of involute angles\n        geo : geoVals class\n            scroll compressor geometry\n        theta : float\n            crank angle in the range 0 to :math: `2\\pi`\n        flag : string\n            involute of interest, possible values are 'fi','fo','oi','oo'\n            \n    Returns:\n        (nx,ny) : tuple of unit normal coordinates pointing towards scroll wrap\n    ";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_31coords_norm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_phi_vec = 0;
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo = 0;
  double __pyx_v_theta;
  PyObject *__pyx_v_flag = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("coords_norm (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_phi_vec,&__pyx_n_s_geo,&__pyx_n_s_theta,&__pyx_n_s_flag,0};
    PyObject* values[4] = {0,0,0,0};
    values[3] = ((PyObject *)__pyx_n_s_fi);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_phi_vec)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_geo)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("coords_norm", 0, 3, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_theta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("coords_norm", 0, 3, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_flag);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "coords_norm") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_phi_vec = values[0];
    __pyx_v_geo = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)values[1]);
    __pyx_v_theta = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_theta == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_flag = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("coords_norm", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.coords_norm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_geo), __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_geoVals, 1, "geo", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_30coords_norm(__pyx_self, __pyx_v_phi_vec, __pyx_v_geo, __pyx_v_theta, __pyx_v_flag);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_30coords_norm(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_phi_vec, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, double __pyx_v_theta, PyObject *__pyx_v_flag) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo_coords_norm __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("coords_norm", 0);
  __Pyx_TraceCall("coords_norm", __pyx_f[0], 410);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.flag = __pyx_v_flag;
  __pyx_t_1 = __pyx_f_5PDSim_6scroll_17common_scroll_geo_coords_norm(__pyx_v_phi_vec, __pyx_v_geo, __pyx_v_theta, 0, &__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.coords_norm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":458
 *     return (nx,ny)
 * 
 * cdef double x_antideriv(double phi, double phi_0):             # <<<<<<<<<<<<<<
 *     """ Antiderivative of function for x for scroll_wrap """
 *     return -cos(phi)*((phi_0-phi)**2-3)-3*sin(phi)*(phi_0-phi)
 */

static double __pyx_f_5PDSim_6scroll_17common_scroll_geo_x_antideriv(double __pyx_v_phi, double __pyx_v_phi_0) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("x_antideriv", 0);
  __Pyx_TraceCall("x_antideriv", __pyx_f[0], 458);

  /* "PDSim\scroll\common_scroll_geo.pyx":460
 * cdef double x_antideriv(double phi, double phi_0):
 *     """ Antiderivative of function for x for scroll_wrap """
 *     return -cos(phi)*((phi_0-phi)**2-3)-3*sin(phi)*(phi_0-phi)             # <<<<<<<<<<<<<<
 * 
 * cdef double y_antideriv(double phi, double phi_0):
 */
  __pyx_r = (((-cos(__pyx_v_phi)) * (pow((__pyx_v_phi_0 - __pyx_v_phi), 2.0) - 3.0)) - ((3.0 * sin(__pyx_v_phi)) * (__pyx_v_phi_0 - __pyx_v_phi)));
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":458
 *     return (nx,ny)
 * 
 * cdef double x_antideriv(double phi, double phi_0):             # <<<<<<<<<<<<<<
 *     """ Antiderivative of function for x for scroll_wrap """
 *     return -cos(phi)*((phi_0-phi)**2-3)-3*sin(phi)*(phi_0-phi)
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":462
 *     return -cos(phi)*((phi_0-phi)**2-3)-3*sin(phi)*(phi_0-phi)
 * 
 * cdef double y_antideriv(double phi, double phi_0):             # <<<<<<<<<<<<<<
 *     """ Antiderivative of function for y for scroll_wrap """
 *     return +3*cos(phi)*(phi_0-phi)-sin(phi)*((phi_0-phi)**2-3)
 */

static double __pyx_f_5PDSim_6scroll_17common_scroll_geo_y_antideriv(double __pyx_v_phi, double __pyx_v_phi_0) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("y_antideriv", 0);
  __Pyx_TraceCall("y_antideriv", __pyx_f[0], 462);

  /* "PDSim\scroll\common_scroll_geo.pyx":464
 * cdef double y_antideriv(double phi, double phi_0):
 *     """ Antiderivative of function for y for scroll_wrap """
 *     return +3*cos(phi)*(phi_0-phi)-sin(phi)*((phi_0-phi)**2-3)             # <<<<<<<<<<<<<<
 * 
 * @cython.cdivision(True)
 */
  __pyx_r = (((3.0 * cos(__pyx_v_phi)) * (__pyx_v_phi_0 - __pyx_v_phi)) - (sin(__pyx_v_phi) * (pow((__pyx_v_phi_0 - __pyx_v_phi), 2.0) - 3.0)));
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":462
 *     return -cos(phi)*((phi_0-phi)**2-3)-3*sin(phi)*(phi_0-phi)
 * 
 * cdef double y_antideriv(double phi, double phi_0):             # <<<<<<<<<<<<<<
 *     """ Antiderivative of function for y for scroll_wrap """
 *     return +3*cos(phi)*(phi_0-phi)-sin(phi)*((phi_0-phi)**2-3)
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":467
 * 
 * @cython.cdivision(True)
 * cpdef tuple scroll_wrap(geoVals geo):             # <<<<<<<<<<<<<<
 *     """
 *     Calculate the scroll wrap centroid and volume
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_33scroll_wrap(PyObject *__pyx_self, PyObject *__pyx_v_geo); /*proto*/
static PyObject *__pyx_f_5PDSim_6scroll_17common_scroll_geo_scroll_wrap(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo, CYTHON_UNUSED int __pyx_skip_dispatch) {
  double __pyx_v_phi_0;
  double __pyx_v_phi_e;
  double __pyx_v_Vwrap;
  double __pyx_v_xstar;
  double __pyx_v_ystar;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("scroll_wrap", 0);
  __Pyx_TraceCall("scroll_wrap", __pyx_f[0], 467);

  /* "PDSim\scroll\common_scroll_geo.pyx":473
 * 
 *     # Initial angle of the centerline of the orbiting scroll wrap
 *     cdef double phi_0 = (geo.phi_oi0 + geo.phi_oo0)/2             # <<<<<<<<<<<<<<
 *     # Ending angle of the centerline of the orbiting scroll wrap
 *     cdef double phi_e = (geo.phi_oie + geo.phi_ooe)/2
 */
  __pyx_v_phi_0 = ((__pyx_v_geo->phi_oi0 + __pyx_v_geo->phi_oo0) / 2.0);

  /* "PDSim\scroll\common_scroll_geo.pyx":475
 *     cdef double phi_0 = (geo.phi_oi0 + geo.phi_oo0)/2
 *     # Ending angle of the centerline of the orbiting scroll wrap
 *     cdef double phi_e = (geo.phi_oie + geo.phi_ooe)/2             # <<<<<<<<<<<<<<
 * 
 *     Vwrap = geo.h*geo.rb*geo.t*(phi_e**2/2.0-phi_0**2/2.0-(phi_e-phi_0)*phi_0)
 */
  __pyx_v_phi_e = ((__pyx_v_geo->phi_oie + __pyx_v_geo->phi_ooe) / 2.0);

  /* "PDSim\scroll\common_scroll_geo.pyx":477
 *     cdef double phi_e = (geo.phi_oie + geo.phi_ooe)/2
 * 
 *     Vwrap = geo.h*geo.rb*geo.t*(phi_e**2/2.0-phi_0**2/2.0-(phi_e-phi_0)*phi_0)             # <<<<<<<<<<<<<<
 *     xstar = geo.h*geo.rb**2*geo.t/Vwrap*(x_antideriv(phi_e, phi_0)-x_antideriv(phi_0, phi_0))
 *     ystar = geo.h*geo.rb**2*geo.t/Vwrap*(y_antideriv(phi_e, phi_0)-y_antideriv(phi_0, phi_0))
 */
  __pyx_v_Vwrap = (((__pyx_v_geo->h * __pyx_v_geo->rb) * __pyx_v_geo->t) * (((pow(__pyx_v_phi_e, 2.0) / 2.0) - (pow(__pyx_v_phi_0, 2.0) / 2.0)) - ((__pyx_v_phi_e - __pyx_v_phi_0) * __pyx_v_phi_0)));

  /* "PDSim\scroll\common_scroll_geo.pyx":478
 * 
 *     Vwrap = geo.h*geo.rb*geo.t*(phi_e**2/2.0-phi_0**2/2.0-(phi_e-phi_0)*phi_0)
 *     xstar = geo.h*geo.rb**2*geo.t/Vwrap*(x_antideriv(phi_e, phi_0)-x_antideriv(phi_0, phi_0))             # <<<<<<<<<<<<<<
 *     ystar = geo.h*geo.rb**2*geo.t/Vwrap*(y_antideriv(phi_e, phi_0)-y_antideriv(phi_0, phi_0))
 * 
 */
  __pyx_v_xstar = ((((__pyx_v_geo->h * pow(__pyx_v_geo->rb, 2.0)) * __pyx_v_geo->t) / __pyx_v_Vwrap) * (__pyx_f_5PDSim_6scroll_17common_scroll_geo_x_antideriv(__pyx_v_phi_e, __pyx_v_phi_0) - __pyx_f_5PDSim_6scroll_17common_scroll_geo_x_antideriv(__pyx_v_phi_0, __pyx_v_phi_0)));

  /* "PDSim\scroll\common_scroll_geo.pyx":479
 *     Vwrap = geo.h*geo.rb*geo.t*(phi_e**2/2.0-phi_0**2/2.0-(phi_e-phi_0)*phi_0)
 *     xstar = geo.h*geo.rb**2*geo.t/Vwrap*(x_antideriv(phi_e, phi_0)-x_antideriv(phi_0, phi_0))
 *     ystar = geo.h*geo.rb**2*geo.t/Vwrap*(y_antideriv(phi_e, phi_0)-y_antideriv(phi_0, phi_0))             # <<<<<<<<<<<<<<
 * 
 *     return Vwrap, xstar, ystar
 */
  __pyx_v_ystar = ((((__pyx_v_geo->h * pow(__pyx_v_geo->rb, 2.0)) * __pyx_v_geo->t) / __pyx_v_Vwrap) * (__pyx_f_5PDSim_6scroll_17common_scroll_geo_y_antideriv(__pyx_v_phi_e, __pyx_v_phi_0) - __pyx_f_5PDSim_6scroll_17common_scroll_geo_y_antideriv(__pyx_v_phi_0, __pyx_v_phi_0)));

  /* "PDSim\scroll\common_scroll_geo.pyx":481
 *     ystar = geo.h*geo.rb**2*geo.t/Vwrap*(y_antideriv(phi_e, phi_0)-y_antideriv(phi_0, phi_0))
 * 
 *     return Vwrap, xstar, ystar             # <<<<<<<<<<<<<<
 * 
 * cpdef double involute_heat_transfer(double hc, double hs, double  rb,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_Vwrap); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_xstar); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_ystar); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":467
 * 
 * @cython.cdivision(True)
 * cpdef tuple scroll_wrap(geoVals geo):             # <<<<<<<<<<<<<<
 *     """
 *     Calculate the scroll wrap centroid and volume
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.scroll_wrap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_33scroll_wrap(PyObject *__pyx_self, PyObject *__pyx_v_geo); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_32scroll_wrap[] = "scroll_wrap(geoVals geo) -> tuple\n\n    Calculate the scroll wrap centroid and volume\n    ";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_33scroll_wrap(PyObject *__pyx_self, PyObject *__pyx_v_geo) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scroll_wrap (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_geo), __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_geoVals, 1, "geo", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_32scroll_wrap(__pyx_self, ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)__pyx_v_geo));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_32scroll_wrap(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *__pyx_v_geo) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("scroll_wrap", 0);
  __Pyx_TraceCall("scroll_wrap", __pyx_f[0], 467);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5PDSim_6scroll_17common_scroll_geo_scroll_wrap(__pyx_v_geo, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.scroll_wrap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pyx":483
 *     return Vwrap, xstar, ystar
 * 
 * cpdef double involute_heat_transfer(double hc, double hs, double  rb,             # <<<<<<<<<<<<<<
 *                                   double phi1, double phi2, double phi0,
 *                                   double T_scroll, double T_CV, double dT_dphi,
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_35involute_heat_transfer(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static double __pyx_f_5PDSim_6scroll_17common_scroll_geo_involute_heat_transfer(double __pyx_v_hc, double __pyx_v_hs, double __pyx_v_rb, double __pyx_v_phi1, double __pyx_v_phi2, double __pyx_v_phi0, double __pyx_v_T_scroll, double __pyx_v_T_CV, double __pyx_v_dT_dphi, double __pyx_v_phim, CYTHON_UNUSED int __pyx_skip_dispatch) {
  double __pyx_v_term1;
  double __pyx_v_term2;
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("involute_heat_transfer", 0);
  __Pyx_TraceCall("involute_heat_transfer", __pyx_f[0], 483);

  /* "PDSim\scroll\common_scroll_geo.pyx":520
 *         larger involute angle in value
 *         """
 *         term1=hc*hs*rb*( (phi1*phi1/2.0-phi0*phi1)*(T_scroll-T_CV)             # <<<<<<<<<<<<<<
 *             +dT_dphi*(phi1*phi1*phi1/3.0-(phi0+phim)*phi1*phi1/2.0+phi0*phim*phi1))
 *         term2=hc*hs*rb*( (phi2*phi2/2.0-phi0*phi2)*(T_scroll-T_CV)
 */
  __pyx_v_term1 = (((__pyx_v_hc * __pyx_v_hs) * __pyx_v_rb) * (((((__pyx_v_phi1 * __pyx_v_phi1) / 2.0) - (__pyx_v_phi0 * __pyx_v_phi1)) * (__pyx_v_T_scroll - __pyx_v_T_CV)) + (__pyx_v_dT_dphi * (((((__pyx_v_phi1 * __pyx_v_phi1) * __pyx_v_phi1) / 3.0) - ((((__pyx_v_phi0 + __pyx_v_phim) * __pyx_v_phi1) * __pyx_v_phi1) / 2.0)) + ((__pyx_v_phi0 * __pyx_v_phim) * __pyx_v_phi1)))));

  /* "PDSim\scroll\common_scroll_geo.pyx":522
 *         term1=hc*hs*rb*( (phi1*phi1/2.0-phi0*phi1)*(T_scroll-T_CV)
 *             +dT_dphi*(phi1*phi1*phi1/3.0-(phi0+phim)*phi1*phi1/2.0+phi0*phim*phi1))
 *         term2=hc*hs*rb*( (phi2*phi2/2.0-phi0*phi2)*(T_scroll-T_CV)             # <<<<<<<<<<<<<<
 *             +dT_dphi*(phi2*phi2*phi2/3.0-(phi0+phim)*phi2*phi2/2.0+phi0*phim*phi2))
 *         return term1-term2;
 */
  __pyx_v_term2 = (((__pyx_v_hc * __pyx_v_hs) * __pyx_v_rb) * (((((__pyx_v_phi2 * __pyx_v_phi2) / 2.0) - (__pyx_v_phi0 * __pyx_v_phi2)) * (__pyx_v_T_scroll - __pyx_v_T_CV)) + (__pyx_v_dT_dphi * (((((__pyx_v_phi2 * __pyx_v_phi2) * __pyx_v_phi2) / 3.0) - ((((__pyx_v_phi0 + __pyx_v_phim) * __pyx_v_phi2) * __pyx_v_phi2) / 2.0)) + ((__pyx_v_phi0 * __pyx_v_phim) * __pyx_v_phi2)))));

  /* "PDSim\scroll\common_scroll_geo.pyx":524
 *         term2=hc*hs*rb*( (phi2*phi2/2.0-phi0*phi2)*(T_scroll-T_CV)
 *             +dT_dphi*(phi2*phi2*phi2/3.0-(phi0+phim)*phi2*phi2/2.0+phi0*phim*phi2))
 *         return term1-term2;             # <<<<<<<<<<<<<<
 */
  __pyx_r = (__pyx_v_term1 - __pyx_v_term2);
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pyx":483
 *     return Vwrap, xstar, ystar
 * 
 * cpdef double involute_heat_transfer(double hc, double hs, double  rb,             # <<<<<<<<<<<<<<
 *                                   double phi1, double phi2, double phi0,
 *                                   double T_scroll, double T_CV, double dT_dphi,
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_35involute_heat_transfer(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_34involute_heat_transfer[] = "involute_heat_transfer(double hc, double hs, double rb, double phi1, double phi2, double phi0, double T_scroll, double T_CV, double dT_dphi, double phim) -> double\n\n        This function evaluates the anti-derivative of \n        the differential of involute heat transfer, and returns the amount of scroll-\n        wall heat transfer in kW\n        \n        Parameters\n        ----------\n        hc : float\n            Heat transfer coefficient [kW/m2/K]\n        hs : float\n            Scroll wrap height [m]\n        rb : float\n            Base circle radius [m]\n        phi1 : float\n            Larger involute angle [rad]\n        phi2 : float\n            Smaller involute angle [rad]\n        phi0 : float\n            Initial involute angle [rad]\n        T_scroll : float\n            Lump temperature of the scroll wrap [K]\n        T_CV : float\n            Temperature of the gas in the CV [K]\n        dT_dphi : float\n            Derivative of the temperature along the scroll wrap [K/rad]\n        phim : float\n            Mean involute angle of wrap used for heat transfer [rad]\n        \n        Notes\n        -----\n        ``phi1`` and ``phi2`` are defined such that ``phi1`` is always the\n        larger involute angle in value\n        ";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_35involute_heat_transfer(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_hc;
  double __pyx_v_hs;
  double __pyx_v_rb;
  double __pyx_v_phi1;
  double __pyx_v_phi2;
  double __pyx_v_phi0;
  double __pyx_v_T_scroll;
  double __pyx_v_T_CV;
  double __pyx_v_dT_dphi;
  double __pyx_v_phim;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("involute_heat_transfer (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_hc,&__pyx_n_s_hs,&__pyx_n_s_rb,&__pyx_n_s_phi1,&__pyx_n_s_phi2,&__pyx_n_s_phi0,&__pyx_n_s_T_scroll,&__pyx_n_s_T_CV,&__pyx_n_s_dT_dphi,&__pyx_n_s_phim,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_hc)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_hs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("involute_heat_transfer", 1, 10, 10, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("involute_heat_transfer", 1, 10, 10, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_phi1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("involute_heat_transfer", 1, 10, 10, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_phi2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("involute_heat_transfer", 1, 10, 10, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_phi0)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("involute_heat_transfer", 1, 10, 10, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_T_scroll)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("involute_heat_transfer", 1, 10, 10, 6); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  7:
        if (likely((values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_T_CV)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("involute_heat_transfer", 1, 10, 10, 7); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  8:
        if (likely((values[8] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dT_dphi)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("involute_heat_transfer", 1, 10, 10, 8); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  9:
        if (likely((values[9] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_phim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("involute_heat_transfer", 1, 10, 10, 9); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "involute_heat_transfer") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 10) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
    }
    __pyx_v_hc = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_hc == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_hs = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_hs == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_rb = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_rb == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_phi1 = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_phi1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_phi2 = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_phi2 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_phi0 = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_phi0 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_T_scroll = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_T_scroll == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 485; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_T_CV = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_T_CV == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 485; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_dT_dphi = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_dT_dphi == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 485; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_phim = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_phim == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("involute_heat_transfer", 1, 10, 10, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.involute_heat_transfer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_34involute_heat_transfer(__pyx_self, __pyx_v_hc, __pyx_v_hs, __pyx_v_rb, __pyx_v_phi1, __pyx_v_phi2, __pyx_v_phi0, __pyx_v_T_scroll, __pyx_v_T_CV, __pyx_v_dT_dphi, __pyx_v_phim);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_34involute_heat_transfer(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_hc, double __pyx_v_hs, double __pyx_v_rb, double __pyx_v_phi1, double __pyx_v_phi2, double __pyx_v_phi0, double __pyx_v_T_scroll, double __pyx_v_T_CV, double __pyx_v_dT_dphi, double __pyx_v_phim) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("involute_heat_transfer", 0);
  __Pyx_TraceCall("involute_heat_transfer", __pyx_f[0], 483);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_5PDSim_6scroll_17common_scroll_geo_involute_heat_transfer(__pyx_v_hc, __pyx_v_hs, __pyx_v_rb, __pyx_v_phi1, __pyx_v_phi2, __pyx_v_phi0, __pyx_v_T_scroll, __pyx_v_T_CV, __pyx_v_dT_dphi, __pyx_v_phim, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.involute_heat_transfer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":84
 * cpdef long get_compression_chamber_index(long path, long alpha)
 * 
 * cdef inline bint matchpair(long key1, long key2, long target1, long target2):             # <<<<<<<<<<<<<<
 *     return (key1 == target1 and key2 == target2) or (key2 == target1 and key1 == target2)
 * 
 */

static CYTHON_INLINE int __pyx_f_5PDSim_6scroll_17common_scroll_geo_matchpair(long __pyx_v_key1, long __pyx_v_key2, long __pyx_v_target1, long __pyx_v_target2) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("matchpair", 0);
  __Pyx_TraceCall("matchpair", __pyx_f[1], 84);

  /* "PDSim\scroll\common_scroll_geo.pxd":85
 * 
 * cdef inline bint matchpair(long key1, long key2, long target1, long target2):
 *     return (key1 == target1 and key2 == target2) or (key2 == target1 and key1 == target2)             # <<<<<<<<<<<<<<
 * 
 * cpdef inline double min2(double a, double b):
 */
  __pyx_t_2 = ((__pyx_v_key1 == __pyx_v_target1) != 0);
  if (!__pyx_t_2) {
    goto __pyx_L4_next_or;
  } else {
  }
  __pyx_t_2 = ((__pyx_v_key2 == __pyx_v_target2) != 0);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L3_bool_binop_done;
  }
  __pyx_L4_next_or:;
  __pyx_t_2 = ((__pyx_v_key2 == __pyx_v_target1) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L3_bool_binop_done;
  }
  __pyx_t_2 = ((__pyx_v_key1 == __pyx_v_target2) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L3_bool_binop_done:;
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pxd":84
 * cpdef long get_compression_chamber_index(long path, long alpha)
 * 
 * cdef inline bint matchpair(long key1, long key2, long target1, long target2):             # <<<<<<<<<<<<<<
 *     return (key1 == target1 and key2 == target2) or (key2 == target1 and key1 == target2)
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":87
 *     return (key1 == target1 and key2 == target2) or (key2 == target1 and key1 == target2)
 * 
 * cpdef inline double min2(double a, double b):             # <<<<<<<<<<<<<<
 *     return a if a<b else b
 * 
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_1min2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static CYTHON_INLINE double __pyx_f_5PDSim_6scroll_17common_scroll_geo_min2(double __pyx_v_a, double __pyx_v_b, CYTHON_UNUSED int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("min2", 0);
  __Pyx_TraceCall("min2", __pyx_f[1], 87);

  /* "PDSim\scroll\common_scroll_geo.pxd":88
 * 
 * cpdef inline double min2(double a, double b):
 *     return a if a<b else b             # <<<<<<<<<<<<<<
 * 
 * cpdef inline double max2(double a, double b):
 */
  if (((__pyx_v_a < __pyx_v_b) != 0)) {
    __pyx_t_1 = __pyx_v_a;
  } else {
    __pyx_t_1 = __pyx_v_b;
  }
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pxd":87
 *     return (key1 == target1 and key2 == target2) or (key2 == target1 and key1 == target2)
 * 
 * cpdef inline double min2(double a, double b):             # <<<<<<<<<<<<<<
 *     return a if a<b else b
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_1min2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_min2[] = "min2(double a, double b) -> double";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_1min2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("min2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_a,&__pyx_n_s_b,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_a)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("min2", 1, 2, 2, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "min2") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("min2", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.min2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_min2(__pyx_self, __pyx_v_a, __pyx_v_b);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_min2(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_a, double __pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("min2", 0);
  __Pyx_TraceCall("min2", __pyx_f[1], 87);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_5PDSim_6scroll_17common_scroll_geo_min2(__pyx_v_a, __pyx_v_b, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.min2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "PDSim\scroll\common_scroll_geo.pxd":90
 *     return a if a<b else b
 * 
 * cpdef inline double max2(double a, double b):             # <<<<<<<<<<<<<<
 *     return a if a>b else b
 * 
 */

static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_3max2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static CYTHON_INLINE double __pyx_f_5PDSim_6scroll_17common_scroll_geo_max2(double __pyx_v_a, double __pyx_v_b, CYTHON_UNUSED int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("max2", 0);
  __Pyx_TraceCall("max2", __pyx_f[1], 90);

  /* "PDSim\scroll\common_scroll_geo.pxd":91
 * 
 * cpdef inline double max2(double a, double b):
 *     return a if a>b else b             # <<<<<<<<<<<<<<
 * 
 * cpdef double_or_numpy plus_one(double_or_numpy x)
 */
  if (((__pyx_v_a > __pyx_v_b) != 0)) {
    __pyx_t_1 = __pyx_v_a;
  } else {
    __pyx_t_1 = __pyx_v_b;
  }
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "PDSim\scroll\common_scroll_geo.pxd":90
 *     return a if a<b else b
 * 
 * cpdef inline double max2(double a, double b):             # <<<<<<<<<<<<<<
 *     return a if a>b else b
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_3max2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_5PDSim_6scroll_17common_scroll_geo_2max2[] = "max2(double a, double b) -> double";
static PyObject *__pyx_pw_5PDSim_6scroll_17common_scroll_geo_3max2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("max2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_a,&__pyx_n_s_b,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_a)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("max2", 1, 2, 2, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "max2") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("max2", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.max2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5PDSim_6scroll_17common_scroll_geo_2max2(__pyx_self, __pyx_v_a, __pyx_v_b);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5PDSim_6scroll_17common_scroll_geo_2max2(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_a, double __pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("max2", 0);
  __Pyx_TraceCall("max2", __pyx_f[1], 90);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_5PDSim_6scroll_17common_scroll_geo_max2(__pyx_v_a, __pyx_v_b, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("PDSim.scroll.common_scroll_geo.max2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape;
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_v_hasfields;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  char *__pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  if (__pyx_v_info != NULL) {
    __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(__pyx_v_info->obj);
  }
  __Pyx_TraceCall("__getbuffer__", __pyx_f[2], 197);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":203
 *             # of flags
 * 
 *             if info == NULL: return             # <<<<<<<<<<<<<<
 * 
 *             cdef int copy_shape, i, ndim
 */
  __pyx_t_1 = ((__pyx_v_info == NULL) != 0);
  if (__pyx_t_1) {
    __pyx_r = 0;
    goto __pyx_L0;
  }

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":206
 * 
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":207
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":209
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":211
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":212
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */
    __pyx_v_copy_shape = 1;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":214
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
    __pyx_v_copy_shape = 0;
  }
  __pyx_L4:;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L6_bool_binop_done;
  }

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":217
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_C_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L6_bool_binop_done:;
  if (__pyx_t_1) {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[2]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L9_bool_binop_done;
  }

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":221
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_F_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L9_bool_binop_done:;
  if (__pyx_t_1) {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[2]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":224
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */
  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":225
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info.
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":226
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
  __pyx_t_1 = (__pyx_v_copy_shape != 0);
  if (__pyx_t_1) {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":229
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * ((size_t)__pyx_v_ndim)) * 2)));

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":230
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":231
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_4 = __pyx_v_ndim;
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":232
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":233
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);
    }
    goto __pyx_L11;
  }
  /*else*/ {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":235
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":236
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));
  }
  __pyx_L11:;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":237
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":238
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":239
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!(PyArray_ISWRITEABLE(__pyx_v_self) != 0));

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":242
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef list stack
 */
  __pyx_v_f = NULL;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":243
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef list stack
 *             cdef int offset
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->descr);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":247
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":249
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
  __pyx_t_2 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L15_bool_binop_done;
  }
  __pyx_t_2 = ((!(__pyx_v_copy_shape != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L15_bool_binop_done:;
  if (__pyx_t_1) {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":251
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = Py_None;
    goto __pyx_L14;
  }
  /*else*/ {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":254
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = ((PyObject *)__pyx_v_self);
  }
  __pyx_L14:;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":256
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  __pyx_t_1 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_1) {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":257
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 */
    __pyx_t_4 = __pyx_v_descr->type_num;
    __pyx_v_t = __pyx_t_4;

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":258
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '>') != 0);
    if (!__pyx_t_2) {
      goto __pyx_L20_next_or;
    } else {
    }
    __pyx_t_2 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_L20_next_or:;

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":259
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '<') != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_t_2 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L19_bool_binop_done:;
    if (__pyx_t_1) {

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":260
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[2]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":277
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
    switch (__pyx_v_t) {

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":261
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
      case NPY_BYTE:
      __pyx_v_f = __pyx_k_b;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":262
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
      case NPY_UBYTE:
      __pyx_v_f = __pyx_k_B;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":263
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
      case NPY_SHORT:
      __pyx_v_f = __pyx_k_h;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":264
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
      case NPY_USHORT:
      __pyx_v_f = __pyx_k_H;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":265
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
      case NPY_INT:
      __pyx_v_f = __pyx_k_i;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":266
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
      case NPY_UINT:
      __pyx_v_f = __pyx_k_I;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":267
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
      case NPY_LONG:
      __pyx_v_f = __pyx_k_l;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":268
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
      case NPY_ULONG:
      __pyx_v_f = __pyx_k_L;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":269
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
      case NPY_LONGLONG:
      __pyx_v_f = __pyx_k_q;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":270
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
      case NPY_ULONGLONG:
      __pyx_v_f = __pyx_k_Q;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":271
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
      case NPY_FLOAT:
      __pyx_v_f = __pyx_k_f;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":272
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
      case NPY_DOUBLE:
      __pyx_v_f = __pyx_k_d;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":273
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
      case NPY_LONGDOUBLE:
      __pyx_v_f = __pyx_k_g;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":274
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
      case NPY_CFLOAT:
      __pyx_v_f = __pyx_k_Zf;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":275
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
      case NPY_CDOUBLE:
      __pyx_v_f = __pyx_k_Zd;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":276
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
      case NPY_CLONGDOUBLE:
      __pyx_v_f = __pyx_k_Zg;
      break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":277
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      case NPY_OBJECT:
      __pyx_v_f = __pyx_k_O;
      break;
      default:

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":279
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_t_3); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      {__pyx_filename = __pyx_f[2]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      break;
    }

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":280
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":281
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;
  }
  /*else*/ {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":283
 *                 return
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 */
    __pyx_v_info->format = ((char *)malloc(255));

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":284
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":285
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":286
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,             # <<<<<<<<<<<<<<
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 */
    __pyx_t_7 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 255), (&__pyx_v_offset)); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_f = __pyx_t_7;

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":289
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = '\x00';
  }

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info != NULL && __pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info != NULL && __pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":291
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

/* Python wrapper */
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("__releasebuffer__", 0);
  __Pyx_TraceCall("__releasebuffer__", __pyx_f[2], 291);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":292
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = (PyArray_HASFIELDS(__pyx_v_self) != 0);
  if (__pyx_t_1) {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":293
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)
 */
    free(__pyx_v_info->format);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":294
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":295
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    free(__pyx_v_info->strides);
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":291
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

  /* function exit code */
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
}

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":771
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);
  __Pyx_TraceCall("PyArray_MultiIterNew1", __pyx_f[2], 771);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":772
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":771
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":774
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);
  __Pyx_TraceCall("PyArray_MultiIterNew2", __pyx_f[2], 774);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":775
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":774
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":777
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);
  __Pyx_TraceCall("PyArray_MultiIterNew3", __pyx_f[2], 777);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":778
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 778; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":777
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":780
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);
  __Pyx_TraceCall("PyArray_MultiIterNew4", __pyx_f[2], 780);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":781
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":780
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":783
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);
  __Pyx_TraceCall("PyArray_MultiIterNew5", __pyx_f[2], 783);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":784
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":783
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":786
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child = 0;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields = 0;
  PyObject *__pyx_v_childname = NULL;
  PyObject *__pyx_v_new_offset = NULL;
  PyObject *__pyx_v_t = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  char *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("_util_dtypestring", 0);
  __Pyx_TraceCall("_util_dtypestring", __pyx_f[2], 786);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":793
 *     cdef int delta_offset
 *     cdef tuple i
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":794
 *     cdef tuple i
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":797
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(__pyx_v_descr->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    {__pyx_filename = __pyx_f[2]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __pyx_v_descr->names; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #endif
    __Pyx_XDECREF_SET(__pyx_v_childname, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":798
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    if (unlikely(__pyx_v_descr->fields == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      {__pyx_filename = __pyx_f[2]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_XDECREF_SET(__pyx_v_fields, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":799
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 */
    if (likely(__pyx_v_fields != Py_None)) {
      PyObject* sequence = __pyx_v_fields;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[2]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      #endif
    } else {
      __Pyx_RaiseNoneNotIterableError(); {__pyx_filename = __pyx_f[2]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_XDECREF_SET(__pyx_v_child, ((PyArray_Descr *)__pyx_t_3));
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_new_offset, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":801
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = ((((__pyx_v_end - __pyx_v_f) - ((int)__pyx_t_5)) < 15) != 0);
    if (__pyx_t_6) {

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":802
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[2]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":804
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '>') != 0);
    if (!__pyx_t_7) {
      goto __pyx_L8_next_or;
    } else {
    }
    __pyx_t_7 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_L8_next_or:;

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":805
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '<') != 0);
    if (__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_t_7 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L7_bool_binop_done:;
    if (__pyx_t_6) {

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":806
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[2]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":816
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_3 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!__pyx_t_6) break;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":817
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 120;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":818
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":819
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_8 = 0;
      (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + 1);
    }

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":821
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_8 = 0;
    (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + __pyx_v_child->elsize);

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":823
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_6 = ((!(PyDataType_HASFIELDS(__pyx_v_child) != 0)) != 0);
    if (__pyx_t_6) {

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":824
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":825
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_6 = (((__pyx_v_end - __pyx_v_f) < 5) != 0);
      if (__pyx_t_6) {

        /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":826
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        {__pyx_filename = __pyx_f[2]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":829
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_BYTE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":830
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_UBYTE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":831
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_SHORT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 104;
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":832
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_USHORT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":833
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_INT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 105;
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":834
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_UINT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":835
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_LONG); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 108;
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":836
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_ULONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":837
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_LONGLONG); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 113;
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":838
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":839
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_FLOAT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 102;
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":840
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_3 = PyInt_FromLong(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 100;
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":841
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_4 = PyInt_FromLong(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 103;
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":842
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_3 = PyInt_FromLong(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 102;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":843
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_CDOUBLE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 100;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":844
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_3 = PyInt_FromLong(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 103;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":845
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_4 = PyInt_FromLong(NPY_OBJECT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L15;
      }
      /*else*/ {

        /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":847
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
        __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_v_t); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_Raise(__pyx_t_3, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        {__pyx_filename = __pyx_f[2]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_L15:;

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":848
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);
      goto __pyx_L13;
    }
    /*else*/ {

      /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":852
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
      __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_v_f = __pyx_t_9;
    }
    __pyx_L13:;

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":797
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":853
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":786
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_child);
  __Pyx_XDECREF(__pyx_v_fields);
  __Pyx_XDECREF(__pyx_v_childname);
  __Pyx_XDECREF(__pyx_v_new_offset);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":969
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("set_array_base", 0);
  __Pyx_TraceCall("set_array_base", __pyx_f[2], 969);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":971
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
  __pyx_t_1 = (__pyx_v_base == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":972
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */
    __pyx_v_baseptr = NULL;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":974
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */
    Py_INCREF(__pyx_v_base);

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":975
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);
  }
  __pyx_L3:;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":976
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */
  Py_XDECREF(__pyx_v_arr->base);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":977
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_v_arr->base = __pyx_v_baseptr;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":969
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

  /* function exit code */
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
}

/* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":979
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_TraceDeclarations(NULL)
  __Pyx_RefNannySetupContext("get_array_base", 0);
  __Pyx_TraceCall("get_array_base", __pyx_f[2], 979);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":980
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_arr->base == NULL) != 0);
  if (__pyx_t_1) {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":981
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }
  /*else*/ {

    /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":983
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));
    __pyx_r = ((PyObject *)__pyx_v_arr->base);
    goto __pyx_L0;
  }

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":979
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_VdVstruct(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_5PDSim_6scroll_17common_scroll_geo_VdVstruct(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_V(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_1V_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_V(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_1V_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_dV(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_2dV_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_dV(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_2dV_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_5PDSim_6scroll_17common_scroll_geo_VdVstruct[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5PDSim_6scroll_17common_scroll_geo_VdVstruct[] = {
  {(char *)"V", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_V, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_V, __pyx_k_V_double, 0},
  {(char *)"dV", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_dV, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_dV, __pyx_k_dV_double, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5PDSim_6scroll_17common_scroll_geo_VdVstruct = {
  PyVarObject_HEAD_INIT(0, 0)
  "PDSim.scroll.common_scroll_geo.VdVstruct", /*tp_name*/
  sizeof(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_VdVstruct), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5PDSim_6scroll_17common_scroll_geo_VdVstruct, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_3__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "VdVstruct(V, dV)", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5PDSim_6scroll_17common_scroll_geo_VdVstruct, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5PDSim_6scroll_17common_scroll_geo_VdVstruct, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_5PDSim_6scroll_17common_scroll_geo_9VdVstruct_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_VdVstruct, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_1_i(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_i_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_1_i(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_i_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_2_i(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_i_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_2_i(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_i_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_1_o(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_o_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_1_o(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_1_o_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_2_o(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_o_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_2_o(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_7phi_2_o_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_i0(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_i0_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_i0(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_i0_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_o0(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_o0_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_o0(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_6phi_o0_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass[] = {
  {(char *)"phi_1_i", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_1_i, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_1_i, __pyx_k_phi_1_i_double, 0},
  {(char *)"phi_2_i", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_2_i, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_2_i, __pyx_k_phi_2_i_double, 0},
  {(char *)"phi_1_o", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_1_o, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_1_o, __pyx_k_phi_1_o_double, 0},
  {(char *)"phi_2_o", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_2_o, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_2_o, __pyx_k_phi_2_o_double, 0},
  {(char *)"phi_i0", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_i0, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_i0, __pyx_k_phi_i0_double, 0},
  {(char *)"phi_o0", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_o0, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_phi_o0, __pyx_k_phi_o0_double, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass = {
  PyVarObject_HEAD_INIT(0, 0)
  "PDSim.scroll.common_scroll_geo.HTAnglesClass", /*tp_name*/
  sizeof(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_5PDSim_6scroll_17common_scroll_geo_13HTAnglesClass_1__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_CVInvolute(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_5PDSim_6scroll_17common_scroll_geo_CVInvolute(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_phi_max(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_max_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_phi_max(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_max_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_phi_min(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_min_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_phi_min(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_7phi_min_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_phi_0(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_5phi_0_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_phi_0(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_5phi_0_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_involute(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_8involute_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_involute(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_8involute_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_5PDSim_6scroll_17common_scroll_geo_CVInvolute[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5PDSim_6scroll_17common_scroll_geo_CVInvolute[] = {
  {(char *)"phi_max", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_phi_max, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_phi_max, __pyx_k_phi_max_double, 0},
  {(char *)"phi_min", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_phi_min, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_phi_min, __pyx_k_phi_min_double, 0},
  {(char *)"phi_0", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_phi_0, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_phi_0, __pyx_k_phi_0_double, 0},
  {(char *)"involute", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_involute, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_involute, __pyx_k_involute_int, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5PDSim_6scroll_17common_scroll_geo_CVInvolute = {
  PyVarObject_HEAD_INIT(0, 0)
  "PDSim.scroll.common_scroll_geo.CVInvolute", /*tp_name*/
  sizeof(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5PDSim_6scroll_17common_scroll_geo_CVInvolute, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "CVInvolute()", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5PDSim_6scroll_17common_scroll_geo_CVInvolute, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5PDSim_6scroll_17common_scroll_geo_CVInvolute, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_5PDSim_6scroll_17common_scroll_geo_10CVInvolute_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_CVInvolute, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_CVInvolutes(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *)o);
  p->Inner = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)Py_None); Py_INCREF(Py_None);
  p->Outer = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_5PDSim_6scroll_17common_scroll_geo_CVInvolutes(PyObject *o) {
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *p = (struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->Inner);
  Py_CLEAR(p->Outer);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_5PDSim_6scroll_17common_scroll_geo_CVInvolutes(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *p = (struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *)o;
  if (p->Inner) {
    e = (*v)(((PyObject*)p->Inner), a); if (e) return e;
  }
  if (p->Outer) {
    e = (*v)(((PyObject*)p->Outer), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5PDSim_6scroll_17common_scroll_geo_CVInvolutes(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *p = (struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes *)o;
  tmp = ((PyObject*)p->Inner);
  p->Inner = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->Outer);
  p->Outer = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolute *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_Inner(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_Inner(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner_3__set__(o, v);
  }
  else {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Inner_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_Outer(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_Outer(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer_3__set__(o, v);
  }
  else {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_5Outer_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_5PDSim_6scroll_17common_scroll_geo_CVInvolutes[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5PDSim_6scroll_17common_scroll_geo_CVInvolutes[] = {
  {(char *)"Inner", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_Inner, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_Inner, __pyx_k_Inner_PDSim_scroll_common_scroll, 0},
  {(char *)"Outer", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_Outer, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_Outer, __pyx_k_Outer_PDSim_scroll_common_scroll, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5PDSim_6scroll_17common_scroll_geo_CVInvolutes = {
  PyVarObject_HEAD_INIT(0, 0)
  "PDSim.scroll.common_scroll_geo.CVInvolutes", /*tp_name*/
  sizeof(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_CVInvolutes), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5PDSim_6scroll_17common_scroll_geo_CVInvolutes, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_3__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "CVInvolutes()", /*tp_doc*/
  __pyx_tp_traverse_5PDSim_6scroll_17common_scroll_geo_CVInvolutes, /*tp_traverse*/
  __pyx_tp_clear_5PDSim_6scroll_17common_scroll_geo_CVInvolutes, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5PDSim_6scroll_17common_scroll_geo_CVInvolutes, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5PDSim_6scroll_17common_scroll_geo_CVInvolutes, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_5PDSim_6scroll_17common_scroll_geo_11CVInvolutes_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_CVInvolutes, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5PDSim_6scroll_17common_scroll_geo_geoVals __pyx_vtable_5PDSim_6scroll_17common_scroll_geo_geoVals;

static PyObject *__pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_geoVals(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)o);
  p->__pyx_vtab = __pyx_vtabptr_5PDSim_6scroll_17common_scroll_geo_geoVals;
  p->xvec_disc_port = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->yvec_disc_port = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_5PDSim_6scroll_17common_scroll_geo_geoVals(PyObject *o) {
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *p = (struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->xvec_disc_port);
  Py_CLEAR(p->yvec_disc_port);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_5PDSim_6scroll_17common_scroll_geo_geoVals(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *p = (struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)o;
  if (p->xvec_disc_port) {
    e = (*v)(((PyObject*)p->xvec_disc_port), a); if (e) return e;
  }
  if (p->yvec_disc_port) {
    e = (*v)(((PyObject*)p->yvec_disc_port), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5PDSim_6scroll_17common_scroll_geo_geoVals(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *p = (struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *)o;
  tmp = ((PyObject*)p->xvec_disc_port);
  p->xvec_disc_port = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->yvec_disc_port);
  p->yvec_disc_port = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_ie(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_ie_1__get__(o);
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_is(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_is_1__get__(o);
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_i0(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_i0_1__get__(o);
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oe(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_oe_1__get__(o);
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_os(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_os_1__get__(o);
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_o0(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6phi_o0_1__get__(o);
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_h(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_1h_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_h(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_1h_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ro(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_2ro_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ro(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_2ro_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_rb(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_2rb_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_rb(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_2rb_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_1t_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_1t_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fi0(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fi0_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fi0(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fi0_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fis(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fis_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fis(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fis_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fie(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fie_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fie(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fie_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fo0(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fo0_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fo0(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fo0_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fos(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fos_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fos(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_fos_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_foe(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_foe_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_foe(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_foe_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oi0(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oi0_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oi0(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oi0_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_ois(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ois_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_ois(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ois_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oie(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oie_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oie(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oie_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oo0(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oo0_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oo0(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oo0_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oos(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oos_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oos(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_oos_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_ooe(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ooe_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_ooe(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7phi_ooe_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_xa_arc1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc1_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_xa_arc1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ya_arc1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc1_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ya_arc1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ra_arc1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc1_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ra_arc1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t1_arc1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc1_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t1_arc1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t2_arc1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc1_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t2_arc1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_xa_arc2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc2_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_xa_arc2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7xa_arc2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ya_arc2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc2_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ya_arc2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ya_arc2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ra_arc2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc2_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ra_arc2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7ra_arc2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t1_arc2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc2_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t1_arc2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_arc2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t2_arc2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc2_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t2_arc2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_arc2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_b_line(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6b_line_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_b_line(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6b_line_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t1_line(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_line_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t1_line(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t1_line_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t2_line(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_line_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t2_line(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7t2_line_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_m_line(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6m_line_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_m_line(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6m_line_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_x0_wall(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7x0_wall_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_x0_wall(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7x0_wall_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_y0_wall(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7y0_wall_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_y0_wall(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7y0_wall_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_r_wall(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6r_wall_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_r_wall(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_6r_wall_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_delta_radial(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_12delta_radial_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_delta_radial(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_12delta_radial_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_delta_flank(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_11delta_flank_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_delta_flank(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_11delta_flank_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_ie_offset(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_13phi_ie_offset_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_ie_offset(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_13phi_ie_offset_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_delta_suction_offset(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_20delta_suction_offset_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_delta_suction_offset(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_20delta_suction_offset_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_cx_scroll(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cx_scroll_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_cx_scroll(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cx_scroll_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_cy_scroll(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cy_scroll_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_cy_scroll(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9cy_scroll_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_V_scroll(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_8V_scroll_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_V_scroll(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_8V_scroll_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_Vremove(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7Vremove_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_Vremove(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7Vremove_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_xvec_disc_port(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_xvec_disc_port(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port_3__set__(o, v);
  }
  else {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14xvec_disc_port_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_yvec_disc_port(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port_1__get__(o);
}

static int __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_yvec_disc_port(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port_3__set__(o, v);
  }
  else {
    return __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_14yvec_disc_port_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_5PDSim_6scroll_17common_scroll_geo_geoVals[] = {
  {"__reduce__", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_3__reduce__, METH_NOARGS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_7geoVals_2__reduce__},
  {"val_if_symmetric", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_7val_if_symmetric, METH_O, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_7geoVals_6val_if_symmetric},
  {"is_symmetric", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_9is_symmetric, METH_NOARGS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_7geoVals_8is_symmetric},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5PDSim_6scroll_17common_scroll_geo_geoVals[] = {
  {(char *)"phi_ie", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_ie, 0, __pyx_k_Inner_Ending_Angle, 0},
  {(char *)"phi_is", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_is, 0, __pyx_k_Inner_Starting_Angle, 0},
  {(char *)"phi_i0", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_i0, 0, __pyx_k_Inner_Initial_Angle, 0},
  {(char *)"phi_oe", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oe, 0, __pyx_k_Outer_Ending_Angle, 0},
  {(char *)"phi_os", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_os, 0, __pyx_k_Outer_Starting_Angle, 0},
  {(char *)"phi_o0", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_o0, 0, __pyx_k_Outer_Initial_Angle, 0},
  {(char *)"h", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_h, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_h, __pyx_k_h_double, 0},
  {(char *)"ro", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ro, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ro, __pyx_k_ro_double, 0},
  {(char *)"rb", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_rb, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_rb, __pyx_k_rb_double, 0},
  {(char *)"t", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t, __pyx_k_t_double, 0},
  {(char *)"phi_fi0", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fi0, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fi0, __pyx_k_phi_fi0_double, 0},
  {(char *)"phi_fis", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fis, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fis, __pyx_k_phi_fis_double, 0},
  {(char *)"phi_fie", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fie, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fie, __pyx_k_phi_fie_double, 0},
  {(char *)"phi_fo0", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fo0, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fo0, __pyx_k_phi_fo0_double, 0},
  {(char *)"phi_fos", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fos, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_fos, __pyx_k_phi_fos_double, 0},
  {(char *)"phi_foe", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_foe, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_foe, __pyx_k_phi_foe_double, 0},
  {(char *)"phi_oi0", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oi0, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oi0, __pyx_k_phi_oi0_double, 0},
  {(char *)"phi_ois", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_ois, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_ois, __pyx_k_phi_ois_double, 0},
  {(char *)"phi_oie", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oie, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oie, __pyx_k_phi_oie_double, 0},
  {(char *)"phi_oo0", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oo0, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oo0, __pyx_k_phi_oo0_double, 0},
  {(char *)"phi_oos", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oos, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_oos, __pyx_k_phi_oos_double, 0},
  {(char *)"phi_ooe", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_ooe, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_ooe, __pyx_k_phi_ooe_double, 0},
  {(char *)"xa_arc1", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_xa_arc1, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_xa_arc1, __pyx_k_xa_arc1_double, 0},
  {(char *)"ya_arc1", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ya_arc1, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ya_arc1, __pyx_k_ya_arc1_double, 0},
  {(char *)"ra_arc1", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ra_arc1, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ra_arc1, __pyx_k_ra_arc1_double, 0},
  {(char *)"t1_arc1", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t1_arc1, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t1_arc1, __pyx_k_t1_arc1_double, 0},
  {(char *)"t2_arc1", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t2_arc1, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t2_arc1, __pyx_k_t2_arc1_double, 0},
  {(char *)"xa_arc2", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_xa_arc2, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_xa_arc2, __pyx_k_xa_arc2_double, 0},
  {(char *)"ya_arc2", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ya_arc2, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ya_arc2, __pyx_k_ya_arc2_double, 0},
  {(char *)"ra_arc2", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ra_arc2, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_ra_arc2, __pyx_k_ra_arc2_double, 0},
  {(char *)"t1_arc2", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t1_arc2, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t1_arc2, __pyx_k_t1_arc2_double, 0},
  {(char *)"t2_arc2", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t2_arc2, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t2_arc2, __pyx_k_t2_arc2_double, 0},
  {(char *)"b_line", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_b_line, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_b_line, __pyx_k_b_line_double, 0},
  {(char *)"t1_line", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t1_line, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t1_line, __pyx_k_t1_line_double, 0},
  {(char *)"t2_line", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t2_line, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_t2_line, __pyx_k_t2_line_double, 0},
  {(char *)"m_line", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_m_line, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_m_line, __pyx_k_m_line_double, 0},
  {(char *)"x0_wall", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_x0_wall, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_x0_wall, __pyx_k_x0_wall_double, 0},
  {(char *)"y0_wall", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_y0_wall, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_y0_wall, __pyx_k_y0_wall_double, 0},
  {(char *)"r_wall", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_r_wall, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_r_wall, __pyx_k_r_wall_double, 0},
  {(char *)"delta_radial", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_delta_radial, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_delta_radial, __pyx_k_delta_radial_double, 0},
  {(char *)"delta_flank", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_delta_flank, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_delta_flank, __pyx_k_delta_flank_double, 0},
  {(char *)"phi_ie_offset", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_ie_offset, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_phi_ie_offset, __pyx_k_phi_ie_offset_double, 0},
  {(char *)"delta_suction_offset", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_delta_suction_offset, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_delta_suction_offset, __pyx_k_delta_suction_offset_double, 0},
  {(char *)"cx_scroll", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_cx_scroll, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_cx_scroll, __pyx_k_cx_scroll_double, 0},
  {(char *)"cy_scroll", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_cy_scroll, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_cy_scroll, __pyx_k_cy_scroll_double, 0},
  {(char *)"V_scroll", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_V_scroll, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_V_scroll, __pyx_k_V_scroll_double, 0},
  {(char *)"Vremove", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_Vremove, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_Vremove, __pyx_k_Vremove_double, 0},
  {(char *)"xvec_disc_port", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_xvec_disc_port, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_xvec_disc_port, __pyx_k_xvec_disc_port_numpy_ndarray, 0},
  {(char *)"yvec_disc_port", __pyx_getprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_yvec_disc_port, __pyx_setprop_5PDSim_6scroll_17common_scroll_geo_7geoVals_yvec_disc_port, __pyx_k_yvec_disc_port_numpy_ndarray, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5PDSim_6scroll_17common_scroll_geo_geoVals = {
  PyVarObject_HEAD_INIT(0, 0)
  "PDSim.scroll.common_scroll_geo.geoVals", /*tp_name*/
  sizeof(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5PDSim_6scroll_17common_scroll_geo_geoVals, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_5__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "geoVals()", /*tp_doc*/
  __pyx_tp_traverse_5PDSim_6scroll_17common_scroll_geo_geoVals, /*tp_traverse*/
  __pyx_tp_clear_5PDSim_6scroll_17common_scroll_geo_geoVals, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5PDSim_6scroll_17common_scroll_geo_geoVals, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5PDSim_6scroll_17common_scroll_geo_geoVals, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_5PDSim_6scroll_17common_scroll_geo_7geoVals_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5PDSim_6scroll_17common_scroll_geo_geoVals, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {"min2", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_1min2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_min2},
  {"max2", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_3max2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_2max2},
  {"involute_index_to_key", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_7involute_index_to_key, METH_O, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_6involute_index_to_key},
  {"Gr", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_9Gr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_8Gr},
  {"dGr_dphi", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_11dGr_dphi, METH_VARARGS|METH_KEYWORDS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_10dGr_dphi},
  {"dGr_dtheta", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_13dGr_dtheta, METH_VARARGS|METH_KEYWORDS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_12dGr_dtheta},
  {"get_compressor_CV_index", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_15get_compressor_CV_index, METH_O, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_14get_compressor_CV_index},
  {"get_compression_chamber_index", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_17get_compression_chamber_index, METH_VARARGS|METH_KEYWORDS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_16get_compression_chamber_index},
  {"_coords_inv_np", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_25_coords_inv_np, METH_VARARGS|METH_KEYWORDS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_24_coords_inv_np},
  {"_coords_inv_d", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_27_coords_inv_d, METH_VARARGS|METH_KEYWORDS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_26_coords_inv_d},
  {"coords_inv", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_29coords_inv, METH_VARARGS|METH_KEYWORDS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_28coords_inv},
  {"coords_norm", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_31coords_norm, METH_VARARGS|METH_KEYWORDS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_30coords_norm},
  {"scroll_wrap", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_33scroll_wrap, METH_O, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_32scroll_wrap},
  {"involute_heat_transfer", (PyCFunction)__pyx_pw_5PDSim_6scroll_17common_scroll_geo_35involute_heat_transfer, METH_VARARGS|METH_KEYWORDS, __pyx_doc_5PDSim_6scroll_17common_scroll_geo_34involute_heat_transfer},
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "common_scroll_geo",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_, __pyx_k_, sizeof(__pyx_k_), 0, 0, 1, 0},
  {&__pyx_kp_s_C_Users_dziviani_Documents_Pytho, __pyx_k_C_Users_dziviani_Documents_Pytho, sizeof(__pyx_k_C_Users_dziviani_Documents_Pytho), 0, 0, 1, 0},
  {&__pyx_kp_s_Expected_at_least_d_arguments, __pyx_k_Expected_at_least_d_arguments, sizeof(__pyx_k_Expected_at_least_d_arguments), 0, 0, 1, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor, __pyx_k_Format_string_allocated_too_shor, sizeof(__pyx_k_Format_string_allocated_too_shor), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor_2, __pyx_k_Format_string_allocated_too_shor_2, sizeof(__pyx_k_Format_string_allocated_too_shor_2), 0, 1, 0, 0},
  {&__pyx_kp_s_Function_call_with_ambiguous_arg, __pyx_k_Function_call_with_ambiguous_arg, sizeof(__pyx_k_Function_call_with_ambiguous_arg), 0, 0, 1, 0},
  {&__pyx_kp_s_Inner_involute_i_s, __pyx_k_Inner_involute_i_s, sizeof(__pyx_k_Inner_involute_i_s), 0, 0, 1, 0},
  {&__pyx_kp_s_Inner_phi_0_i_g, __pyx_k_Inner_phi_0_i_g, sizeof(__pyx_k_Inner_phi_0_i_g), 0, 0, 1, 0},
  {&__pyx_kp_s_Inner_phi_max_i_g, __pyx_k_Inner_phi_max_i_g, sizeof(__pyx_k_Inner_phi_max_i_g), 0, 0, 1, 0},
  {&__pyx_kp_s_Inner_phi_min_i_g, __pyx_k_Inner_phi_min_i_g, sizeof(__pyx_k_Inner_phi_min_i_g), 0, 0, 1, 0},
  {&__pyx_n_s_N, __pyx_k_N, sizeof(__pyx_k_N), 0, 0, 1, 1},
  {&__pyx_kp_s_No_matching_signature_found, __pyx_k_No_matching_signature_found, sizeof(__pyx_k_No_matching_signature_found), 0, 0, 1, 0},
  {&__pyx_kp_u_Non_native_byte_order_not_suppor, __pyx_k_Non_native_byte_order_not_suppor, sizeof(__pyx_k_Non_native_byte_order_not_suppor), 0, 1, 0, 0},
  {&__pyx_kp_s_Outer_involute_i_s, __pyx_k_Outer_involute_i_s, sizeof(__pyx_k_Outer_involute_i_s), 0, 0, 1, 0},
  {&__pyx_kp_s_Outer_phi_0_i_g, __pyx_k_Outer_phi_0_i_g, sizeof(__pyx_k_Outer_phi_0_i_g), 0, 0, 1, 0},
  {&__pyx_kp_s_Outer_phi_max_i_g, __pyx_k_Outer_phi_max_i_g, sizeof(__pyx_k_Outer_phi_max_i_g), 0, 0, 1, 0},
  {&__pyx_kp_s_Outer_phi_min_i_g, __pyx_k_Outer_phi_min_i_g, sizeof(__pyx_k_Outer_phi_min_i_g), 0, 0, 1, 0},
  {&__pyx_n_s_PDSim_scroll_common_scroll_geo, __pyx_k_PDSim_scroll_common_scroll_geo, sizeof(__pyx_k_PDSim_scroll_common_scroll_geo), 0, 0, 1, 1},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_kp_s_Symmetric_angle_requested_phi_ie, __pyx_k_Symmetric_angle_requested_phi_ie, sizeof(__pyx_k_Symmetric_angle_requested_phi_ie), 0, 0, 1, 0},
  {&__pyx_n_s_T_CV, __pyx_k_T_CV, sizeof(__pyx_k_T_CV), 0, 0, 1, 1},
  {&__pyx_n_s_T_scroll, __pyx_k_T_scroll, sizeof(__pyx_k_T_scroll), 0, 0, 1, 1},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_kp_s_Uh_oh_error_in_coords_norm, __pyx_k_Uh_oh_error_in_coords_norm, sizeof(__pyx_k_Uh_oh_error_in_coords_norm), 0, 0, 1, 0},
  {&__pyx_n_s_V, __pyx_k_V, sizeof(__pyx_k_V), 0, 0, 1, 1},
  {&__pyx_n_s_V_scroll, __pyx_k_V_scroll, sizeof(__pyx_k_V_scroll), 0, 0, 1, 1},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_s_Vremove, __pyx_k_Vremove, sizeof(__pyx_k_Vremove), 0, 0, 1, 1},
  {&__pyx_kp_s__10, __pyx_k__10, sizeof(__pyx_k__10), 0, 0, 1, 0},
  {&__pyx_kp_s__18, __pyx_k__18, sizeof(__pyx_k__18), 0, 0, 1, 0},
  {&__pyx_kp_s__2, __pyx_k__2, sizeof(__pyx_k__2), 0, 0, 1, 0},
  {&__pyx_kp_s__4, __pyx_k__4, sizeof(__pyx_k__4), 0, 0, 1, 0},
  {&__pyx_kp_s__9, __pyx_k__9, sizeof(__pyx_k__9), 0, 0, 1, 0},
  {&__pyx_n_s_a, __pyx_k_a, sizeof(__pyx_k_a), 0, 0, 1, 1},
  {&__pyx_n_s_alpha, __pyx_k_alpha, sizeof(__pyx_k_alpha), 0, 0, 1, 1},
  {&__pyx_n_s_area, __pyx_k_area, sizeof(__pyx_k_area), 0, 0, 1, 1},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_array, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
  {&__pyx_n_s_atr, __pyx_k_atr, sizeof(__pyx_k_atr), 0, 0, 1, 1},
  {&__pyx_n_s_b, __pyx_k_b, sizeof(__pyx_k_b), 0, 0, 1, 1},
  {&__pyx_n_s_b_line, __pyx_k_b_line, sizeof(__pyx_k_b_line), 0, 0, 1, 1},
  {&__pyx_kp_s_c1_1, __pyx_k_c1_1, sizeof(__pyx_k_c1_1), 0, 0, 1, 0},
  {&__pyx_kp_s_c1_10, __pyx_k_c1_10, sizeof(__pyx_k_c1_10), 0, 0, 1, 0},
  {&__pyx_kp_s_c1_2, __pyx_k_c1_2, sizeof(__pyx_k_c1_2), 0, 0, 1, 0},
  {&__pyx_kp_s_c1_3, __pyx_k_c1_3, sizeof(__pyx_k_c1_3), 0, 0, 1, 0},
  {&__pyx_kp_s_c1_4, __pyx_k_c1_4, sizeof(__pyx_k_c1_4), 0, 0, 1, 0},
  {&__pyx_kp_s_c1_5, __pyx_k_c1_5, sizeof(__pyx_k_c1_5), 0, 0, 1, 0},
  {&__pyx_kp_s_c1_6, __pyx_k_c1_6, sizeof(__pyx_k_c1_6), 0, 0, 1, 0},
  {&__pyx_kp_s_c1_7, __pyx_k_c1_7, sizeof(__pyx_k_c1_7), 0, 0, 1, 0},
  {&__pyx_kp_s_c1_8, __pyx_k_c1_8, sizeof(__pyx_k_c1_8), 0, 0, 1, 0},
  {&__pyx_kp_s_c1_9, __pyx_k_c1_9, sizeof(__pyx_k_c1_9), 0, 0, 1, 0},
  {&__pyx_kp_s_c2_1, __pyx_k_c2_1, sizeof(__pyx_k_c2_1), 0, 0, 1, 0},
  {&__pyx_kp_s_c2_10, __pyx_k_c2_10, sizeof(__pyx_k_c2_10), 0, 0, 1, 0},
  {&__pyx_kp_s_c2_2, __pyx_k_c2_2, sizeof(__pyx_k_c2_2), 0, 0, 1, 0},
  {&__pyx_kp_s_c2_3, __pyx_k_c2_3, sizeof(__pyx_k_c2_3), 0, 0, 1, 0},
  {&__pyx_kp_s_c2_4, __pyx_k_c2_4, sizeof(__pyx_k_c2_4), 0, 0, 1, 0},
  {&__pyx_kp_s_c2_5, __pyx_k_c2_5, sizeof(__pyx_k_c2_5), 0, 0, 1, 0},
  {&__pyx_kp_s_c2_6, __pyx_k_c2_6, sizeof(__pyx_k_c2_6), 0, 0, 1, 0},
  {&__pyx_kp_s_c2_7, __pyx_k_c2_7, sizeof(__pyx_k_c2_7), 0, 0, 1, 0},
  {&__pyx_kp_s_c2_8, __pyx_k_c2_8, sizeof(__pyx_k_c2_8), 0, 0, 1, 0},
  {&__pyx_kp_s_c2_9, __pyx_k_c2_9, sizeof(__pyx_k_c2_9), 0, 0, 1, 0},
  {&__pyx_n_s_cos, __pyx_k_cos, sizeof(__pyx_k_cos), 0, 0, 1, 1},
  {&__pyx_n_s_cx_scroll, __pyx_k_cx_scroll, sizeof(__pyx_k_cx_scroll), 0, 0, 1, 1},
  {&__pyx_n_s_cy_scroll, __pyx_k_cy_scroll, sizeof(__pyx_k_cy_scroll), 0, 0, 1, 1},
  {&__pyx_n_s_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 0, 1, 1},
  {&__pyx_n_s_d1, __pyx_k_d1, sizeof(__pyx_k_d1), 0, 0, 1, 1},
  {&__pyx_n_s_d2, __pyx_k_d2, sizeof(__pyx_k_d2), 0, 0, 1, 1},
  {&__pyx_n_s_dT_dphi, __pyx_k_dT_dphi, sizeof(__pyx_k_dT_dphi), 0, 0, 1, 1},
  {&__pyx_n_s_dV, __pyx_k_dV, sizeof(__pyx_k_dV), 0, 0, 1, 1},
  {&__pyx_n_s_dd, __pyx_k_dd, sizeof(__pyx_k_dd), 0, 0, 1, 1},
  {&__pyx_n_s_ddd, __pyx_k_ddd, sizeof(__pyx_k_ddd), 0, 0, 1, 1},
  {&__pyx_n_s_defaults, __pyx_k_defaults, sizeof(__pyx_k_defaults), 0, 0, 1, 1},
  {&__pyx_n_s_delta_flank, __pyx_k_delta_flank, sizeof(__pyx_k_delta_flank), 0, 0, 1, 1},
  {&__pyx_n_s_delta_radial, __pyx_k_delta_radial, sizeof(__pyx_k_delta_radial), 0, 0, 1, 1},
  {&__pyx_n_s_delta_suction_offset, __pyx_k_delta_suction_offset, sizeof(__pyx_k_delta_suction_offset), 0, 0, 1, 1},
  {&__pyx_n_s_double, __pyx_k_double, sizeof(__pyx_k_double), 0, 0, 1, 1},
  {&__pyx_n_s_end, __pyx_k_end, sizeof(__pyx_k_end), 0, 0, 1, 1},
  {&__pyx_n_s_fi, __pyx_k_fi, sizeof(__pyx_k_fi), 0, 0, 1, 1},
  {&__pyx_n_s_file, __pyx_k_file, sizeof(__pyx_k_file), 0, 0, 1, 1},
  {&__pyx_n_s_flag, __pyx_k_flag, sizeof(__pyx_k_flag), 0, 0, 1, 1},
  {&__pyx_kp_s_flag_not_valid, __pyx_k_flag_not_valid, sizeof(__pyx_k_flag_not_valid), 0, 0, 1, 0},
  {&__pyx_n_s_fo, __pyx_k_fo, sizeof(__pyx_k_fo), 0, 0, 1, 1},
  {&__pyx_n_s_format, __pyx_k_format, sizeof(__pyx_k_format), 0, 0, 1, 1},
  {&__pyx_n_s_geo, __pyx_k_geo, sizeof(__pyx_k_geo), 0, 0, 1, 1},
  {&__pyx_kp_s_geoVals_instance_at, __pyx_k_geoVals_instance_at, sizeof(__pyx_k_geoVals_instance_at), 0, 0, 1, 0},
  {&__pyx_n_s_geoValsvarlist, __pyx_k_geoValsvarlist, sizeof(__pyx_k_geoValsvarlist), 0, 0, 1, 1},
  {&__pyx_n_s_h, __pyx_k_h, sizeof(__pyx_k_h), 0, 0, 1, 1},
  {&__pyx_n_s_hc, __pyx_k_hc, sizeof(__pyx_k_hc), 0, 0, 1, 1},
  {&__pyx_n_s_hs, __pyx_k_hs, sizeof(__pyx_k_hs), 0, 0, 1, 1},
  {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {&__pyx_n_s_id, __pyx_k_id, sizeof(__pyx_k_id), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_inv, __pyx_k_inv, sizeof(__pyx_k_inv), 0, 0, 1, 1},
  {&__pyx_n_s_is_symmetric, __pyx_k_is_symmetric, sizeof(__pyx_k_is_symmetric), 0, 0, 1, 1},
  {&__pyx_n_s_j, __pyx_k_j, sizeof(__pyx_k_j), 0, 0, 1, 1},
  {&__pyx_n_s_kwargs, __pyx_k_kwargs, sizeof(__pyx_k_kwargs), 0, 0, 1, 1},
  {&__pyx_n_s_m_line, __pyx_k_m_line, sizeof(__pyx_k_m_line), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_ndarray, __pyx_k_ndarray, sizeof(__pyx_k_ndarray), 0, 0, 1, 1},
  {&__pyx_kp_u_ndarray_is_not_C_contiguous, __pyx_k_ndarray_is_not_C_contiguous, sizeof(__pyx_k_ndarray_is_not_C_contiguous), 0, 1, 0, 0},
  {&__pyx_kp_u_ndarray_is_not_Fortran_contiguou, __pyx_k_ndarray_is_not_Fortran_contiguou, sizeof(__pyx_k_ndarray_is_not_Fortran_contiguou), 0, 1, 0, 0},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_n_u_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 1, 0, 1},
  {&__pyx_n_s_oi, __pyx_k_oi, sizeof(__pyx_k_oi), 0, 0, 1, 1},
  {&__pyx_n_s_oo, __pyx_k_oo, sizeof(__pyx_k_oo), 0, 0, 1, 1},
  {&__pyx_n_s_path, __pyx_k_path, sizeof(__pyx_k_path), 0, 0, 1, 1},
  {&__pyx_n_s_phi, __pyx_k_phi, sizeof(__pyx_k_phi), 0, 0, 1, 1},
  {&__pyx_n_s_phi0, __pyx_k_phi0, sizeof(__pyx_k_phi0), 0, 0, 1, 1},
  {&__pyx_n_s_phi1, __pyx_k_phi1, sizeof(__pyx_k_phi1), 0, 0, 1, 1},
  {&__pyx_n_s_phi2, __pyx_k_phi2, sizeof(__pyx_k_phi2), 0, 0, 1, 1},
  {&__pyx_n_s_phi_1_i, __pyx_k_phi_1_i, sizeof(__pyx_k_phi_1_i), 0, 0, 1, 1},
  {&__pyx_n_s_phi_1_o, __pyx_k_phi_1_o, sizeof(__pyx_k_phi_1_o), 0, 0, 1, 1},
  {&__pyx_n_s_phi_2_i, __pyx_k_phi_2_i, sizeof(__pyx_k_phi_2_i), 0, 0, 1, 1},
  {&__pyx_n_s_phi_2_o, __pyx_k_phi_2_o, sizeof(__pyx_k_phi_2_o), 0, 0, 1, 1},
  {&__pyx_n_s_phi_fi0, __pyx_k_phi_fi0, sizeof(__pyx_k_phi_fi0), 0, 0, 1, 1},
  {&__pyx_n_s_phi_fie, __pyx_k_phi_fie, sizeof(__pyx_k_phi_fie), 0, 0, 1, 1},
  {&__pyx_n_s_phi_fis, __pyx_k_phi_fis, sizeof(__pyx_k_phi_fis), 0, 0, 1, 1},
  {&__pyx_n_s_phi_fo0, __pyx_k_phi_fo0, sizeof(__pyx_k_phi_fo0), 0, 0, 1, 1},
  {&__pyx_n_s_phi_foe, __pyx_k_phi_foe, sizeof(__pyx_k_phi_foe), 0, 0, 1, 1},
  {&__pyx_n_s_phi_fos, __pyx_k_phi_fos, sizeof(__pyx_k_phi_fos), 0, 0, 1, 1},
  {&__pyx_n_s_phi_i0, __pyx_k_phi_i0, sizeof(__pyx_k_phi_i0), 0, 0, 1, 1},
  {&__pyx_n_s_phi_ie_offset, __pyx_k_phi_ie_offset, sizeof(__pyx_k_phi_ie_offset), 0, 0, 1, 1},
  {&__pyx_n_s_phi_o0, __pyx_k_phi_o0, sizeof(__pyx_k_phi_o0), 0, 0, 1, 1},
  {&__pyx_n_s_phi_oi0, __pyx_k_phi_oi0, sizeof(__pyx_k_phi_oi0), 0, 0, 1, 1},
  {&__pyx_n_s_phi_oie, __pyx_k_phi_oie, sizeof(__pyx_k_phi_oie), 0, 0, 1, 1},
  {&__pyx_n_s_phi_ois, __pyx_k_phi_ois, sizeof(__pyx_k_phi_ois), 0, 0, 1, 1},
  {&__pyx_n_s_phi_oo0, __pyx_k_phi_oo0, sizeof(__pyx_k_phi_oo0), 0, 0, 1, 1},
  {&__pyx_n_s_phi_ooe, __pyx_k_phi_ooe, sizeof(__pyx_k_phi_ooe), 0, 0, 1, 1},
  {&__pyx_n_s_phi_oos, __pyx_k_phi_oos, sizeof(__pyx_k_phi_oos), 0, 0, 1, 1},
  {&__pyx_n_s_phi_vec, __pyx_k_phi_vec, sizeof(__pyx_k_phi_vec), 0, 0, 1, 1},
  {&__pyx_n_s_phim, __pyx_k_phim, sizeof(__pyx_k_phim), 0, 0, 1, 1},
  {&__pyx_n_s_plus_one, __pyx_k_plus_one, sizeof(__pyx_k_plus_one), 0, 0, 1, 1},
  {&__pyx_n_s_polyarea, __pyx_k_polyarea, sizeof(__pyx_k_polyarea), 0, 0, 1, 1},
  {&__pyx_n_s_polycentroid, __pyx_k_polycentroid, sizeof(__pyx_k_polycentroid), 0, 0, 1, 1},
  {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_fuse_0plus_one, __pyx_k_pyx_fuse_0plus_one, sizeof(__pyx_k_pyx_fuse_0plus_one), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_fuse_1plus_one, __pyx_k_pyx_fuse_1plus_one, sizeof(__pyx_k_pyx_fuse_1plus_one), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
  {&__pyx_n_s_r_wall, __pyx_k_r_wall, sizeof(__pyx_k_r_wall), 0, 0, 1, 1},
  {&__pyx_n_s_ra_arc1, __pyx_k_ra_arc1, sizeof(__pyx_k_ra_arc1), 0, 0, 1, 1},
  {&__pyx_n_s_ra_arc2, __pyx_k_ra_arc2, sizeof(__pyx_k_ra_arc2), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_rb, __pyx_k_rb, sizeof(__pyx_k_rb), 0, 0, 1, 1},
  {&__pyx_n_s_rebuild_geoVals, __pyx_k_rebuild_geoVals, sizeof(__pyx_k_rebuild_geoVals), 0, 0, 1, 1},
  {&__pyx_n_s_ro, __pyx_k_ro, sizeof(__pyx_k_ro), 0, 0, 1, 1},
  {&__pyx_n_s_s1, __pyx_k_s1, sizeof(__pyx_k_s1), 0, 0, 1, 1},
  {&__pyx_n_s_s2, __pyx_k_s2, sizeof(__pyx_k_s2), 0, 0, 1, 1},
  {&__pyx_n_s_sa, __pyx_k_sa, sizeof(__pyx_k_sa), 0, 0, 1, 1},
  {&__pyx_n_s_signatures, __pyx_k_signatures, sizeof(__pyx_k_signatures), 0, 0, 1, 1},
  {&__pyx_n_s_sin, __pyx_k_sin, sizeof(__pyx_k_sin), 0, 0, 1, 1},
  {&__pyx_n_s_size, __pyx_k_size, sizeof(__pyx_k_size), 0, 0, 1, 1},
  {&__pyx_n_s_split, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
  {&__pyx_n_s_strip, __pyx_k_strip, sizeof(__pyx_k_strip), 0, 0, 1, 1},
  {&__pyx_n_s_sumx, __pyx_k_sumx, sizeof(__pyx_k_sumx), 0, 0, 1, 1},
  {&__pyx_n_s_sumy, __pyx_k_sumy, sizeof(__pyx_k_sumy), 0, 0, 1, 1},
  {&__pyx_n_s_t, __pyx_k_t, sizeof(__pyx_k_t), 0, 0, 1, 1},
  {&__pyx_n_s_t1_arc1, __pyx_k_t1_arc1, sizeof(__pyx_k_t1_arc1), 0, 0, 1, 1},
  {&__pyx_n_s_t1_arc2, __pyx_k_t1_arc2, sizeof(__pyx_k_t1_arc2), 0, 0, 1, 1},
  {&__pyx_n_s_t1_line, __pyx_k_t1_line, sizeof(__pyx_k_t1_line), 0, 0, 1, 1},
  {&__pyx_n_s_t2_arc1, __pyx_k_t2_arc1, sizeof(__pyx_k_t2_arc1), 0, 0, 1, 1},
  {&__pyx_n_s_t2_arc2, __pyx_k_t2_arc2, sizeof(__pyx_k_t2_arc2), 0, 0, 1, 1},
  {&__pyx_n_s_t2_line, __pyx_k_t2_line, sizeof(__pyx_k_t2_line), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_theta, __pyx_k_theta, sizeof(__pyx_k_theta), 0, 0, 1, 1},
  {&__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_k_unknown_dtype_code_in_numpy_pxd, sizeof(__pyx_k_unknown_dtype_code_in_numpy_pxd), 0, 1, 0, 0},
  {&__pyx_n_s_val_if_symmetric, __pyx_k_val_if_symmetric, sizeof(__pyx_k_val_if_symmetric), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_s_x0_wall, __pyx_k_x0_wall, sizeof(__pyx_k_x0_wall), 0, 0, 1, 1},
  {&__pyx_n_s_xa_arc1, __pyx_k_xa_arc1, sizeof(__pyx_k_xa_arc1), 0, 0, 1, 1},
  {&__pyx_n_s_xa_arc2, __pyx_k_xa_arc2, sizeof(__pyx_k_xa_arc2), 0, 0, 1, 1},
  {&__pyx_n_s_xi, __pyx_k_xi, sizeof(__pyx_k_xi), 0, 0, 1, 1},
  {&__pyx_n_s_xrange, __pyx_k_xrange, sizeof(__pyx_k_xrange), 0, 0, 1, 1},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {&__pyx_n_s_y0_wall, __pyx_k_y0_wall, sizeof(__pyx_k_y0_wall), 0, 0, 1, 1},
  {&__pyx_n_s_ya_arc1, __pyx_k_ya_arc1, sizeof(__pyx_k_ya_arc1), 0, 0, 1, 1},
  {&__pyx_n_s_ya_arc2, __pyx_k_ya_arc2, sizeof(__pyx_k_ya_arc2), 0, 0, 1, 1},
  {&__pyx_n_s_yi, __pyx_k_yi, sizeof(__pyx_k_yi), 0, 0, 1, 1},
  {&__pyx_n_s_zeros, __pyx_k_zeros, sizeof(__pyx_k_zeros), 0, 0, 1, 1},
  {&__pyx_n_s_zip, __pyx_k_zip, sizeof(__pyx_k_zip), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin___import__ = __Pyx_GetBuiltinName(__pyx_n_s_import); if (!__pyx_builtin___import__) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_zip = __Pyx_GetBuiltinName(__pyx_n_s_zip); if (!__pyx_builtin_zip) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_id = __Pyx_GetBuiltinName(__pyx_n_s_id); if (!__pyx_builtin_id) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION >= 3
  __pyx_builtin_xrange = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_xrange) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #else
  __pyx_builtin_xrange = __Pyx_GetBuiltinName(__pyx_n_s_xrange); if (!__pyx_builtin_xrange) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "PDSim\scroll\common_scroll_geo.pyx":6
 * import numpy as np
 * 
 * cpdef double_or_numpy plus_one(double_or_numpy x):             # <<<<<<<<<<<<<<
 *     return x + 1.0
 * 
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_s__2); if (unlikely(!__pyx_tuple__3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_s__4); if (unlikely(!__pyx_tuple__5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_s_No_matching_signature_found); if (unlikely(!__pyx_tuple__6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_s_Function_call_with_ambiguous_arg); if (unlikely(!__pyx_tuple__7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "PDSim\scroll\common_scroll_geo.pyx":20
 *     def __repr__(self):
 *         s = ''
 *         for k in ['phi_1_i','phi_2_i','phi_1_o','phi_2_o','phi_i0','phi_o0']:             # <<<<<<<<<<<<<<
 *             s += k + ' : ' + str(getattr(self,k)) + '\n'
 *         return s
 */
  __pyx_tuple__8 = PyTuple_Pack(6, __pyx_n_s_phi_1_i, __pyx_n_s_phi_2_i, __pyx_n_s_phi_1_o, __pyx_n_s_phi_2_o, __pyx_n_s_phi_i0, __pyx_n_s_phi_o0); if (unlikely(!__pyx_tuple__8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "PDSim\scroll\common_scroll_geo.pyx":51
 * 
 *     if index == INVOLUTE_FI:
 *         return bytes('fi')             # <<<<<<<<<<<<<<
 *     elif index == INVOLUTE_FO:
 *         return bytes('fo')
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_n_s_fi); if (unlikely(!__pyx_tuple__11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "PDSim\scroll\common_scroll_geo.pyx":53
 *         return bytes('fi')
 *     elif index == INVOLUTE_FO:
 *         return bytes('fo')             # <<<<<<<<<<<<<<
 *     elif index == INVOLUTE_OI:
 *         return bytes('oi')
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_n_s_fo); if (unlikely(!__pyx_tuple__12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "PDSim\scroll\common_scroll_geo.pyx":55
 *         return bytes('fo')
 *     elif index == INVOLUTE_OI:
 *         return bytes('oi')             # <<<<<<<<<<<<<<
 *     elif index == INVOLUTE_OO:
 *         return bytes('oo')
 */
  __pyx_tuple__13 = PyTuple_Pack(1, __pyx_n_s_oi); if (unlikely(!__pyx_tuple__13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "PDSim\scroll\common_scroll_geo.pyx":57
 *         return bytes('oi')
 *     elif index == INVOLUTE_OO:
 *         return bytes('oo')             # <<<<<<<<<<<<<<
 *     else:
 *         return bytes('')
 */
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_n_s_oo); if (unlikely(!__pyx_tuple__14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "PDSim\scroll\common_scroll_geo.pyx":59
 *         return bytes('oo')
 *     else:
 *         return bytes('')             # <<<<<<<<<<<<<<
 * 
 * cpdef double Gr(double phi, geoVals geo, double theta, int inv):
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_s_); if (unlikely(!__pyx_tuple__15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "PDSim\scroll\common_scroll_geo.pyx":131
 *         dy[0] = -ro*cos(om)
 *     else:
 *         raise ValueError('flag not valid')             # <<<<<<<<<<<<<<
 * 
 * cpdef long get_compressor_CV_index(str key) except *:
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_s_flag_not_valid); if (unlikely(!__pyx_tuple__16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "PDSim\scroll\common_scroll_geo.pyx":243
 *             return val
 *         else:
 *             raise ValueError('Symmetric angle requested (phi_ie, phi_is, phi_i0, etc.) but the geometry is not symmetric')             # <<<<<<<<<<<<<<
 * 
 *     property phi_ie:
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_s_Symmetric_angle_requested_phi_ie); if (unlikely(!__pyx_tuple__19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "PDSim\scroll\common_scroll_geo.pyx":331
 *         y = -rb*np.sin(phi)+rb*(phi-geo.phi_oo0)*np.cos(phi)+ro*np.sin(om)
 *     else:
 *         raise ValueError('flag not valid')             # <<<<<<<<<<<<<<
 *     return (x,y)
 * 
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_kp_s_flag_not_valid); if (unlikely(!__pyx_tuple__22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "PDSim\scroll\common_scroll_geo.pyx":356
 *         y[0] = -rb*sin(phi)+rb*(phi-geo.phi_oo0)*cos(phi)+ro*sin(om)
 *     else:
 *         raise ValueError('flag not valid')             # <<<<<<<<<<<<<<
 * 
 * cpdef tuple _coords_inv_d(double phi, geoVals geo,double theta, flag=""):
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_kp_s_flag_not_valid); if (unlikely(!__pyx_tuple__23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "PDSim\scroll\common_scroll_geo.pyx":380
 *         y = -rb*sin(phi)+rb*(phi-geo.phi_oo0)*cos(phi)+ro*sin(om)
 *     else:
 *         raise ValueError('flag not valid')             # <<<<<<<<<<<<<<
 *     return (x,y)
 * 
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_kp_s_flag_not_valid); if (unlikely(!__pyx_tuple__24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_tuple__25 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_C_contiguous); if (unlikely(!__pyx_tuple__25)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_Fortran_contiguou); if (unlikely(!__pyx_tuple__26)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":260
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_tuple__27 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__27)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":802
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
  __pyx_tuple__28 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor); if (unlikely(!__pyx_tuple__28)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":806
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
  __pyx_tuple__29 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__29)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":826
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor_2); if (unlikely(!__pyx_tuple__30)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "PDSim\scroll\common_scroll_geo.pyx":6
 * import numpy as np
 * 
 * cpdef double_or_numpy plus_one(double_or_numpy x):             # <<<<<<<<<<<<<<
 *     return x + 1.0
 * 
 */
  __pyx_tuple__31 = PyTuple_Pack(2, __pyx_n_s_x, __pyx_n_s_x); if (unlikely(!__pyx_tuple__31)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);
  __pyx_codeobj__32 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__31, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_C_Users_dziviani_Documents_Pytho, __pyx_n_s_pyx_fuse_0plus_one, 6, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__32)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "PDSim\scroll\common_scroll_geo.pyx":215
 *                 'cx_scroll','cy_scroll','V_scroll','Vremove']
 * 
 * def rebuild_geoVals(d):             # <<<<<<<<<<<<<<
 *     geo = geoVals()
 *     for atr in geoValsvarlist:
 */
  __pyx_tuple__33 = PyTuple_Pack(3, __pyx_n_s_d, __pyx_n_s_geo, __pyx_n_s_atr); if (unlikely(!__pyx_tuple__33)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);
  __pyx_codeobj__17 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__33, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_C_Users_dziviani_Documents_Pytho, __pyx_n_s_rebuild_geoVals, 215, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__17)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "PDSim\scroll\common_scroll_geo.pyx":287
 *                 )
 * 
 * def polyarea(x,y):             # <<<<<<<<<<<<<<
 *     N=len(x)
 *     area = 0.0
 */
  __pyx_tuple__34 = PyTuple_Pack(6, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_N, __pyx_n_s_area, __pyx_n_s_i, __pyx_n_s_j); if (unlikely(!__pyx_tuple__34)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);
  __pyx_codeobj__20 = (PyObject*)__Pyx_PyCode_New(2, 0, 6, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__34, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_C_Users_dziviani_Documents_Pytho, __pyx_n_s_polyarea, 287, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "PDSim\scroll\common_scroll_geo.pyx":295
 *     return area/2.0
 * 
 * def polycentroid(xi,yi):             # <<<<<<<<<<<<<<
 *     # Add additional element if needed to close polygon
 *     if not xi[0]==xi[-1] or not yi[0]==yi[-1]:
 */
  __pyx_tuple__35 = PyTuple_Pack(7, __pyx_n_s_xi, __pyx_n_s_yi, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_sumx, __pyx_n_s_sumy, __pyx_n_s_i); if (unlikely(!__pyx_tuple__35)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);
  __pyx_codeobj__21 = (PyObject*)__Pyx_PyCode_New(2, 0, 7, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__35, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_C_Users_dziviani_Documents_Pytho, __pyx_n_s_polycentroid, 295, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_float_0_0 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_float_0_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_float_1_0 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_float_1_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_float_2_0 = PyFloat_FromDouble(2.0); if (unlikely(!__pyx_float_2_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_6 = PyInt_FromLong(6); if (unlikely(!__pyx_int_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initcommon_scroll_geo(void); /*proto*/
PyMODINIT_FUNC initcommon_scroll_geo(void)
#else
PyMODINIT_FUNC PyInit_common_scroll_geo(void); /*proto*/
PyMODINIT_FUNC PyInit_common_scroll_geo(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_common_scroll_geo(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("common_scroll_geo", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_PDSim__scroll__common_scroll_geo) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "PDSim.scroll.common_scroll_geo")) {
      if (unlikely(PyDict_SetItemString(modules, "PDSim.scroll.common_scroll_geo", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  if (__Pyx_ExportFunction("involute_index_to_key", (void (*)(void))__pyx_f_5PDSim_6scroll_17common_scroll_geo_involute_index_to_key, "PyObject *(int, int __pyx_skip_dispatch)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("scroll_wrap", (void (*)(void))__pyx_f_5PDSim_6scroll_17common_scroll_geo_scroll_wrap, "PyObject *(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, int __pyx_skip_dispatch)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("coords_norm", (void (*)(void))__pyx_f_5PDSim_6scroll_17common_scroll_geo_coords_norm, "PyObject *(PyObject *, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int __pyx_skip_dispatch, struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo_coords_norm *__pyx_optional_args)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("coords_inv", (void (*)(void))__pyx_f_5PDSim_6scroll_17common_scroll_geo_coords_inv, "PyObject *(PyObject *, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int __pyx_skip_dispatch, struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo_coords_inv *__pyx_optional_args)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("_coords_inv_np", (void (*)(void))__pyx_f_5PDSim_6scroll_17common_scroll_geo__coords_inv_np, "PyObject *(PyArrayObject *, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int __pyx_skip_dispatch, struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo__coords_inv_np *__pyx_optional_args)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("_coords_inv_d", (void (*)(void))__pyx_f_5PDSim_6scroll_17common_scroll_geo__coords_inv_d, "PyObject *(double, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int __pyx_skip_dispatch, struct __pyx_opt_args_5PDSim_6scroll_17common_scroll_geo__coords_inv_d *__pyx_optional_args)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("_coords_inv_d_int", (void (*)(void))__pyx_f_5PDSim_6scroll_17common_scroll_geo__coords_inv_d_int, "PyObject *(double, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int, double *, double *)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("coords_inv_dtheta", (void (*)(void))__pyx_f_5PDSim_6scroll_17common_scroll_geo_coords_inv_dtheta, "PyObject *(double, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int, double *, double *)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("get_compressor_CV_index", (void (*)(void))__pyx_f_5PDSim_6scroll_17common_scroll_geo_get_compressor_CV_index, "long (PyObject *, int __pyx_skip_dispatch)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("get_compression_chamber_index", (void (*)(void))__pyx_f_5PDSim_6scroll_17common_scroll_geo_get_compression_chamber_index, "long (long, long, int __pyx_skip_dispatch)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("Gr", (void (*)(void))__pyx_f_5PDSim_6scroll_17common_scroll_geo_Gr, "double (double, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int, int __pyx_skip_dispatch)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("dGr_dphi", (void (*)(void))__pyx_f_5PDSim_6scroll_17common_scroll_geo_dGr_dphi, "double (double, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int, int __pyx_skip_dispatch)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("dGr_dtheta", (void (*)(void))__pyx_f_5PDSim_6scroll_17common_scroll_geo_dGr_dtheta, "double (double, struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int, int __pyx_skip_dispatch)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("involute_heat_transfer", (void (*)(void))__pyx_f_5PDSim_6scroll_17common_scroll_geo_involute_heat_transfer, "double (double, double, double, double, double, double, double, double, double, double, int __pyx_skip_dispatch)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("__pyx_fuse_0plus_one", (void (*)(void))__pyx_fuse_0__pyx_f_5PDSim_6scroll_17common_scroll_geo_plus_one, "double (double, int __pyx_skip_dispatch)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("__pyx_fuse_1plus_one", (void (*)(void))__pyx_fuse_1__pyx_f_5PDSim_6scroll_17common_scroll_geo_plus_one, "PyArrayObject *(PyArrayObject *, int __pyx_skip_dispatch)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_5PDSim_6scroll_17common_scroll_geo_VdVstruct) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_5PDSim_6scroll_17common_scroll_geo_VdVstruct.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "VdVstruct", (PyObject *)&__pyx_type_5PDSim_6scroll_17common_scroll_geo_VdVstruct) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_VdVstruct = &__pyx_type_5PDSim_6scroll_17common_scroll_geo_VdVstruct;
  if (PyType_Ready(&__pyx_type_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "HTAnglesClass", (PyObject *)&__pyx_type_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass = &__pyx_type_5PDSim_6scroll_17common_scroll_geo_HTAnglesClass;
  if (PyType_Ready(&__pyx_type_5PDSim_6scroll_17common_scroll_geo_CVInvolute) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_5PDSim_6scroll_17common_scroll_geo_CVInvolute.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "CVInvolute", (PyObject *)&__pyx_type_5PDSim_6scroll_17common_scroll_geo_CVInvolute) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_CVInvolute = &__pyx_type_5PDSim_6scroll_17common_scroll_geo_CVInvolute;
  if (PyType_Ready(&__pyx_type_5PDSim_6scroll_17common_scroll_geo_CVInvolutes) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_5PDSim_6scroll_17common_scroll_geo_CVInvolutes.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "CVInvolutes", (PyObject *)&__pyx_type_5PDSim_6scroll_17common_scroll_geo_CVInvolutes) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_CVInvolutes = &__pyx_type_5PDSim_6scroll_17common_scroll_geo_CVInvolutes;
  __pyx_vtabptr_5PDSim_6scroll_17common_scroll_geo_geoVals = &__pyx_vtable_5PDSim_6scroll_17common_scroll_geo_geoVals;
  __pyx_vtable_5PDSim_6scroll_17common_scroll_geo_geoVals.is_symmetric = (int (*)(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, int __pyx_skip_dispatch))__pyx_f_5PDSim_6scroll_17common_scroll_geo_7geoVals_is_symmetric;
  __pyx_vtable_5PDSim_6scroll_17common_scroll_geo_geoVals.val_if_symmetric = (double (*)(struct __pyx_obj_5PDSim_6scroll_17common_scroll_geo_geoVals *, double, int __pyx_skip_dispatch))__pyx_f_5PDSim_6scroll_17common_scroll_geo_7geoVals_val_if_symmetric;
  if (PyType_Ready(&__pyx_type_5PDSim_6scroll_17common_scroll_geo_geoVals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_5PDSim_6scroll_17common_scroll_geo_geoVals.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5PDSim_6scroll_17common_scroll_geo_geoVals.tp_dict, __pyx_vtabptr_5PDSim_6scroll_17common_scroll_geo_geoVals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "geoVals", (PyObject *)&__pyx_type_5PDSim_6scroll_17common_scroll_geo_geoVals) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5PDSim_6scroll_17common_scroll_geo_geoVals = &__pyx_type_5PDSim_6scroll_17common_scroll_geo_geoVals;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "PDSim\scroll\common_scroll_geo.pyx":4
 * cimport cython
 * import cython
 * import numpy as np             # <<<<<<<<<<<<<<
 * 
 * cpdef double_or_numpy plus_one(double_or_numpy x):
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":6
 * import numpy as np
 * 
 * cpdef double_or_numpy plus_one(double_or_numpy x):             # <<<<<<<<<<<<<<
 *     return x + 1.0
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_FusedFunction_NewEx(&__pyx_fuse_0__pyx_mdef_5PDSim_6scroll_17common_scroll_geo_37__pyx_fuse_0plus_one, 0, __pyx_n_s_pyx_fuse_0plus_one, NULL, __pyx_n_s_PDSim_scroll_common_scroll_geo, __pyx_d, ((PyObject *)__pyx_codeobj__32)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_empty_tuple);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_double, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __pyx_FusedFunction_NewEx(&__pyx_fuse_1__pyx_mdef_5PDSim_6scroll_17common_scroll_geo_39__pyx_fuse_1plus_one, 0, __pyx_n_s_pyx_fuse_1plus_one, NULL, __pyx_n_s_PDSim_scroll_common_scroll_geo, __pyx_d, ((PyObject *)__pyx_codeobj__32)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_empty_tuple);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_ndarray, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __pyx_FusedFunction_NewEx(&__pyx_mdef_5PDSim_6scroll_17common_scroll_geo_5plus_one, 0, __pyx_n_s_plus_one, NULL, __pyx_n_s_PDSim_scroll_common_scroll_geo, __pyx_d, ((PyObject *)__pyx_codeobj__32)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_empty_tuple);
  ((__pyx_FusedFunctionObject *) __pyx_t_2)->__signatures__ = __pyx_t_1;
  __Pyx_GIVEREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_plus_one, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":202
 * 
 * #This is a list of all the members in geoVals
 * geoValsvarlist=['h','ro','rb','t',             # <<<<<<<<<<<<<<
 *                 'phi_fi0','phi_fis','phi_fie',
 *                 'phi_fo0','phi_fos','phi_foe',
 */
  __pyx_t_3 = PyList_New(41); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_n_s_h);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_h);
  __Pyx_GIVEREF(__pyx_n_s_h);
  __Pyx_INCREF(__pyx_n_s_ro);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_n_s_ro);
  __Pyx_GIVEREF(__pyx_n_s_ro);
  __Pyx_INCREF(__pyx_n_s_rb);
  PyList_SET_ITEM(__pyx_t_3, 2, __pyx_n_s_rb);
  __Pyx_GIVEREF(__pyx_n_s_rb);
  __Pyx_INCREF(__pyx_n_s_t);
  PyList_SET_ITEM(__pyx_t_3, 3, __pyx_n_s_t);
  __Pyx_GIVEREF(__pyx_n_s_t);
  __Pyx_INCREF(__pyx_n_s_phi_fi0);
  PyList_SET_ITEM(__pyx_t_3, 4, __pyx_n_s_phi_fi0);
  __Pyx_GIVEREF(__pyx_n_s_phi_fi0);
  __Pyx_INCREF(__pyx_n_s_phi_fis);
  PyList_SET_ITEM(__pyx_t_3, 5, __pyx_n_s_phi_fis);
  __Pyx_GIVEREF(__pyx_n_s_phi_fis);
  __Pyx_INCREF(__pyx_n_s_phi_fie);
  PyList_SET_ITEM(__pyx_t_3, 6, __pyx_n_s_phi_fie);
  __Pyx_GIVEREF(__pyx_n_s_phi_fie);
  __Pyx_INCREF(__pyx_n_s_phi_fo0);
  PyList_SET_ITEM(__pyx_t_3, 7, __pyx_n_s_phi_fo0);
  __Pyx_GIVEREF(__pyx_n_s_phi_fo0);
  __Pyx_INCREF(__pyx_n_s_phi_fos);
  PyList_SET_ITEM(__pyx_t_3, 8, __pyx_n_s_phi_fos);
  __Pyx_GIVEREF(__pyx_n_s_phi_fos);
  __Pyx_INCREF(__pyx_n_s_phi_foe);
  PyList_SET_ITEM(__pyx_t_3, 9, __pyx_n_s_phi_foe);
  __Pyx_GIVEREF(__pyx_n_s_phi_foe);
  __Pyx_INCREF(__pyx_n_s_phi_oi0);
  PyList_SET_ITEM(__pyx_t_3, 10, __pyx_n_s_phi_oi0);
  __Pyx_GIVEREF(__pyx_n_s_phi_oi0);
  __Pyx_INCREF(__pyx_n_s_phi_ois);
  PyList_SET_ITEM(__pyx_t_3, 11, __pyx_n_s_phi_ois);
  __Pyx_GIVEREF(__pyx_n_s_phi_ois);
  __Pyx_INCREF(__pyx_n_s_phi_oie);
  PyList_SET_ITEM(__pyx_t_3, 12, __pyx_n_s_phi_oie);
  __Pyx_GIVEREF(__pyx_n_s_phi_oie);
  __Pyx_INCREF(__pyx_n_s_phi_oo0);
  PyList_SET_ITEM(__pyx_t_3, 13, __pyx_n_s_phi_oo0);
  __Pyx_GIVEREF(__pyx_n_s_phi_oo0);
  __Pyx_INCREF(__pyx_n_s_phi_oos);
  PyList_SET_ITEM(__pyx_t_3, 14, __pyx_n_s_phi_oos);
  __Pyx_GIVEREF(__pyx_n_s_phi_oos);
  __Pyx_INCREF(__pyx_n_s_phi_ooe);
  PyList_SET_ITEM(__pyx_t_3, 15, __pyx_n_s_phi_ooe);
  __Pyx_GIVEREF(__pyx_n_s_phi_ooe);
  __Pyx_INCREF(__pyx_n_s_xa_arc1);
  PyList_SET_ITEM(__pyx_t_3, 16, __pyx_n_s_xa_arc1);
  __Pyx_GIVEREF(__pyx_n_s_xa_arc1);
  __Pyx_INCREF(__pyx_n_s_ya_arc1);
  PyList_SET_ITEM(__pyx_t_3, 17, __pyx_n_s_ya_arc1);
  __Pyx_GIVEREF(__pyx_n_s_ya_arc1);
  __Pyx_INCREF(__pyx_n_s_ra_arc1);
  PyList_SET_ITEM(__pyx_t_3, 18, __pyx_n_s_ra_arc1);
  __Pyx_GIVEREF(__pyx_n_s_ra_arc1);
  __Pyx_INCREF(__pyx_n_s_t1_arc1);
  PyList_SET_ITEM(__pyx_t_3, 19, __pyx_n_s_t1_arc1);
  __Pyx_GIVEREF(__pyx_n_s_t1_arc1);
  __Pyx_INCREF(__pyx_n_s_t2_arc1);
  PyList_SET_ITEM(__pyx_t_3, 20, __pyx_n_s_t2_arc1);
  __Pyx_GIVEREF(__pyx_n_s_t2_arc1);
  __Pyx_INCREF(__pyx_n_s_xa_arc2);
  PyList_SET_ITEM(__pyx_t_3, 21, __pyx_n_s_xa_arc2);
  __Pyx_GIVEREF(__pyx_n_s_xa_arc2);
  __Pyx_INCREF(__pyx_n_s_ya_arc2);
  PyList_SET_ITEM(__pyx_t_3, 22, __pyx_n_s_ya_arc2);
  __Pyx_GIVEREF(__pyx_n_s_ya_arc2);
  __Pyx_INCREF(__pyx_n_s_ra_arc2);
  PyList_SET_ITEM(__pyx_t_3, 23, __pyx_n_s_ra_arc2);
  __Pyx_GIVEREF(__pyx_n_s_ra_arc2);
  __Pyx_INCREF(__pyx_n_s_t1_arc2);
  PyList_SET_ITEM(__pyx_t_3, 24, __pyx_n_s_t1_arc2);
  __Pyx_GIVEREF(__pyx_n_s_t1_arc2);
  __Pyx_INCREF(__pyx_n_s_t2_arc2);
  PyList_SET_ITEM(__pyx_t_3, 25, __pyx_n_s_t2_arc2);
  __Pyx_GIVEREF(__pyx_n_s_t2_arc2);
  __Pyx_INCREF(__pyx_n_s_b_line);
  PyList_SET_ITEM(__pyx_t_3, 26, __pyx_n_s_b_line);
  __Pyx_GIVEREF(__pyx_n_s_b_line);
  __Pyx_INCREF(__pyx_n_s_t1_line);
  PyList_SET_ITEM(__pyx_t_3, 27, __pyx_n_s_t1_line);
  __Pyx_GIVEREF(__pyx_n_s_t1_line);
  __Pyx_INCREF(__pyx_n_s_t2_line);
  PyList_SET_ITEM(__pyx_t_3, 28, __pyx_n_s_t2_line);
  __Pyx_GIVEREF(__pyx_n_s_t2_line);
  __Pyx_INCREF(__pyx_n_s_m_line);
  PyList_SET_ITEM(__pyx_t_3, 29, __pyx_n_s_m_line);
  __Pyx_GIVEREF(__pyx_n_s_m_line);
  __Pyx_INCREF(__pyx_n_s_x0_wall);
  PyList_SET_ITEM(__pyx_t_3, 30, __pyx_n_s_x0_wall);
  __Pyx_GIVEREF(__pyx_n_s_x0_wall);
  __Pyx_INCREF(__pyx_n_s_y0_wall);
  PyList_SET_ITEM(__pyx_t_3, 31, __pyx_n_s_y0_wall);
  __Pyx_GIVEREF(__pyx_n_s_y0_wall);
  __Pyx_INCREF(__pyx_n_s_r_wall);
  PyList_SET_ITEM(__pyx_t_3, 32, __pyx_n_s_r_wall);
  __Pyx_GIVEREF(__pyx_n_s_r_wall);
  __Pyx_INCREF(__pyx_n_s_delta_radial);
  PyList_SET_ITEM(__pyx_t_3, 33, __pyx_n_s_delta_radial);
  __Pyx_GIVEREF(__pyx_n_s_delta_radial);
  __Pyx_INCREF(__pyx_n_s_delta_flank);
  PyList_SET_ITEM(__pyx_t_3, 34, __pyx_n_s_delta_flank);
  __Pyx_GIVEREF(__pyx_n_s_delta_flank);
  __Pyx_INCREF(__pyx_n_s_phi_ie_offset);
  PyList_SET_ITEM(__pyx_t_3, 35, __pyx_n_s_phi_ie_offset);
  __Pyx_GIVEREF(__pyx_n_s_phi_ie_offset);
  __Pyx_INCREF(__pyx_n_s_delta_suction_offset);
  PyList_SET_ITEM(__pyx_t_3, 36, __pyx_n_s_delta_suction_offset);
  __Pyx_GIVEREF(__pyx_n_s_delta_suction_offset);
  __Pyx_INCREF(__pyx_n_s_cx_scroll);
  PyList_SET_ITEM(__pyx_t_3, 37, __pyx_n_s_cx_scroll);
  __Pyx_GIVEREF(__pyx_n_s_cx_scroll);
  __Pyx_INCREF(__pyx_n_s_cy_scroll);
  PyList_SET_ITEM(__pyx_t_3, 38, __pyx_n_s_cy_scroll);
  __Pyx_GIVEREF(__pyx_n_s_cy_scroll);
  __Pyx_INCREF(__pyx_n_s_V_scroll);
  PyList_SET_ITEM(__pyx_t_3, 39, __pyx_n_s_V_scroll);
  __Pyx_GIVEREF(__pyx_n_s_V_scroll);
  __Pyx_INCREF(__pyx_n_s_Vremove);
  PyList_SET_ITEM(__pyx_t_3, 40, __pyx_n_s_Vremove);
  __Pyx_GIVEREF(__pyx_n_s_Vremove);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_geoValsvarlist, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":215
 *                 'cx_scroll','cy_scroll','V_scroll','Vremove']
 * 
 * def rebuild_geoVals(d):             # <<<<<<<<<<<<<<
 *     geo = geoVals()
 *     for atr in geoValsvarlist:
 */
  __pyx_t_3 = PyCFunction_NewEx(&__pyx_mdef_5PDSim_6scroll_17common_scroll_geo_19rebuild_geoVals, NULL, __pyx_n_s_PDSim_scroll_common_scroll_geo); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_rebuild_geoVals, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":287
 *                 )
 * 
 * def polyarea(x,y):             # <<<<<<<<<<<<<<
 *     N=len(x)
 *     area = 0.0
 */
  __pyx_t_3 = PyCFunction_NewEx(&__pyx_mdef_5PDSim_6scroll_17common_scroll_geo_21polyarea, NULL, __pyx_n_s_PDSim_scroll_common_scroll_geo); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_polyarea, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":295
 *     return area/2.0
 * 
 * def polycentroid(xi,yi):             # <<<<<<<<<<<<<<
 *     # Add additional element if needed to close polygon
 *     if not xi[0]==xi[-1] or not yi[0]==yi[-1]:
 */
  __pyx_t_3 = PyCFunction_NewEx(&__pyx_mdef_5PDSim_6scroll_17common_scroll_geo_23polycentroid, NULL, __pyx_n_s_PDSim_scroll_common_scroll_geo); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_polycentroid, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "PDSim\scroll\common_scroll_geo.pyx":1
 * from __future__ import division             # <<<<<<<<<<<<<<
 * cimport cython
 * import cython
 */
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "..\..\..\..\..\Python27\lib\site-packages\Cython\Includes\numpy\__init__.pxd":979
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init PDSim.scroll.common_scroll_geo", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init PDSim.scroll.common_scroll_geo");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

#if CYTHON_PROFILE
static int __Pyx_TraceSetupAndCall(PyCodeObject** code,
                                   PyFrameObject** frame,
                                   const char *funcname,
                                   const char *srcfile,
                                   int firstlineno) {
    int retval;
    PyThreadState* tstate = PyThreadState_GET();
    if (*frame == NULL || !CYTHON_PROFILE_REUSE_FRAME) {
        if (*code == NULL) {
            *code = __Pyx_createFrameCodeObject(funcname, srcfile, firstlineno);
            if (*code == NULL) return 0;
        }
        *frame = PyFrame_New(
            tstate,                          /*PyThreadState *tstate*/
            *code,                           /*PyCodeObject *code*/
            __pyx_d,                  /*PyObject *globals*/
            0                                /*PyObject *locals*/
        );
        if (*frame == NULL) return 0;
        if (CYTHON_TRACE && (*frame)->f_trace == NULL) {
            Py_INCREF(Py_None);
            (*frame)->f_trace = Py_None;
        }
#if PY_VERSION_HEX < 0x030400B1
    } else {
        (*frame)->f_tstate = tstate;
#endif
    }
    (*frame)->f_lineno = firstlineno;
    retval = 1;
    tstate->tracing++;
    tstate->use_tracing = 0;
    #if CYTHON_TRACE
    if (tstate->c_tracefunc)
        retval = tstate->c_tracefunc(tstate->c_traceobj, *frame, PyTrace_CALL, NULL) == 0;
    if (retval && tstate->c_profilefunc)
    #endif
        retval = tstate->c_profilefunc(tstate->c_profileobj, *frame, PyTrace_CALL, NULL) == 0;
    tstate->use_tracing = (tstate->c_profilefunc ||
                           (CYTHON_TRACE && tstate->c_tracefunc));
    tstate->tracing--;
    return tstate->use_tracing && retval;
}
static PyCodeObject *__Pyx_createFrameCodeObject(const char *funcname, const char *srcfile, int firstlineno) {
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    PyCodeObject *py_code = 0;
    #if PY_MAJOR_VERSION < 3
    py_funcname = PyString_FromString(funcname);
    py_srcfile = PyString_FromString(srcfile);
    #else
    py_funcname = PyUnicode_FromString(funcname);
    py_srcfile = PyUnicode_FromString(srcfile);
    #endif
    if (!py_funcname | !py_srcfile) goto bad;
    py_code = PyCode_New(
        0,
        #if PY_MAJOR_VERSION >= 3
        0,
        #endif
        0,
        0,
        0,
        __pyx_empty_bytes,     /*PyObject *code,*/
        __pyx_empty_tuple,     /*PyObject *consts,*/
        __pyx_empty_tuple,     /*PyObject *names,*/
        __pyx_empty_tuple,     /*PyObject *varnames,*/
        __pyx_empty_tuple,     /*PyObject *freevars,*/
        __pyx_empty_tuple,     /*PyObject *cellvars,*/
        py_srcfile,       /*PyObject *filename,*/
        py_funcname,      /*PyObject *name,*/
        firstlineno,
        __pyx_empty_bytes      /*PyObject *lnotab*/
    );
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return py_code;
}
#endif

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyList_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyTuple_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (PyErr_ExceptionMatches(PyExc_OverflowError))
                        PyErr_Clear();
                    else
                        return NULL;
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                if (PyObject_IsSubclass(instance_class, type)) {
                    type = instance_class;
                } else {
                    instance_class = NULL;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(tmp_type, tmp_value, tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static CYTHON_INLINE int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v) {
    int r;
    if (!j) return -1;
    r = PyObject_SetItem(o, j, v);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v,
                                               int is_list, int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = (!wraparound) ? i : ((likely(i >= 0)) ? i : i + PyList_GET_SIZE(o));
        if ((!boundscheck) || likely((n >= 0) & (n < PyList_GET_SIZE(o)))) {
            PyObject* old = PyList_GET_ITEM(o, n);
            Py_INCREF(v);
            PyList_SET_ITEM(o, n, v);
            Py_DECREF(old);
            return 1;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_ass_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (PyErr_ExceptionMatches(PyExc_OverflowError))
                        PyErr_Clear();
                    else
                        return -1;
                }
            }
            return m->sq_ass_item(o, i, v);
        }
    }
#else
#if CYTHON_COMPILING_IN_PYPY
    if (is_list || (PySequence_Check(o) && !PyDict_Check(o))) {
#else
    if (is_list || PySequence_Check(o)) {
#endif
        return PySequence_SetItem(o, i, v);
    }
#endif
    return __Pyx_SetItemInt_Generic(o, PyInt_FromSsize_t(i), v);
}

static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(exc_type == PyExc_StopIteration) || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject* args = PyTuple_Pack(1, arg);
    return (likely(args)) ? __Pyx_PyObject_Call(func, args, NULL) : NULL;
}
#endif

static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method, *result = NULL;
    method = __Pyx_PyObject_GetAttrStr(obj, method_name);
    if (unlikely(!method)) goto bad;
#if CYTHON_COMPILING_IN_CPYTHON
    if (likely(PyMethod_Check(method))) {
        PyObject *self = PyMethod_GET_SELF(method);
        if (likely(self)) {
            PyObject *function = PyMethod_GET_FUNCTION(method);
            result = __Pyx_PyObject_CallOneArg(function, self);
            Py_DECREF(method);
            return result;
        }
    }
#endif
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

static CYTHON_INLINE int __Pyx_unpack_tuple2(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
                                             int is_tuple, int has_known_size, int decref_tuple) {
    Py_ssize_t index;
    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
    if (!is_tuple && unlikely(!PyTuple_Check(tuple))) {
        iternextfunc iternext;
        iter = PyObject_GetIter(tuple);
        if (unlikely(!iter)) goto bad;
        if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
        iternext = Py_TYPE(iter)->tp_iternext;
        value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
        value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
        if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
        Py_DECREF(iter);
    } else {
        if (!has_known_size && unlikely(PyTuple_GET_SIZE(tuple) != 2)) {
            __Pyx_UnpackTupleError(tuple, 2);
            goto bad;
        }
#if CYTHON_COMPILING_IN_PYPY
        value1 = PySequence_ITEM(tuple, 0);
        if (unlikely(!value1)) goto bad;
        value2 = PySequence_ITEM(tuple, 1);
        if (unlikely(!value2)) goto bad;
#else
        value1 = PyTuple_GET_ITEM(tuple, 0);
        value2 = PyTuple_GET_ITEM(tuple, 1);
        Py_INCREF(value1);
        Py_INCREF(value2);
#endif
        if (decref_tuple) { Py_DECREF(tuple); }
    }
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
unpacking_failed:
    if (!has_known_size && __Pyx_IterFinish() == 0)
        __Pyx_RaiseNeedMoreValuesError(index);
bad:
    Py_XDECREF(iter);
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
}

static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
    *p_source_is_dict = is_dict;
#if !CYTHON_COMPILING_IN_PYPY
    if (is_dict) {
        *p_orig_length = PyDict_Size(iterable);
        Py_INCREF(iterable);
        return iterable;
    }
#endif
    *p_orig_length = 0;
    if (method_name) {
        PyObject* iter;
        iterable = __Pyx_PyObject_CallMethod0(iterable, method_name);
        if (!iterable)
            return NULL;
#if !CYTHON_COMPILING_IN_PYPY
        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
            return iterable;
#endif
        iter = PyObject_GetIter(iterable);
        Py_DECREF(iterable);
        return iter;
    }
    return PyObject_GetIter(iterable);
}
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* iter_obj, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
    PyObject* next_item;
#if !CYTHON_COMPILING_IN_PYPY
    if (source_is_dict) {
        PyObject *key, *value;
        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
            return -1;
        }
        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
            return 0;
        }
        if (pitem) {
            PyObject* tuple = PyTuple_New(2);
            if (unlikely(!tuple)) {
                return -1;
            }
            Py_INCREF(key);
            Py_INCREF(value);
            PyTuple_SET_ITEM(tuple, 0, key);
            PyTuple_SET_ITEM(tuple, 1, value);
            *pitem = tuple;
        } else {
            if (pkey) {
                Py_INCREF(key);
                *pkey = key;
            }
            if (pvalue) {
                Py_INCREF(value);
                *pvalue = value;
            }
        }
        return 1;
    } else if (PyTuple_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyTuple_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else if (PyList_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyList_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else
#endif
    {
        next_item = PyIter_Next(iter_obj);
        if (unlikely(!next_item)) {
            return __Pyx_IterFinish();
        }
    }
    if (pitem) {
        *pitem = next_item;
    } else if (pkey && pvalue) {
        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
            return -1;
    } else if (pkey) {
        *pkey = next_item;
    } else {
        *pvalue = next_item;
    }
    return 1;
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_COMPILING_IN_CPYTHON
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
}

static CYTHON_INLINE int __Pyx_IsLittleEndian(void) {
  unsigned int n = 1;
  return *(unsigned char*)(&n) != 0;
}
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type) {
  stack[0].field = &ctx->root;
  stack[0].parent_offset = 0;
  ctx->root.type = type;
  ctx->root.name = "buffer dtype";
  ctx->root.offset = 0;
  ctx->head = stack;
  ctx->head->field = &ctx->root;
  ctx->fmt_offset = 0;
  ctx->head->parent_offset = 0;
  ctx->new_packmode = '@';
  ctx->enc_packmode = '@';
  ctx->new_count = 1;
  ctx->enc_count = 0;
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  ctx->is_valid_array = 0;
  ctx->struct_alignment = 0;
  while (type->typegroup == 'S') {
    ++ctx->head;
    ctx->head->field = type->fields;
    ctx->head->parent_offset = 0;
    type = type->fields->type;
  }
}
static int __Pyx_BufFmt_ParseNumber(const char** ts) {
    int count;
    const char* t = *ts;
    if (*t < '0' || *t > '9') {
      return -1;
    } else {
        count = *t++ - '0';
        while (*t >= '0' && *t < '9') {
            count *= 10;
            count += *t++ - '0';
        }
    }
    *ts = t;
    return count;
}
static int __Pyx_BufFmt_ExpectNumber(const char **ts) {
    int number = __Pyx_BufFmt_ParseNumber(ts);
    if (number == -1)
        PyErr_Format(PyExc_ValueError,\
                     "Does not understand character buffer dtype format string ('%c')", **ts);
    return number;
}
static void __Pyx_BufFmt_RaiseUnexpectedChar(char ch) {
  PyErr_Format(PyExc_ValueError,
               "Unexpected format string character: '%c'", ch);
}
static const char* __Pyx_BufFmt_DescribeTypeChar(char ch, int is_complex) {
  switch (ch) {
    case 'c': return "'char'";
    case 'b': return "'signed char'";
    case 'B': return "'unsigned char'";
    case 'h': return "'short'";
    case 'H': return "'unsigned short'";
    case 'i': return "'int'";
    case 'I': return "'unsigned int'";
    case 'l': return "'long'";
    case 'L': return "'unsigned long'";
    case 'q': return "'long long'";
    case 'Q': return "'unsigned long long'";
    case 'f': return (is_complex ? "'complex float'" : "'float'");
    case 'd': return (is_complex ? "'complex double'" : "'double'");
    case 'g': return (is_complex ? "'complex long double'" : "'long double'");
    case 'T': return "a struct";
    case 'O': return "Python object";
    case 'P': return "a pointer";
    case 's': case 'p': return "a string";
    case 0: return "end";
    default: return "unparseable format string";
  }
}
static size_t __Pyx_BufFmt_TypeCharToStandardSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return 2;
    case 'i': case 'I': case 'l': case 'L': return 4;
    case 'q': case 'Q': return 8;
    case 'f': return (is_complex ? 8 : 4);
    case 'd': return (is_complex ? 16 : 8);
    case 'g': {
      PyErr_SetString(PyExc_ValueError, "Python does not define a standard format string size for long double ('g')..");
      return 0;
    }
    case 'O': case 'P': return sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static size_t __Pyx_BufFmt_TypeCharToNativeSize(char ch, int is_complex) {
  switch (ch) {
    case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(short);
    case 'i': case 'I': return sizeof(int);
    case 'l': case 'L': return sizeof(long);
    #ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(PY_LONG_LONG);
    #endif
    case 'f': return sizeof(float) * (is_complex ? 2 : 1);
    case 'd': return sizeof(double) * (is_complex ? 2 : 1);
    case 'g': return sizeof(long double) * (is_complex ? 2 : 1);
    case 'O': case 'P': return sizeof(void*);
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
typedef struct { char c; short x; } __Pyx_st_short;
typedef struct { char c; int x; } __Pyx_st_int;
typedef struct { char c; long x; } __Pyx_st_long;
typedef struct { char c; float x; } __Pyx_st_float;
typedef struct { char c; double x; } __Pyx_st_double;
typedef struct { char c; long double x; } __Pyx_st_longdouble;
typedef struct { char c; void *x; } __Pyx_st_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { char c; PY_LONG_LONG x; } __Pyx_st_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToAlignment(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_st_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_st_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_st_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_st_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_st_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_st_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_st_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_st_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
/* These are for computing the padding at the end of the struct to align
   on the first member of the struct. This will probably the same as above,
   but we don't have any guarantees.
 */
typedef struct { short x; char c; } __Pyx_pad_short;
typedef struct { int x; char c; } __Pyx_pad_int;
typedef struct { long x; char c; } __Pyx_pad_long;
typedef struct { float x; char c; } __Pyx_pad_float;
typedef struct { double x; char c; } __Pyx_pad_double;
typedef struct { long double x; char c; } __Pyx_pad_longdouble;
typedef struct { void *x; char c; } __Pyx_pad_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { PY_LONG_LONG x; char c; } __Pyx_pad_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToPadding(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_pad_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_pad_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_pad_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_pad_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_pad_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_pad_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_pad_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_pad_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static char __Pyx_BufFmt_TypeCharToGroup(char ch, int is_complex) {
  switch (ch) {
    case 'c':
        return 'H';
    case 'b': case 'h': case 'i':
    case 'l': case 'q': case 's': case 'p':
        return 'I';
    case 'B': case 'H': case 'I': case 'L': case 'Q':
        return 'U';
    case 'f': case 'd': case 'g':
        return (is_complex ? 'C' : 'R');
    case 'O':
        return 'O';
    case 'P':
        return 'P';
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
static void __Pyx_BufFmt_RaiseExpected(__Pyx_BufFmt_Context* ctx) {
  if (ctx->head == NULL || ctx->head->field == &ctx->root) {
    const char* expected;
    const char* quote;
    if (ctx->head == NULL) {
      expected = "end";
      quote = "";
    } else {
      expected = ctx->head->field->type->name;
      quote = "'";
    }
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected %s%s%s but got %s",
                 quote, expected, quote,
                 __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex));
  } else {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_StructField* parent = (ctx->head - 1)->field;
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected '%s' but got %s in '%s.%s'",
                 field->type->name, __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex),
                 parent->type->name, field->name);
  }
}
static int __Pyx_BufFmt_ProcessTypeChunk(__Pyx_BufFmt_Context* ctx) {
  char group;
  size_t size, offset, arraysize = 1;
  if (ctx->enc_type == 0) return 0;
  if (ctx->head->field->type->arraysize[0]) {
    int i, ndim = 0;
    if (ctx->enc_type == 's' || ctx->enc_type == 'p') {
        ctx->is_valid_array = ctx->head->field->type->ndim == 1;
        ndim = 1;
        if (ctx->enc_count != ctx->head->field->type->arraysize[0]) {
            PyErr_Format(PyExc_ValueError,
                         "Expected a dimension of size %zu, got %zu",
                         ctx->head->field->type->arraysize[0], ctx->enc_count);
            return -1;
        }
    }
    if (!ctx->is_valid_array) {
      PyErr_Format(PyExc_ValueError, "Expected %d dimensions, got %d",
                   ctx->head->field->type->ndim, ndim);
      return -1;
    }
    for (i = 0; i < ctx->head->field->type->ndim; i++) {
      arraysize *= ctx->head->field->type->arraysize[i];
    }
    ctx->is_valid_array = 0;
    ctx->enc_count = 1;
  }
  group = __Pyx_BufFmt_TypeCharToGroup(ctx->enc_type, ctx->is_complex);
  do {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_TypeInfo* type = field->type;
    if (ctx->enc_packmode == '@' || ctx->enc_packmode == '^') {
      size = __Pyx_BufFmt_TypeCharToNativeSize(ctx->enc_type, ctx->is_complex);
    } else {
      size = __Pyx_BufFmt_TypeCharToStandardSize(ctx->enc_type, ctx->is_complex);
    }
    if (ctx->enc_packmode == '@') {
      size_t align_at = __Pyx_BufFmt_TypeCharToAlignment(ctx->enc_type, ctx->is_complex);
      size_t align_mod_offset;
      if (align_at == 0) return -1;
      align_mod_offset = ctx->fmt_offset % align_at;
      if (align_mod_offset > 0) ctx->fmt_offset += align_at - align_mod_offset;
      if (ctx->struct_alignment == 0)
          ctx->struct_alignment = __Pyx_BufFmt_TypeCharToPadding(ctx->enc_type,
                                                                 ctx->is_complex);
    }
    if (type->size != size || type->typegroup != group) {
      if (type->typegroup == 'C' && type->fields != NULL) {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        ++ctx->head;
        ctx->head->field = type->fields;
        ctx->head->parent_offset = parent_offset;
        continue;
      }
      if ((type->typegroup == 'H' || group == 'H') && type->size == size) {
      } else {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
      }
    }
    offset = ctx->head->parent_offset + field->offset;
    if (ctx->fmt_offset != offset) {
      PyErr_Format(PyExc_ValueError,
                   "Buffer dtype mismatch; next field is at offset %" CYTHON_FORMAT_SSIZE_T "d but %" CYTHON_FORMAT_SSIZE_T "d expected",
                   (Py_ssize_t)ctx->fmt_offset, (Py_ssize_t)offset);
      return -1;
    }
    ctx->fmt_offset += size;
    if (arraysize)
      ctx->fmt_offset += (arraysize - 1) * size;
    --ctx->enc_count;
    while (1) {
      if (field == &ctx->root) {
        ctx->head = NULL;
        if (ctx->enc_count != 0) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
        }
        break;
      }
      ctx->head->field = ++field;
      if (field->type == NULL) {
        --ctx->head;
        field = ctx->head->field;
        continue;
      } else if (field->type->typegroup == 'S') {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        if (field->type->fields->type == NULL) continue;
        field = field->type->fields;
        ++ctx->head;
        ctx->head->field = field;
        ctx->head->parent_offset = parent_offset;
        break;
      } else {
        break;
      }
    }
  } while (ctx->enc_count);
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  return 0;
}
static CYTHON_INLINE PyObject *
__pyx_buffmt_parse_array(__Pyx_BufFmt_Context* ctx, const char** tsp)
{
    const char *ts = *tsp;
    int i = 0, number;
    int ndim = ctx->head->field->type->ndim;
;
    ++ts;
    if (ctx->new_count != 1) {
        PyErr_SetString(PyExc_ValueError,
                        "Cannot handle repeated arrays in format string");
        return NULL;
    }
    if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
    while (*ts && *ts != ')') {
        switch (*ts) {
            case ' ': case '\f': case '\r': case '\n': case '\t': case '\v':  continue;
            default:  break;
        }
        number = __Pyx_BufFmt_ExpectNumber(&ts);
        if (number == -1) return NULL;
        if (i < ndim && (size_t) number != ctx->head->field->type->arraysize[i])
            return PyErr_Format(PyExc_ValueError,
                        "Expected a dimension of size %zu, got %d",
                        ctx->head->field->type->arraysize[i], number);
        if (*ts != ',' && *ts != ')')
            return PyErr_Format(PyExc_ValueError,
                                "Expected a comma in format string, got '%c'", *ts);
        if (*ts == ',') ts++;
        i++;
    }
    if (i != ndim)
        return PyErr_Format(PyExc_ValueError, "Expected %d dimension(s), got %d",
                            ctx->head->field->type->ndim, i);
    if (!*ts) {
        PyErr_SetString(PyExc_ValueError,
                        "Unexpected end of format string, expected ')'");
        return NULL;
    }
    ctx->is_valid_array = 1;
    ctx->new_count = 1;
    *tsp = ++ts;
    return Py_None;
}
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts) {
  int got_Z = 0;
  while (1) {
    switch(*ts) {
      case 0:
        if (ctx->enc_type != 0 && ctx->head == NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        if (ctx->head != NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        return ts;
      case ' ':
      case '\r':
      case '\n':
        ++ts;
        break;
      case '<':
        if (!__Pyx_IsLittleEndian()) {
          PyErr_SetString(PyExc_ValueError, "Little-endian buffer not supported on big-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '>':
      case '!':
        if (__Pyx_IsLittleEndian()) {
          PyErr_SetString(PyExc_ValueError, "Big-endian buffer not supported on little-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '=':
      case '@':
      case '^':
        ctx->new_packmode = *ts++;
        break;
      case 'T':
        {
          const char* ts_after_sub;
          size_t i, struct_count = ctx->new_count;
          size_t struct_alignment = ctx->struct_alignment;
          ctx->new_count = 1;
          ++ts;
          if (*ts != '{') {
            PyErr_SetString(PyExc_ValueError, "Buffer acquisition: Expected '{' after 'T'");
            return NULL;
          }
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          ctx->enc_count = 0;
          ctx->struct_alignment = 0;
          ++ts;
          ts_after_sub = ts;
          for (i = 0; i != struct_count; ++i) {
            ts_after_sub = __Pyx_BufFmt_CheckString(ctx, ts);
            if (!ts_after_sub) return NULL;
          }
          ts = ts_after_sub;
          if (struct_alignment) ctx->struct_alignment = struct_alignment;
        }
        break;
      case '}':
        {
          size_t alignment = ctx->struct_alignment;
          ++ts;
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          if (alignment && ctx->fmt_offset % alignment) {
            ctx->fmt_offset += alignment - (ctx->fmt_offset % alignment);
          }
        }
        return ts;
      case 'x':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->fmt_offset += ctx->new_count;
        ctx->new_count = 1;
        ctx->enc_count = 0;
        ctx->enc_type = 0;
        ctx->enc_packmode = ctx->new_packmode;
        ++ts;
        break;
      case 'Z':
        got_Z = 1;
        ++ts;
        if (*ts != 'f' && *ts != 'd' && *ts != 'g') {
          __Pyx_BufFmt_RaiseUnexpectedChar('Z');
          return NULL;
        }
      case 'c': case 'b': case 'B': case 'h': case 'H': case 'i': case 'I':
      case 'l': case 'L': case 'q': case 'Q':
      case 'f': case 'd': case 'g':
      case 'O': case 'p':
        if (ctx->enc_type == *ts && got_Z == ctx->is_complex &&
            ctx->enc_packmode == ctx->new_packmode) {
          ctx->enc_count += ctx->new_count;
          ctx->new_count = 1;
          got_Z = 0;
          ++ts;
          break;
        }
      case 's':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->enc_count = ctx->new_count;
        ctx->enc_packmode = ctx->new_packmode;
        ctx->enc_type = *ts;
        ctx->is_complex = got_Z;
        ++ts;
        ctx->new_count = 1;
        got_Z = 0;
        break;
      case ':':
        ++ts;
        while(*ts != ':') ++ts;
        ++ts;
        break;
      case '(':
        if (!__pyx_buffmt_parse_array(ctx, &ts)) return NULL;
        break;
      default:
        {
          int number = __Pyx_BufFmt_ExpectNumber(&ts);
          if (number == -1) return NULL;
          ctx->new_count = (size_t)number;
        }
    }
  }
}
static CYTHON_INLINE void __Pyx_ZeroBuffer(Py_buffer* buf) {
  buf->buf = NULL;
  buf->obj = NULL;
  buf->strides = __Pyx_zeros;
  buf->shape = __Pyx_zeros;
  buf->suboffsets = __Pyx_minusones;
}
static CYTHON_INLINE int __Pyx_GetBufferAndValidate(
        Py_buffer* buf, PyObject* obj,  __Pyx_TypeInfo* dtype, int flags,
        int nd, int cast, __Pyx_BufFmt_StackElem* stack)
{
  if (obj == Py_None || obj == NULL) {
    __Pyx_ZeroBuffer(buf);
    return 0;
  }
  buf->buf = NULL;
  if (__Pyx_GetBuffer(obj, buf, flags) == -1) goto fail;
  if (buf->ndim != nd) {
    PyErr_Format(PyExc_ValueError,
                 "Buffer has wrong number of dimensions (expected %d, got %d)",
                 nd, buf->ndim);
    goto fail;
  }
  if (!cast) {
    __Pyx_BufFmt_Context ctx;
    __Pyx_BufFmt_Init(&ctx, stack, dtype);
    if (!__Pyx_BufFmt_CheckString(&ctx, buf->format)) goto fail;
  }
  if ((unsigned)buf->itemsize != dtype->size) {
    PyErr_Format(PyExc_ValueError,
      "Item size of buffer (%" CYTHON_FORMAT_SSIZE_T "d byte%s) does not match size of '%s' (%" CYTHON_FORMAT_SSIZE_T "d byte%s)",
      buf->itemsize, (buf->itemsize > 1) ? "s" : "",
      dtype->name, (Py_ssize_t)dtype->size, (dtype->size > 1) ? "s" : "");
    goto fail;
  }
  if (buf->suboffsets == NULL) buf->suboffsets = __Pyx_minusones;
  return 0;
fail:;
  __Pyx_ZeroBuffer(buf);
  return -1;
}
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {
  if (info->buf == NULL) return;
  if (info->suboffsets == __Pyx_minusones) info->suboffsets = NULL;
  __Pyx_ReleaseBuffer(info);
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)
{
    if (unlikely(op->func_doc == NULL)) {
        if (op->func.m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp = op->func_doc;
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    op->func_doc = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = op->func_name;
    Py_INCREF(value);
    op->func_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op)
{
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = op->func_qualname;
    Py_INCREF(value);
    op->func_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)
{
    PyObject *self;
    self = m->func_closure;
    if (self == NULL)
        self = Py_None;
    Py_INCREF(self);
    return self;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    tmp = op->func_dict;
    Py_INCREF(value);
    op->func_dict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op)
{
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op)
{
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    Py_DECREF(res);
    return 0;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyTuple_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_tuple;
    op->defaults_tuple = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_tuple;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_kwdict;
    op->defaults_kwdict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_kwdict;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value || value == Py_None) {
        value = NULL;
    } else if (!PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    tmp = op->func_annotations;
    op->func_annotations = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op) {
    PyObject* result = op->func_annotations;
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(__pyx_CyFunctionObject, func.m_module), PY_WRITE_RESTRICTED, 0},
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(m->func.m_ml->ml_name);
#else
    return PyString_FromString(m->func.m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func.m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_New(PyTypeObject *type, PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    __pyx_CyFunctionObject *op = PyObject_GC_New(__pyx_CyFunctionObject, type);
    if (op == NULL)
        return NULL;
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
    op->func.m_ml = ml;
    op->func.m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    op->func.m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
    op->func_classobj = NULL;
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    PyObject_GC_Track(op);
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(m->func.m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
    Py_CLEAR(m->func_classobj);
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyMem_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    PyObject_GC_Del(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(m->func.m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
    Py_VISIT(m->func_classobj);
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)
{
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {
        Py_INCREF(func);
        return func;
    }
    if (m->flags & __Pyx_CYFUNCTION_CLASSMETHOD) {
        if (type == NULL)
            type = (PyObject *)(Py_TYPE(obj));
        return __Pyx_PyMethod_New(func, type, (PyObject *)(Py_TYPE(type)));
    }
    if (obj == Py_None)
        obj = NULL;
    return __Pyx_PyMethod_New(func, obj, type);
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
#if CYTHON_COMPILING_IN_PYPY
static PyObject * __Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    Py_ssize_t size;
    switch (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST)) {
    case METH_VARARGS:
        if (likely(kw == NULL) || PyDict_Size(kw) == 0)
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL) || PyDict_Size(kw) == 0) {
            size = PyTuple_GET_SIZE(arg);
            if (size == 0)
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL) || PyDict_Size(kw) == 0) {
            size = PyTuple_GET_SIZE(arg);
            if (size == 1)
                return (*meth)(self, PyTuple_GET_ITEM(arg, 0));
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags in "
                        "__Pyx_CyFunction_Call. METH_OLDARGS is no "
                        "longer supported!");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
#else
static PyObject * __Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
	return PyCFunction_Call(func, arg, kw);
}
#endif
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
    0,
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_Call,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_CyFunction_descr_get,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
};
static int __Pyx_CyFunction_init(void) {
#if !CYTHON_COMPILING_IN_PYPY
    __pyx_CyFunctionType_type.tp_call = PyCFunction_Call;
#endif
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
    if (__pyx_CyFunctionType == NULL) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyMem_Malloc(size);
    if (!m->defaults)
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

static PyObject *
__pyx_FusedFunction_New(PyTypeObject *type, PyMethodDef *ml, int flags,
                        PyObject *qualname, PyObject *self,
                        PyObject *module, PyObject *globals,
                        PyObject *code)
{
    __pyx_FusedFunctionObject *fusedfunc =
        (__pyx_FusedFunctionObject *) __Pyx_CyFunction_New(type, ml, flags, qualname,
                                                           self, module, globals, code);
    if (!fusedfunc)
        return NULL;
    fusedfunc->__signatures__ = NULL;
    fusedfunc->type = NULL;
    fusedfunc->self = NULL;
    return (PyObject *) fusedfunc;
}
static void __pyx_FusedFunction_dealloc(__pyx_FusedFunctionObject *self) {
    __pyx_FusedFunction_clear(self);
    __pyx_FusedFunctionType->tp_free((PyObject *) self);
}
static int
__pyx_FusedFunction_traverse(__pyx_FusedFunctionObject *self,
                             visitproc visit,
                             void *arg)
{
    Py_VISIT(self->self);
    Py_VISIT(self->type);
    Py_VISIT(self->__signatures__);
    return __Pyx_CyFunction_traverse((__pyx_CyFunctionObject *) self, visit, arg);
}
static int
__pyx_FusedFunction_clear(__pyx_FusedFunctionObject *self)
{
    Py_CLEAR(self->self);
    Py_CLEAR(self->type);
    Py_CLEAR(self->__signatures__);
    return __Pyx_CyFunction_clear((__pyx_CyFunctionObject *) self);
}
static PyObject *
__pyx_FusedFunction_descr_get(PyObject *self, PyObject *obj, PyObject *type)
{
    __pyx_FusedFunctionObject *func, *meth;
    func = (__pyx_FusedFunctionObject *) self;
    if (func->self || func->func.flags & __Pyx_CYFUNCTION_STATICMETHOD) {
        Py_INCREF(self);
        return self;
    }
    if (obj == Py_None)
        obj = NULL;
    meth = (__pyx_FusedFunctionObject *) __pyx_FusedFunction_NewEx(
                    ((PyCFunctionObject *) func)->m_ml,
                    ((__pyx_CyFunctionObject *) func)->flags,
                    ((__pyx_CyFunctionObject *) func)->func_qualname,
                    ((__pyx_CyFunctionObject *) func)->func_closure,
                    ((PyCFunctionObject *) func)->m_module,
                    ((__pyx_CyFunctionObject *) func)->func_globals,
                    ((__pyx_CyFunctionObject *) func)->func_code);
    if (!meth)
        return NULL;
    Py_XINCREF(func->func.func_classobj);
    meth->func.func_classobj = func->func.func_classobj;
    Py_XINCREF(func->__signatures__);
    meth->__signatures__ = func->__signatures__;
    Py_XINCREF(type);
    meth->type = type;
    Py_XINCREF(func->func.defaults_tuple);
    meth->func.defaults_tuple = func->func.defaults_tuple;
    if (func->func.flags & __Pyx_CYFUNCTION_CLASSMETHOD)
        obj = type;
    Py_XINCREF(obj);
    meth->self = obj;
    return (PyObject *) meth;
}
static PyObject *
_obj_to_str(PyObject *obj)
{
    if (PyType_Check(obj))
        return PyObject_GetAttr(obj, __pyx_n_s_name);
    else
        return PyObject_Str(obj);
}
static PyObject *
__pyx_FusedFunction_getitem(__pyx_FusedFunctionObject *self, PyObject *idx)
{
    PyObject *signature = NULL;
    PyObject *unbound_result_func;
    PyObject *result_func = NULL;
    if (self->__signatures__ == NULL) {
        PyErr_SetString(PyExc_TypeError, "Function is not fused");
        return NULL;
    }
    if (PyTuple_Check(idx)) {
        PyObject *list = PyList_New(0);
        Py_ssize_t n = PyTuple_GET_SIZE(idx);
        PyObject *string = NULL;
        PyObject *sep = NULL;
        int i;
        if (!list)
            return NULL;
        for (i = 0; i < n; i++) {
            PyObject *item = PyTuple_GET_ITEM(idx, i);
            string = _obj_to_str(item);
            if (!string || PyList_Append(list, string) < 0)
                goto __pyx_err;
            Py_DECREF(string);
        }
        sep = PyUnicode_FromString("|");
        if (sep)
            signature = PyUnicode_Join(sep, list);
__pyx_err:
;
        Py_DECREF(list);
        Py_XDECREF(sep);
    } else {
        signature = _obj_to_str(idx);
    }
    if (!signature)
        return NULL;
    unbound_result_func = PyObject_GetItem(self->__signatures__, signature);
    if (unbound_result_func) {
        if (self->self || self->type) {
            __pyx_FusedFunctionObject *unbound = (__pyx_FusedFunctionObject *) unbound_result_func;
            Py_CLEAR(unbound->func.func_classobj);
            Py_XINCREF(self->func.func_classobj);
            unbound->func.func_classobj = self->func.func_classobj;
            result_func = __pyx_FusedFunction_descr_get(unbound_result_func,
                                                        self->self, self->type);
        } else {
            result_func = unbound_result_func;
            Py_INCREF(result_func);
        }
    }
    Py_DECREF(signature);
    Py_XDECREF(unbound_result_func);
    return result_func;
}
static PyObject *
__pyx_FusedFunction_callfunction(PyObject *func, PyObject *args, PyObject *kw)
{
     __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
    PyObject *result;
    int static_specialized = (cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD &&
                              !((__pyx_FusedFunctionObject *) func)->__signatures__);
    if (cyfunc->flags & __Pyx_CYFUNCTION_CCLASS && !static_specialized) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
        PyObject *m_self;
        argc = PyTuple_GET_SIZE(args);
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (!new_args)
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (!self)
            return NULL;
        m_self = cyfunc->func.m_self;
        cyfunc->func.m_self = self;
        result = __Pyx_CyFunction_Call(func, new_args, kw);
        cyfunc->func.m_self = m_self;
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
static PyObject *
__pyx_FusedFunction_call(PyObject *func, PyObject *args, PyObject *kw)
{
    __pyx_FusedFunctionObject *binding_func = (__pyx_FusedFunctionObject *) func;
    Py_ssize_t argc = PyTuple_GET_SIZE(args);
    PyObject *new_args = NULL;
    __pyx_FusedFunctionObject *new_func = NULL;
    PyObject *result = NULL;
    PyObject *self = NULL;
    int is_staticmethod = binding_func->func.flags & __Pyx_CYFUNCTION_STATICMETHOD;
    int is_classmethod = binding_func->func.flags & __Pyx_CYFUNCTION_CLASSMETHOD;
    if (binding_func->self) {
        Py_ssize_t i;
        new_args = PyTuple_New(argc + 1);
        if (!new_args)
            return NULL;
        self = binding_func->self;
        Py_INCREF(self);
        PyTuple_SET_ITEM(new_args, 0, self);
        for (i = 0; i < argc; i++) {
            PyObject *item = PyTuple_GET_ITEM(args, i);
            Py_INCREF(item);
            PyTuple_SET_ITEM(new_args, i + 1, item);
        }
        args = new_args;
    } else if (binding_func->type) {
        if (argc < 1) {
            PyErr_SetString(PyExc_TypeError, "Need at least one argument, 0 given.");
            return NULL;
        }
        self = PyTuple_GET_ITEM(args, 0);
    }
    if (self && !is_classmethod && !is_staticmethod &&
            !PyObject_IsInstance(self, binding_func->type)) {
        PyErr_Format(PyExc_TypeError,
                     "First argument should be of type %.200s, got %.200s.",
                     ((PyTypeObject *) binding_func->type)->tp_name,
                     self->ob_type->tp_name);
        goto __pyx_err;
    }
    if (binding_func->__signatures__) {
        PyObject *tup = PyTuple_Pack(4, binding_func->__signatures__, args,
                                        kw == NULL ? Py_None : kw,
                                        binding_func->func.defaults_tuple);
        if (!tup)
            goto __pyx_err;
        new_func = (__pyx_FusedFunctionObject *) __pyx_FusedFunction_callfunction(func, tup, NULL);
        Py_DECREF(tup);
        if (!new_func)
            goto __pyx_err;
        Py_XINCREF(binding_func->func.func_classobj);
        Py_CLEAR(new_func->func.func_classobj);
        new_func->func.func_classobj = binding_func->func.func_classobj;
        func = (PyObject *) new_func;
    }
    result = __pyx_FusedFunction_callfunction(func, args, kw);
__pyx_err:
    Py_XDECREF(new_args);
    Py_XDECREF((PyObject *) new_func);
    return result;
}
static PyMemberDef __pyx_FusedFunction_members[] = {
    {(char *) "__signatures__",
     T_OBJECT,
     offsetof(__pyx_FusedFunctionObject, __signatures__),
     READONLY,
     0},
    {0, 0, 0, 0, 0},
};
static PyMappingMethods __pyx_FusedFunction_mapping_methods = {
    0,
    (binaryfunc) __pyx_FusedFunction_getitem,
    0,
};
static PyTypeObject __pyx_FusedFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "fused_cython_function",
    sizeof(__pyx_FusedFunctionObject),
    0,
    (destructor) __pyx_FusedFunction_dealloc,
    0,
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    0,
    0,
    0,
    &__pyx_FusedFunction_mapping_methods,
    0,
    (ternaryfunc) __pyx_FusedFunction_call,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    0,
    (traverseproc) __pyx_FusedFunction_traverse,
    (inquiry) __pyx_FusedFunction_clear,
    0,
    0,
    0,
    0,
    0,
    __pyx_FusedFunction_members,
    __pyx_CyFunction_getsets,
    &__pyx_CyFunctionType_type,
    0,
    __pyx_FusedFunction_descr_get,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
};
static int __pyx_FusedFunction_init(void) {
    __pyx_FusedFunctionType = __Pyx_FetchCommonType(&__pyx_FusedFunctionType_type);
    if (__pyx_FusedFunctionType == NULL) {
        return -1;
    }
    return 0;
}

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {
    if (PyObject_CheckBuffer(obj)) return PyObject_GetBuffer(obj, view, flags);
        if (PyObject_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) return __pyx_pw_5numpy_7ndarray_1__getbuffer__(obj, view, flags);
    PyErr_Format(PyExc_TypeError, "'%.200s' does not have the buffer interface", Py_TYPE(obj)->tp_name);
    return -1;
}
static void __Pyx_ReleaseBuffer(Py_buffer *view) {
    PyObject *obj = view->obj;
    if (!obj) return;
    if (PyObject_CheckBuffer(obj)) {
        PyBuffer_Release(view);
        return;
    }
        if (PyObject_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) { __pyx_pw_5numpy_7ndarray_3__releasebuffer__(obj, view); return; }
    Py_DECREF(obj);
    view->obj = NULL;
}
#endif


                #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)       \
    {                                                                     \
        func_type value = func_value;                                     \
        if (sizeof(target_type) < sizeof(func_type)) {                    \
            if (unlikely(value != (func_type) (target_type) value)) {     \
                func_type zero = 0;                                       \
                if (is_unsigned && unlikely(value < zero))                \
                    goto raise_neg_overflow;                              \
                else                                                      \
                    goto raise_overflow;                                  \
            }                                                             \
        }                                                                 \
        return (target_type) value;                                       \
    }

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
 #endif
#endif

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(int, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(long, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static PyObject *__Pyx_GetStdout(void) {
    PyObject *f = PySys_GetObject((char *)"stdout");
    if (!f) {
        PyErr_SetString(PyExc_RuntimeError, "lost sys.stdout");
    }
    return f;
}
static int __Pyx_Print(PyObject* f, PyObject *arg_tuple, int newline) {
    int i;
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    for (i=0; i < PyTuple_GET_SIZE(arg_tuple); i++) {
        PyObject* v;
        if (PyFile_SoftSpace(f, 1)) {
            if (PyFile_WriteString(" ", f) < 0)
                goto error;
        }
        v = PyTuple_GET_ITEM(arg_tuple, i);
        if (PyFile_WriteObject(v, f, Py_PRINT_RAW) < 0)
            goto error;
        if (PyString_Check(v)) {
            char *s = PyString_AsString(v);
            Py_ssize_t len = PyString_Size(v);
            if (len > 0) {
                switch (s[len-1]) {
                    case ' ': break;
                    case '\f': case '\r': case '\n': case '\t': case '\v':
                        PyFile_SoftSpace(f, 0);
                        break;
                    default:  break;
                }
            }
        }
    }
    if (newline) {
        if (PyFile_WriteString("\n", f) < 0)
            goto error;
        PyFile_SoftSpace(f, 0);
    }
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
}
#else
static int __Pyx_Print(PyObject* stream, PyObject *arg_tuple, int newline) {
    PyObject* kwargs = 0;
    PyObject* result = 0;
    PyObject* end_string;
    if (unlikely(!__pyx_print)) {
        __pyx_print = PyObject_GetAttr(__pyx_b, __pyx_n_s_print);
        if (!__pyx_print)
            return -1;
    }
    if (stream) {
        kwargs = PyDict_New();
        if (unlikely(!kwargs))
            return -1;
        if (unlikely(PyDict_SetItem(kwargs, __pyx_n_s_file, stream) < 0))
            goto bad;
        if (!newline) {
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                goto bad;
            if (PyDict_SetItem(kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                goto bad;
            }
            Py_DECREF(end_string);
        }
    } else if (!newline) {
        if (unlikely(!__pyx_print_kwargs)) {
            __pyx_print_kwargs = PyDict_New();
            if (unlikely(!__pyx_print_kwargs))
                return -1;
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                return -1;
            if (PyDict_SetItem(__pyx_print_kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                return -1;
            }
            Py_DECREF(end_string);
        }
        kwargs = __pyx_print_kwargs;
    }
    result = PyObject_Call(__pyx_print, arg_tuple, kwargs);
    if (unlikely(kwargs) && (kwargs != __pyx_print_kwargs))
        Py_DECREF(kwargs);
    if (!result)
        return -1;
    Py_DECREF(result);
    return 0;
bad:
    if (kwargs != __pyx_print_kwargs)
        Py_XDECREF(kwargs);
    return -1;
}
#endif

#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static int __Pyx_PrintOne(PyObject* f, PyObject *o) {
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    if (PyFile_SoftSpace(f, 0)) {
        if (PyFile_WriteString(" ", f) < 0)
            goto error;
    }
    if (PyFile_WriteObject(o, f, Py_PRINT_RAW) < 0)
        goto error;
    if (PyFile_WriteString("\n", f) < 0)
        goto error;
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
    /* the line below is just to avoid C compiler
     * warnings about unused functions */
    return __Pyx_Print(f, NULL, 0);
}
#else
static int __Pyx_PrintOne(PyObject* stream, PyObject *o) {
    int res;
    PyObject* arg_tuple = PyTuple_Pack(1, o);
    if (unlikely(!arg_tuple))
        return -1;
    res = __Pyx_Print(stream, arg_tuple, 1);
    Py_DECREF(arg_tuple);
    return res;
}
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        float denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(a, a);
                    case 3:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, a);
                    case 4:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_absf(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        double denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(a, a);
                    case 3:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, a);
                    case 4:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_abs(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

static int __Pyx_ExportFunction(const char *name, void (*f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
    d = PyObject_GetAttrString(__pyx_m, (char *)"__pyx_capi__");
    if (!d) {
        PyErr_Clear();
        d = PyDict_New();
        if (!d)
            goto bad;
        Py_INCREF(d);
        if (PyModule_AddObject(__pyx_m, (char *)"__pyx_capi__", d) < 0)
            goto bad;
    }
    tmp.fp = f;
#if PY_VERSION_HEX >= 0x02070000
    cobj = PyCapsule_New(tmp.p, sig, 0);
#else
    cobj = PyCObject_FromVoidPtrAndDesc(tmp.p, (void *)sig, 0);
#endif
    if (!cobj)
        goto bad;
    if (PyDict_SetItemString(d, name, cobj) < 0)
        goto bad;
    Py_DECREF(cobj);
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(cobj);
    Py_XDECREF(d);
    return -1;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if !CYTHON_COMPILING_IN_PYPY
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b)))
      return PyInt_AS_LONG(b);
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
     #if CYTHON_USE_PYLONG_INTERNALS
       switch (Py_SIZE(b)) {
       case -1: return -(sdigit)((PyLongObject*)b)->ob_digit[0];
       case  0: return 0;
       case  1: return ((PyLongObject*)b)->ob_digit[0];
       }
     #endif
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
